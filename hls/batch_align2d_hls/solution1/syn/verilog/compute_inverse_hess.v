// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_inverse_hess (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        p_read38,
        p_read39,
        p_read40,
        p_read41,
        p_read42,
        p_read43,
        p_read44,
        p_read45,
        p_read46,
        p_read47,
        p_read48,
        p_read49,
        p_read50,
        p_read51,
        p_read52,
        p_read53,
        p_read54,
        p_read55,
        p_read56,
        p_read57,
        p_read58,
        p_read59,
        p_read60,
        p_read61,
        p_read62,
        p_read63,
        p_read64,
        p_read65,
        p_read66,
        p_read67,
        p_read68,
        p_read69,
        p_read70,
        p_read71,
        p_read72,
        p_read73,
        p_read74,
        p_read75,
        p_read76,
        p_read77,
        p_read78,
        p_read79,
        p_read80,
        p_read81,
        p_read82,
        p_read83,
        p_read84,
        p_read85,
        p_read86,
        p_read87,
        p_read88,
        p_read89,
        p_read90,
        p_read91,
        p_read92,
        p_read93,
        p_read94,
        p_read95,
        p_read96,
        p_read97,
        p_read98,
        p_read99,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49,
        ap_return_50,
        ap_return_51,
        ap_return_52,
        ap_return_53,
        ap_return_54,
        ap_return_55,
        ap_return_56,
        ap_return_57,
        ap_return_58,
        ap_return_59,
        ap_return_60,
        ap_return_61,
        ap_return_62,
        ap_return_63,
        ap_return_64,
        ap_return_65,
        ap_return_66,
        ap_return_67,
        ap_return_68,
        ap_return_69,
        ap_return_70,
        ap_return_71,
        ap_return_72
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_pp0_stage0 = 39'd2;
parameter    ap_ST_fsm_pp0_stage1 = 39'd4;
parameter    ap_ST_fsm_pp0_stage2 = 39'd8;
parameter    ap_ST_fsm_pp0_stage3 = 39'd16;
parameter    ap_ST_fsm_state14 = 39'd32;
parameter    ap_ST_fsm_state15 = 39'd64;
parameter    ap_ST_fsm_state16 = 39'd128;
parameter    ap_ST_fsm_state17 = 39'd256;
parameter    ap_ST_fsm_state18 = 39'd512;
parameter    ap_ST_fsm_state19 = 39'd1024;
parameter    ap_ST_fsm_state20 = 39'd2048;
parameter    ap_ST_fsm_state21 = 39'd4096;
parameter    ap_ST_fsm_state22 = 39'd8192;
parameter    ap_ST_fsm_state23 = 39'd16384;
parameter    ap_ST_fsm_state24 = 39'd32768;
parameter    ap_ST_fsm_state25 = 39'd65536;
parameter    ap_ST_fsm_state26 = 39'd131072;
parameter    ap_ST_fsm_state27 = 39'd262144;
parameter    ap_ST_fsm_state28 = 39'd524288;
parameter    ap_ST_fsm_state29 = 39'd1048576;
parameter    ap_ST_fsm_state30 = 39'd2097152;
parameter    ap_ST_fsm_state31 = 39'd4194304;
parameter    ap_ST_fsm_state32 = 39'd8388608;
parameter    ap_ST_fsm_state33 = 39'd16777216;
parameter    ap_ST_fsm_state34 = 39'd33554432;
parameter    ap_ST_fsm_state35 = 39'd67108864;
parameter    ap_ST_fsm_state36 = 39'd134217728;
parameter    ap_ST_fsm_state37 = 39'd268435456;
parameter    ap_ST_fsm_state38 = 39'd536870912;
parameter    ap_ST_fsm_state39 = 39'd1073741824;
parameter    ap_ST_fsm_state40 = 39'd2147483648;
parameter    ap_ST_fsm_state41 = 39'd4294967296;
parameter    ap_ST_fsm_state42 = 39'd8589934592;
parameter    ap_ST_fsm_state43 = 39'd17179869184;
parameter    ap_ST_fsm_state44 = 39'd34359738368;
parameter    ap_ST_fsm_state45 = 39'd68719476736;
parameter    ap_ST_fsm_state46 = 39'd137438953472;
parameter    ap_ST_fsm_state47 = 39'd274877906944;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
input  [7:0] p_read16;
input  [7:0] p_read17;
input  [7:0] p_read18;
input  [7:0] p_read19;
input  [7:0] p_read20;
input  [7:0] p_read21;
input  [7:0] p_read22;
input  [7:0] p_read23;
input  [7:0] p_read24;
input  [7:0] p_read25;
input  [7:0] p_read26;
input  [7:0] p_read27;
input  [7:0] p_read28;
input  [7:0] p_read29;
input  [7:0] p_read30;
input  [7:0] p_read31;
input  [7:0] p_read32;
input  [7:0] p_read33;
input  [7:0] p_read34;
input  [7:0] p_read35;
input  [7:0] p_read36;
input  [7:0] p_read37;
input  [7:0] p_read38;
input  [7:0] p_read39;
input  [7:0] p_read40;
input  [7:0] p_read41;
input  [7:0] p_read42;
input  [7:0] p_read43;
input  [7:0] p_read44;
input  [7:0] p_read45;
input  [7:0] p_read46;
input  [7:0] p_read47;
input  [7:0] p_read48;
input  [7:0] p_read49;
input  [7:0] p_read50;
input  [7:0] p_read51;
input  [7:0] p_read52;
input  [7:0] p_read53;
input  [7:0] p_read54;
input  [7:0] p_read55;
input  [7:0] p_read56;
input  [7:0] p_read57;
input  [7:0] p_read58;
input  [7:0] p_read59;
input  [7:0] p_read60;
input  [7:0] p_read61;
input  [7:0] p_read62;
input  [7:0] p_read63;
input  [7:0] p_read64;
input  [7:0] p_read65;
input  [7:0] p_read66;
input  [7:0] p_read67;
input  [7:0] p_read68;
input  [7:0] p_read69;
input  [7:0] p_read70;
input  [7:0] p_read71;
input  [7:0] p_read72;
input  [7:0] p_read73;
input  [7:0] p_read74;
input  [7:0] p_read75;
input  [7:0] p_read76;
input  [7:0] p_read77;
input  [7:0] p_read78;
input  [7:0] p_read79;
input  [7:0] p_read80;
input  [7:0] p_read81;
input  [7:0] p_read82;
input  [7:0] p_read83;
input  [7:0] p_read84;
input  [7:0] p_read85;
input  [7:0] p_read86;
input  [7:0] p_read87;
input  [7:0] p_read88;
input  [7:0] p_read89;
input  [7:0] p_read90;
input  [7:0] p_read91;
input  [7:0] p_read92;
input  [7:0] p_read93;
input  [7:0] p_read94;
input  [7:0] p_read95;
input  [7:0] p_read96;
input  [7:0] p_read97;
input  [7:0] p_read98;
input  [7:0] p_read99;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;
output  [31:0] ap_return_3;
output  [31:0] ap_return_4;
output  [31:0] ap_return_5;
output  [31:0] ap_return_6;
output  [31:0] ap_return_7;
output  [31:0] ap_return_8;
output  [31:0] ap_return_9;
output  [31:0] ap_return_10;
output  [31:0] ap_return_11;
output  [31:0] ap_return_12;
output  [31:0] ap_return_13;
output  [31:0] ap_return_14;
output  [31:0] ap_return_15;
output  [31:0] ap_return_16;
output  [31:0] ap_return_17;
output  [31:0] ap_return_18;
output  [31:0] ap_return_19;
output  [31:0] ap_return_20;
output  [31:0] ap_return_21;
output  [31:0] ap_return_22;
output  [31:0] ap_return_23;
output  [31:0] ap_return_24;
output  [31:0] ap_return_25;
output  [31:0] ap_return_26;
output  [31:0] ap_return_27;
output  [31:0] ap_return_28;
output  [31:0] ap_return_29;
output  [31:0] ap_return_30;
output  [31:0] ap_return_31;
output  [31:0] ap_return_32;
output  [31:0] ap_return_33;
output  [31:0] ap_return_34;
output  [31:0] ap_return_35;
output  [31:0] ap_return_36;
output  [31:0] ap_return_37;
output  [31:0] ap_return_38;
output  [31:0] ap_return_39;
output  [31:0] ap_return_40;
output  [31:0] ap_return_41;
output  [31:0] ap_return_42;
output  [31:0] ap_return_43;
output  [31:0] ap_return_44;
output  [31:0] ap_return_45;
output  [31:0] ap_return_46;
output  [31:0] ap_return_47;
output  [31:0] ap_return_48;
output  [31:0] ap_return_49;
output  [31:0] ap_return_50;
output  [31:0] ap_return_51;
output  [31:0] ap_return_52;
output  [31:0] ap_return_53;
output  [31:0] ap_return_54;
output  [31:0] ap_return_55;
output  [31:0] ap_return_56;
output  [31:0] ap_return_57;
output  [31:0] ap_return_58;
output  [31:0] ap_return_59;
output  [31:0] ap_return_60;
output  [31:0] ap_return_61;
output  [31:0] ap_return_62;
output  [31:0] ap_return_63;
output  [31:0] ap_return_64;
output  [31:0] ap_return_65;
output  [31:0] ap_return_66;
output  [31:0] ap_return_67;
output  [31:0] ap_return_68;
output  [31:0] ap_return_69;
output  [31:0] ap_return_70;
output  [31:0] ap_return_71;
output  [31:0] ap_return_72;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;
reg[31:0] ap_return_2;
reg[31:0] ap_return_3;
reg[31:0] ap_return_4;
reg[31:0] ap_return_5;
reg[31:0] ap_return_6;
reg[31:0] ap_return_7;
reg[31:0] ap_return_8;
reg[31:0] ap_return_9;
reg[31:0] ap_return_10;
reg[31:0] ap_return_11;
reg[31:0] ap_return_12;
reg[31:0] ap_return_13;
reg[31:0] ap_return_14;
reg[31:0] ap_return_15;
reg[31:0] ap_return_16;
reg[31:0] ap_return_17;
reg[31:0] ap_return_18;
reg[31:0] ap_return_19;
reg[31:0] ap_return_20;
reg[31:0] ap_return_21;
reg[31:0] ap_return_22;
reg[31:0] ap_return_23;
reg[31:0] ap_return_24;
reg[31:0] ap_return_25;
reg[31:0] ap_return_26;
reg[31:0] ap_return_27;
reg[31:0] ap_return_28;
reg[31:0] ap_return_29;
reg[31:0] ap_return_30;
reg[31:0] ap_return_31;
reg[31:0] ap_return_32;
reg[31:0] ap_return_33;
reg[31:0] ap_return_34;
reg[31:0] ap_return_35;
reg[31:0] ap_return_36;
reg[31:0] ap_return_37;
reg[31:0] ap_return_38;
reg[31:0] ap_return_39;
reg[31:0] ap_return_40;
reg[31:0] ap_return_41;
reg[31:0] ap_return_42;
reg[31:0] ap_return_43;
reg[31:0] ap_return_44;
reg[31:0] ap_return_45;
reg[31:0] ap_return_46;
reg[31:0] ap_return_47;
reg[31:0] ap_return_48;
reg[31:0] ap_return_49;
reg[31:0] ap_return_50;
reg[31:0] ap_return_51;
reg[31:0] ap_return_52;
reg[31:0] ap_return_53;
reg[31:0] ap_return_54;
reg[31:0] ap_return_55;
reg[31:0] ap_return_56;
reg[31:0] ap_return_57;
reg[31:0] ap_return_58;
reg[31:0] ap_return_59;
reg[31:0] ap_return_60;
reg[31:0] ap_return_61;
reg[31:0] ap_return_62;
reg[31:0] ap_return_63;
reg[31:0] ap_return_64;
reg[31:0] ap_return_65;
reg[31:0] ap_return_66;
reg[31:0] ap_return_67;
reg[31:0] ap_return_68;
reg[31:0] ap_return_69;
reg[31:0] ap_return_70;
reg[31:0] ap_return_71;
reg[31:0] ap_return_72;

(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] tmp_s_reg_1246;
reg   [31:0] tmp_67_reg_1258;
reg   [31:0] tmp_68_reg_1270;
reg   [31:0] tmp_69_reg_1282;
reg   [31:0] tmp_70_reg_1294;
reg   [6:0] i_reg_1306;
wire   [31:0] grp_fu_1338_p2;
reg   [31:0] reg_1401;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] exitcond_reg_4245;
reg   [0:0] exitcond_reg_4245_pp0_iter1_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state29;
reg   [31:0] reg_1411;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state12_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state31;
wire   [31:0] grp_fu_1317_p2;
reg   [31:0] reg_1418;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state13_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state39;
reg   [31:0] reg_1430;
wire    ap_CS_fsm_state19;
reg   [31:0] reg_1438;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_1444;
reg   [0:0] exitcond_reg_4245_pp0_iter2_reg;
wire    ap_CS_fsm_state33;
wire   [31:0] grp_fu_1325_p2;
reg   [31:0] reg_1449;
wire   [31:0] grp_fu_1344_p2;
reg   [31:0] reg_1455;
wire   [31:0] grp_fu_1350_p2;
reg   [31:0] reg_1467;
reg   [31:0] reg_1476;
reg   [31:0] reg_1483;
wire   [31:0] grp_fu_1359_p2;
reg   [31:0] reg_1488;
reg   [31:0] reg_1493;
wire   [0:0] exitcond_fu_1498_p2;
wire   [6:0] i_1_fu_1504_p2;
reg   [6:0] i_1_reg_4249;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] tmp_105_fu_1510_p1;
reg   [5:0] tmp_105_reg_4254;
wire   [2:0] tmp_106_fu_1514_p1;
reg   [2:0] tmp_106_reg_4258;
wire   [6:0] tmp_110_fu_1552_p2;
reg   [6:0] tmp_110_reg_4263;
wire   [4:0] tmp_121_cast_fu_1558_p1;
reg   [4:0] tmp_121_cast_reg_4269;
wire   [8:0] tmp_115_fu_1814_p2;
reg   [8:0] tmp_115_reg_4274;
wire  signed [31:0] ref_patch_dx1_fu_1823_p1;
wire   [8:0] tmp_121_fu_2072_p2;
reg   [8:0] tmp_121_reg_4284;
wire  signed [31:0] ref_patch_dy1_fu_2078_p1;
wire   [31:0] grp_fu_1398_p1;
reg   [31:0] ref_patch_dx_reg_4294;
reg   [31:0] ref_patch_dy_reg_4301;
reg   [31:0] tmp_125_reg_4308;
reg   [31:0] tmp_80_reg_4313;
reg   [31:0] tmp_76_reg_4319;
wire    ap_CS_fsm_state21;
reg   [31:0] tmp_83_reg_4325;
wire    ap_CS_fsm_state25;
wire   [31:0] grp_fu_1365_p2;
reg   [31:0] tmp_99_reg_4331;
wire   [31:0] grp_fu_1370_p2;
reg   [31:0] tmp_100_reg_4336;
reg   [31:0] tmp_92_reg_4341;
wire   [31:0] grp_fu_1330_p2;
reg   [31:0] tmp_102_reg_4346;
wire   [31:0] grp_fu_1334_p2;
reg   [31:0] tmp_104_reg_4351;
reg   [31:0] tmp_93_reg_4356;
wire    ap_CS_fsm_state40;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage3_subdone;
reg   [31:0] ap_phi_mux_tmp_s_phi_fu_1250_p4;
wire    ap_block_pp0_stage1;
reg   [31:0] ap_phi_mux_tmp_68_phi_fu_1274_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_tmp_69_phi_fu_1286_p4;
wire    ap_block_pp0_stage3;
reg   [31:0] ap_phi_mux_tmp_70_phi_fu_1298_p4;
wire    ap_block_pp0_stage2;
reg   [6:0] ap_phi_mux_i_phi_fu_1310_p4;
reg   [31:0] ref_patch_dx_60_wri_fu_390;
wire    ap_CS_fsm_state47;
reg   [31:0] ref_patch_dx_61_wri_fu_394;
reg   [31:0] ref_patch_dx_62_wri_fu_398;
reg   [31:0] ref_patch_dx_63_wri_fu_402;
reg   [31:0] ref_patch_dx_59_wri_fu_406;
reg   [31:0] ref_patch_dx_27_wri_fu_410;
reg   [31:0] ref_patch_dx_58_wri_fu_414;
reg   [31:0] ref_patch_dx_57_wri_fu_418;
reg   [31:0] ref_patch_dx_28_wri_fu_422;
reg   [31:0] ref_patch_dx_56_wri_fu_426;
reg   [31:0] ref_patch_dx_55_wri_fu_430;
reg   [31:0] ref_patch_dx_29_wri_fu_434;
reg   [31:0] ref_patch_dx_54_wri_fu_438;
reg   [31:0] ref_patch_dx_53_wri_fu_442;
reg   [31:0] ref_patch_dx_30_wri_fu_446;
reg   [31:0] ref_patch_dx_52_wri_fu_450;
reg   [31:0] ref_patch_dx_51_wri_fu_454;
reg   [31:0] ref_patch_dx_31_wri_fu_458;
reg   [31:0] ref_patch_dx_50_wri_fu_462;
reg   [31:0] ref_patch_dx_49_wri_fu_466;
reg   [31:0] ref_patch_dx_32_wri_fu_470;
reg   [31:0] ref_patch_dx_48_wri_fu_474;
reg   [31:0] ref_patch_dx_47_wri_fu_478;
reg   [31:0] ref_patch_dx_33_wri_fu_482;
reg   [31:0] ref_patch_dx_46_wri_fu_486;
reg   [31:0] ref_patch_dx_45_wri_fu_490;
reg   [31:0] ref_patch_dx_34_wri_fu_494;
reg   [31:0] ref_patch_dx_44_wri_fu_498;
reg   [31:0] ref_patch_dx_43_wri_fu_502;
reg   [31:0] ref_patch_dx_35_wri_fu_506;
reg   [31:0] ref_patch_dx_42_wri_fu_510;
reg   [31:0] ref_patch_dx_41_wri_fu_514;
reg   [31:0] ref_patch_dx_36_wri_fu_518;
reg   [31:0] ref_patch_dx_40_wri_fu_522;
reg   [31:0] ref_patch_dx_39_wri_fu_526;
reg   [31:0] ref_patch_dx_37_wri_fu_530;
reg   [31:0] ref_patch_dx_38_wri_fu_534;
reg   [31:0] ref_patch_dx_26_wri_fu_538;
reg   [31:0] ref_patch_dx_25_wri_fu_542;
reg   [31:0] ref_patch_dx_24_wri_fu_546;
reg   [31:0] ref_patch_dx_23_wri_fu_550;
reg   [31:0] ref_patch_dx_22_wri_fu_554;
reg   [31:0] ref_patch_dx_21_wri_fu_558;
reg   [31:0] ref_patch_dx_20_wri_fu_562;
reg   [31:0] ref_patch_dx_19_wri_fu_566;
reg   [31:0] ref_patch_dx_18_wri_fu_570;
reg   [31:0] ref_patch_dx_17_wri_fu_574;
reg   [31:0] ref_patch_dx_16_wri_fu_578;
reg   [31:0] ref_patch_dx_15_wri_fu_582;
reg   [31:0] ref_patch_dx_14_wri_fu_586;
reg   [31:0] ref_patch_dx_13_wri_fu_590;
reg   [31:0] ref_patch_dx_12_wri_fu_594;
reg   [31:0] ref_patch_dx_0_writ_fu_598;
reg   [31:0] ref_patch_dx_11_wri_fu_602;
reg   [31:0] ref_patch_dx_10_wri_fu_606;
reg   [31:0] ref_patch_dx_1_writ_fu_610;
reg   [31:0] ref_patch_dx_9_writ_fu_614;
reg   [31:0] ref_patch_dx_8_writ_fu_618;
reg   [31:0] ref_patch_dx_2_writ_fu_622;
reg   [31:0] ref_patch_dx_7_writ_fu_626;
reg   [31:0] ref_patch_dx_6_writ_fu_630;
reg   [31:0] ref_patch_dx_3_writ_fu_634;
reg   [31:0] ref_patch_dx_5_writ_fu_638;
reg   [31:0] ref_patch_dx_4_writ_fu_642;
reg   [31:0] grp_fu_1317_p0;
reg   [31:0] grp_fu_1317_p1;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state36;
reg   [31:0] grp_fu_1325_p0;
reg   [31:0] grp_fu_1325_p1;
reg   [31:0] grp_fu_1338_p0;
reg   [31:0] grp_fu_1338_p1;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state22;
reg   [31:0] grp_fu_1344_p0;
reg   [31:0] grp_fu_1344_p1;
reg   [31:0] grp_fu_1350_p0;
reg   [31:0] grp_fu_1350_p1;
reg   [31:0] grp_fu_1359_p0;
reg   [31:0] grp_fu_1359_p1;
wire   [31:0] grp_fu_1378_p0;
wire   [31:0] grp_fu_1390_p0;
reg  signed [31:0] grp_fu_1398_p0;
wire   [2:0] tmp_107_fu_1518_p4;
wire   [3:0] tmp_108_fu_1528_p3;
wire   [5:0] tmp_109_fu_1540_p3;
wire   [6:0] tmp_118_cast_fu_1548_p1;
wire   [6:0] tmp_117_cast_fu_1536_p1;
wire   [4:0] tmp73_fu_1562_p2;
wire   [6:0] tmp100_cast_fu_1568_p1;
wire   [6:0] tmp_112_fu_1578_p101;
wire   [7:0] tmp_112_fu_1578_p102;
wire   [4:0] tmp101_fu_1688_p2;
wire   [6:0] tmp101_cast_fu_1694_p1;
wire   [6:0] tmp_114_fu_1704_p101;
wire   [7:0] tmp_114_fu_1704_p102;
wire   [8:0] tmp_124_cast_fu_1684_p1;
wire   [8:0] tmp_128_cast_fu_1810_p1;
wire   [4:0] tmp103_fu_1827_p2;
wire   [6:0] tmp103_cast_fu_1832_p1;
wire   [6:0] tmp_117_fu_1841_p101;
wire   [7:0] tmp_117_fu_1841_p102;
wire   [6:0] tmp_121_cast1_fu_1820_p1;
wire   [6:0] tmp_118_fu_1951_p2;
wire   [6:0] tmp_120_fu_1962_p101;
wire   [7:0] tmp_120_fu_1962_p102;
wire   [8:0] tmp_134_cast_fu_1947_p1;
wire   [8:0] tmp_138_cast_fu_2068_p1;
wire   [31:0] tmp_127_to_int_fu_2402_p1;
wire   [31:0] tmp_127_neg_fu_2406_p2;
wire   [31:0] tmp_136_to_int_fu_2417_p1;
wire   [31:0] tmp_136_neg_fu_2420_p2;
wire   [31:0] grp_fu_1374_p2;
wire   [31:0] grp_fu_1378_p2;
wire   [31:0] grp_fu_1382_p2;
wire   [31:0] grp_fu_1386_p2;
wire   [31:0] grp_fu_1390_p2;
wire   [31:0] grp_fu_1394_p2;
reg   [1:0] grp_fu_1317_opcode;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
reg   [1:0] grp_fu_1325_opcode;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [31:0] ap_return_3_preg;
reg   [31:0] ap_return_4_preg;
reg   [31:0] ap_return_5_preg;
reg   [31:0] ap_return_6_preg;
reg   [31:0] ap_return_7_preg;
reg   [31:0] ap_return_8_preg;
reg   [31:0] ap_return_9_preg;
reg   [31:0] ap_return_10_preg;
reg   [31:0] ap_return_11_preg;
reg   [31:0] ap_return_12_preg;
reg   [31:0] ap_return_13_preg;
reg   [31:0] ap_return_14_preg;
reg   [31:0] ap_return_15_preg;
reg   [31:0] ap_return_16_preg;
reg   [31:0] ap_return_17_preg;
reg   [31:0] ap_return_18_preg;
reg   [31:0] ap_return_19_preg;
reg   [31:0] ap_return_20_preg;
reg   [31:0] ap_return_21_preg;
reg   [31:0] ap_return_22_preg;
reg   [31:0] ap_return_23_preg;
reg   [31:0] ap_return_24_preg;
reg   [31:0] ap_return_25_preg;
reg   [31:0] ap_return_26_preg;
reg   [31:0] ap_return_27_preg;
reg   [31:0] ap_return_28_preg;
reg   [31:0] ap_return_29_preg;
reg   [31:0] ap_return_30_preg;
reg   [31:0] ap_return_31_preg;
reg   [31:0] ap_return_32_preg;
reg   [31:0] ap_return_33_preg;
reg   [31:0] ap_return_34_preg;
reg   [31:0] ap_return_35_preg;
reg   [31:0] ap_return_36_preg;
reg   [31:0] ap_return_37_preg;
reg   [31:0] ap_return_38_preg;
reg   [31:0] ap_return_39_preg;
reg   [31:0] ap_return_40_preg;
reg   [31:0] ap_return_41_preg;
reg   [31:0] ap_return_42_preg;
reg   [31:0] ap_return_43_preg;
reg   [31:0] ap_return_44_preg;
reg   [31:0] ap_return_45_preg;
reg   [31:0] ap_return_46_preg;
reg   [31:0] ap_return_47_preg;
reg   [31:0] ap_return_48_preg;
reg   [31:0] ap_return_49_preg;
reg   [31:0] ap_return_50_preg;
reg   [31:0] ap_return_51_preg;
reg   [31:0] ap_return_52_preg;
reg   [31:0] ap_return_53_preg;
reg   [31:0] ap_return_54_preg;
reg   [31:0] ap_return_55_preg;
reg   [31:0] ap_return_56_preg;
reg   [31:0] ap_return_57_preg;
reg   [31:0] ap_return_58_preg;
reg   [31:0] ap_return_59_preg;
reg   [31:0] ap_return_60_preg;
reg   [31:0] ap_return_61_preg;
reg   [31:0] ap_return_62_preg;
reg   [31:0] ap_return_63_preg;
reg   [31:0] ap_return_64_preg;
reg   [31:0] ap_return_65_preg;
reg   [31:0] ap_return_66_preg;
reg   [31:0] ap_return_67_preg;
reg   [31:0] ap_return_68_preg;
reg   [31:0] ap_return_69_preg;
reg   [31:0] ap_return_70_preg;
reg   [31:0] ap_return_71_preg;
reg   [31:0] ap_return_72_preg;
reg   [38:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
#0 ap_return_2_preg = 32'd0;
#0 ap_return_3_preg = 32'd0;
#0 ap_return_4_preg = 32'd0;
#0 ap_return_5_preg = 32'd0;
#0 ap_return_6_preg = 32'd0;
#0 ap_return_7_preg = 32'd0;
#0 ap_return_8_preg = 32'd0;
#0 ap_return_9_preg = 32'd0;
#0 ap_return_10_preg = 32'd0;
#0 ap_return_11_preg = 32'd0;
#0 ap_return_12_preg = 32'd0;
#0 ap_return_13_preg = 32'd0;
#0 ap_return_14_preg = 32'd0;
#0 ap_return_15_preg = 32'd0;
#0 ap_return_16_preg = 32'd0;
#0 ap_return_17_preg = 32'd0;
#0 ap_return_18_preg = 32'd0;
#0 ap_return_19_preg = 32'd0;
#0 ap_return_20_preg = 32'd0;
#0 ap_return_21_preg = 32'd0;
#0 ap_return_22_preg = 32'd0;
#0 ap_return_23_preg = 32'd0;
#0 ap_return_24_preg = 32'd0;
#0 ap_return_25_preg = 32'd0;
#0 ap_return_26_preg = 32'd0;
#0 ap_return_27_preg = 32'd0;
#0 ap_return_28_preg = 32'd0;
#0 ap_return_29_preg = 32'd0;
#0 ap_return_30_preg = 32'd0;
#0 ap_return_31_preg = 32'd0;
#0 ap_return_32_preg = 32'd0;
#0 ap_return_33_preg = 32'd0;
#0 ap_return_34_preg = 32'd0;
#0 ap_return_35_preg = 32'd0;
#0 ap_return_36_preg = 32'd0;
#0 ap_return_37_preg = 32'd0;
#0 ap_return_38_preg = 32'd0;
#0 ap_return_39_preg = 32'd0;
#0 ap_return_40_preg = 32'd0;
#0 ap_return_41_preg = 32'd0;
#0 ap_return_42_preg = 32'd0;
#0 ap_return_43_preg = 32'd0;
#0 ap_return_44_preg = 32'd0;
#0 ap_return_45_preg = 32'd0;
#0 ap_return_46_preg = 32'd0;
#0 ap_return_47_preg = 32'd0;
#0 ap_return_48_preg = 32'd0;
#0 ap_return_49_preg = 32'd0;
#0 ap_return_50_preg = 32'd0;
#0 ap_return_51_preg = 32'd0;
#0 ap_return_52_preg = 32'd0;
#0 ap_return_53_preg = 32'd0;
#0 ap_return_54_preg = 32'd0;
#0 ap_return_55_preg = 32'd0;
#0 ap_return_56_preg = 32'd0;
#0 ap_return_57_preg = 32'd0;
#0 ap_return_58_preg = 32'd0;
#0 ap_return_59_preg = 32'd0;
#0 ap_return_60_preg = 32'd0;
#0 ap_return_61_preg = 32'd0;
#0 ap_return_62_preg = 32'd0;
#0 ap_return_63_preg = 32'd0;
#0 ap_return_64_preg = 32'd0;
#0 ap_return_65_preg = 32'd0;
#0 ap_return_66_preg = 32'd0;
#0 ap_return_67_preg = 32'd0;
#0 ap_return_68_preg = 32'd0;
#0 ap_return_69_preg = 32'd0;
#0 ap_return_70_preg = 32'd0;
#0 ap_return_71_preg = 32'd0;
#0 ap_return_72_preg = 32'd0;
end

batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1317_p0),
    .din1(grp_fu_1317_p1),
    .opcode(grp_fu_1317_opcode),
    .ce(1'b1),
    .dout(grp_fu_1317_p2)
);

batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1325_p0),
    .din1(grp_fu_1325_p1),
    .opcode(grp_fu_1325_opcode),
    .ce(1'b1),
    .dout(grp_fu_1325_p2)
);

batch_align2D_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fsub_32ns_32ns_32_4_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1455),
    .din1(tmp_80_reg_4313),
    .ce(1'b1),
    .dout(grp_fu_1330_p2)
);

batch_align2D_fsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fsub_32ns_32ns_32_4_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_76_reg_4319),
    .din1(reg_1401),
    .ce(1'b1),
    .dout(grp_fu_1334_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1338_p0),
    .din1(grp_fu_1338_p1),
    .ce(1'b1),
    .dout(grp_fu_1338_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1344_p0),
    .din1(grp_fu_1344_p1),
    .ce(1'b1),
    .dout(grp_fu_1344_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1350_p0),
    .din1(grp_fu_1350_p1),
    .ce(1'b1),
    .dout(grp_fu_1350_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1359_p0),
    .din1(grp_fu_1359_p1),
    .ce(1'b1),
    .dout(grp_fu_1359_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1430),
    .din1(32'd1115684864),
    .ce(1'b1),
    .dout(grp_fu_1365_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1455),
    .din1(reg_1455),
    .ce(1'b1),
    .dout(grp_fu_1370_p2)
);

batch_align2D_fdiv_32ns_32ns_32_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fdiv_32ns_32ns_32_8_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_93_reg_4356),
    .din1(reg_1418),
    .ce(1'b1),
    .dout(grp_fu_1374_p2)
);

batch_align2D_fdiv_32ns_32ns_32_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fdiv_32ns_32ns_32_8_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1378_p0),
    .din1(reg_1418),
    .ce(1'b1),
    .dout(grp_fu_1378_p2)
);

batch_align2D_fdiv_32ns_32ns_32_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fdiv_32ns_32ns_32_8_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1438),
    .din1(reg_1418),
    .ce(1'b1),
    .dout(grp_fu_1382_p2)
);

batch_align2D_fdiv_32ns_32ns_32_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fdiv_32ns_32ns_32_8_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_1449),
    .din1(reg_1418),
    .ce(1'b1),
    .dout(grp_fu_1386_p2)
);

batch_align2D_fdiv_32ns_32ns_32_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fdiv_32ns_32ns_32_8_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1390_p0),
    .din1(reg_1418),
    .ce(1'b1),
    .dout(grp_fu_1390_p2)
);

batch_align2D_fdiv_32ns_32ns_32_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fdiv_32ns_32ns_32_8_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_104_reg_4351),
    .din1(reg_1418),
    .ce(1'b1),
    .dout(grp_fu_1394_p2)
);

batch_align2D_sitofp_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_sitofp_32s_32_3_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1398_p0),
    .ce(1'b1),
    .dout(grp_fu_1398_p1)
);

batch_align2D_mux_1007_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_1007_8_1_1_U18(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(p_read25),
    .din26(p_read26),
    .din27(p_read27),
    .din28(p_read28),
    .din29(p_read29),
    .din30(p_read30),
    .din31(p_read31),
    .din32(p_read32),
    .din33(p_read33),
    .din34(p_read34),
    .din35(p_read35),
    .din36(p_read36),
    .din37(p_read37),
    .din38(p_read38),
    .din39(p_read39),
    .din40(p_read40),
    .din41(p_read41),
    .din42(p_read42),
    .din43(p_read43),
    .din44(p_read44),
    .din45(p_read45),
    .din46(p_read46),
    .din47(p_read47),
    .din48(p_read48),
    .din49(p_read49),
    .din50(p_read50),
    .din51(p_read51),
    .din52(p_read52),
    .din53(p_read53),
    .din54(p_read54),
    .din55(p_read55),
    .din56(p_read56),
    .din57(p_read57),
    .din58(p_read58),
    .din59(p_read59),
    .din60(p_read60),
    .din61(p_read61),
    .din62(p_read62),
    .din63(p_read63),
    .din64(p_read64),
    .din65(p_read65),
    .din66(p_read66),
    .din67(p_read67),
    .din68(p_read68),
    .din69(p_read69),
    .din70(p_read70),
    .din71(p_read71),
    .din72(p_read72),
    .din73(p_read73),
    .din74(p_read74),
    .din75(p_read75),
    .din76(p_read76),
    .din77(p_read77),
    .din78(p_read78),
    .din79(p_read79),
    .din80(p_read80),
    .din81(p_read81),
    .din82(p_read82),
    .din83(p_read83),
    .din84(p_read84),
    .din85(p_read85),
    .din86(p_read86),
    .din87(p_read87),
    .din88(p_read88),
    .din89(p_read89),
    .din90(p_read90),
    .din91(p_read91),
    .din92(p_read92),
    .din93(p_read93),
    .din94(p_read94),
    .din95(p_read95),
    .din96(p_read96),
    .din97(p_read97),
    .din98(p_read98),
    .din99(p_read99),
    .din100(tmp_112_fu_1578_p101),
    .dout(tmp_112_fu_1578_p102)
);

batch_align2D_mux_1007_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_1007_8_1_1_U19(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(p_read25),
    .din26(p_read26),
    .din27(p_read27),
    .din28(p_read28),
    .din29(p_read29),
    .din30(p_read30),
    .din31(p_read31),
    .din32(p_read32),
    .din33(p_read33),
    .din34(p_read34),
    .din35(p_read35),
    .din36(p_read36),
    .din37(p_read37),
    .din38(p_read38),
    .din39(p_read39),
    .din40(p_read40),
    .din41(p_read41),
    .din42(p_read42),
    .din43(p_read43),
    .din44(p_read44),
    .din45(p_read45),
    .din46(p_read46),
    .din47(p_read47),
    .din48(p_read48),
    .din49(p_read49),
    .din50(p_read50),
    .din51(p_read51),
    .din52(p_read52),
    .din53(p_read53),
    .din54(p_read54),
    .din55(p_read55),
    .din56(p_read56),
    .din57(p_read57),
    .din58(p_read58),
    .din59(p_read59),
    .din60(p_read60),
    .din61(p_read61),
    .din62(p_read62),
    .din63(p_read63),
    .din64(p_read64),
    .din65(p_read65),
    .din66(p_read66),
    .din67(p_read67),
    .din68(p_read68),
    .din69(p_read69),
    .din70(p_read70),
    .din71(p_read71),
    .din72(p_read72),
    .din73(p_read73),
    .din74(p_read74),
    .din75(p_read75),
    .din76(p_read76),
    .din77(p_read77),
    .din78(p_read78),
    .din79(p_read79),
    .din80(p_read80),
    .din81(p_read81),
    .din82(p_read82),
    .din83(p_read83),
    .din84(p_read84),
    .din85(p_read85),
    .din86(p_read86),
    .din87(p_read87),
    .din88(p_read88),
    .din89(p_read89),
    .din90(p_read90),
    .din91(p_read91),
    .din92(p_read92),
    .din93(p_read93),
    .din94(p_read94),
    .din95(p_read95),
    .din96(p_read96),
    .din97(p_read97),
    .din98(p_read98),
    .din99(p_read99),
    .din100(tmp_114_fu_1704_p101),
    .dout(tmp_114_fu_1704_p102)
);

batch_align2D_mux_1007_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_1007_8_1_1_U20(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(p_read25),
    .din26(p_read26),
    .din27(p_read27),
    .din28(p_read28),
    .din29(p_read29),
    .din30(p_read30),
    .din31(p_read31),
    .din32(p_read32),
    .din33(p_read33),
    .din34(p_read34),
    .din35(p_read35),
    .din36(p_read36),
    .din37(p_read37),
    .din38(p_read38),
    .din39(p_read39),
    .din40(p_read40),
    .din41(p_read41),
    .din42(p_read42),
    .din43(p_read43),
    .din44(p_read44),
    .din45(p_read45),
    .din46(p_read46),
    .din47(p_read47),
    .din48(p_read48),
    .din49(p_read49),
    .din50(p_read50),
    .din51(p_read51),
    .din52(p_read52),
    .din53(p_read53),
    .din54(p_read54),
    .din55(p_read55),
    .din56(p_read56),
    .din57(p_read57),
    .din58(p_read58),
    .din59(p_read59),
    .din60(p_read60),
    .din61(p_read61),
    .din62(p_read62),
    .din63(p_read63),
    .din64(p_read64),
    .din65(p_read65),
    .din66(p_read66),
    .din67(p_read67),
    .din68(p_read68),
    .din69(p_read69),
    .din70(p_read70),
    .din71(p_read71),
    .din72(p_read72),
    .din73(p_read73),
    .din74(p_read74),
    .din75(p_read75),
    .din76(p_read76),
    .din77(p_read77),
    .din78(p_read78),
    .din79(p_read79),
    .din80(p_read80),
    .din81(p_read81),
    .din82(p_read82),
    .din83(p_read83),
    .din84(p_read84),
    .din85(p_read85),
    .din86(p_read86),
    .din87(p_read87),
    .din88(p_read88),
    .din89(p_read89),
    .din90(p_read90),
    .din91(p_read91),
    .din92(p_read92),
    .din93(p_read93),
    .din94(p_read94),
    .din95(p_read95),
    .din96(p_read96),
    .din97(p_read97),
    .din98(p_read98),
    .din99(p_read99),
    .din100(tmp_117_fu_1841_p101),
    .dout(tmp_117_fu_1841_p102)
);

batch_align2D_mux_1007_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_1007_8_1_1_U21(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(p_read25),
    .din26(p_read26),
    .din27(p_read27),
    .din28(p_read28),
    .din29(p_read29),
    .din30(p_read30),
    .din31(p_read31),
    .din32(p_read32),
    .din33(p_read33),
    .din34(p_read34),
    .din35(p_read35),
    .din36(p_read36),
    .din37(p_read37),
    .din38(p_read38),
    .din39(p_read39),
    .din40(p_read40),
    .din41(p_read41),
    .din42(p_read42),
    .din43(p_read43),
    .din44(p_read44),
    .din45(p_read45),
    .din46(p_read46),
    .din47(p_read47),
    .din48(p_read48),
    .din49(p_read49),
    .din50(p_read50),
    .din51(p_read51),
    .din52(p_read52),
    .din53(p_read53),
    .din54(p_read54),
    .din55(p_read55),
    .din56(p_read56),
    .din57(p_read57),
    .din58(p_read58),
    .din59(p_read59),
    .din60(p_read60),
    .din61(p_read61),
    .din62(p_read62),
    .din63(p_read63),
    .din64(p_read64),
    .din65(p_read65),
    .din66(p_read66),
    .din67(p_read67),
    .din68(p_read68),
    .din69(p_read69),
    .din70(p_read70),
    .din71(p_read71),
    .din72(p_read72),
    .din73(p_read73),
    .din74(p_read74),
    .din75(p_read75),
    .din76(p_read76),
    .din77(p_read77),
    .din78(p_read78),
    .din79(p_read79),
    .din80(p_read80),
    .din81(p_read81),
    .din82(p_read82),
    .din83(p_read83),
    .din84(p_read84),
    .din85(p_read85),
    .din86(p_read86),
    .din87(p_read87),
    .din88(p_read88),
    .din89(p_read89),
    .din90(p_read90),
    .din91(p_read91),
    .din92(p_read92),
    .din93(p_read93),
    .din94(p_read94),
    .din95(p_read95),
    .din96(p_read96),
    .din97(p_read97),
    .din98(p_read98),
    .din99(p_read99),
    .din100(tmp_120_fu_1962_p101),
    .dout(tmp_120_fu_1962_p102)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_0_preg <= grp_fu_1374_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_10_preg <= ref_patch_dx_1_writ_fu_610;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_11_preg <= ref_patch_dx_2_writ_fu_622;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_12_preg <= ref_patch_dx_3_writ_fu_634;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_13_preg <= ref_patch_dx_4_writ_fu_642;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_14_preg <= ref_patch_dx_5_writ_fu_638;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_15_preg <= ref_patch_dx_6_writ_fu_630;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_16_preg <= ref_patch_dx_7_writ_fu_626;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_17_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_17_preg <= ref_patch_dx_8_writ_fu_618;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_18_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_18_preg <= ref_patch_dx_9_writ_fu_614;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_19_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_19_preg <= ref_patch_dx_10_wri_fu_606;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_1_preg <= grp_fu_1378_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_20_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_20_preg <= ref_patch_dx_11_wri_fu_602;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_21_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_21_preg <= ref_patch_dx_12_wri_fu_594;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_22_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_22_preg <= ref_patch_dx_13_wri_fu_590;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_23_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_23_preg <= ref_patch_dx_14_wri_fu_586;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_24_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_24_preg <= ref_patch_dx_15_wri_fu_582;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_25_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_25_preg <= ref_patch_dx_16_wri_fu_578;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_26_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_26_preg <= ref_patch_dx_17_wri_fu_574;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_27_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_27_preg <= ref_patch_dx_18_wri_fu_570;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_28_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_28_preg <= ref_patch_dx_19_wri_fu_566;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_29_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_29_preg <= ref_patch_dx_20_wri_fu_562;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_2_preg <= grp_fu_1382_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_30_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_30_preg <= ref_patch_dx_21_wri_fu_558;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_31_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_31_preg <= ref_patch_dx_22_wri_fu_554;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_32_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_32_preg <= ref_patch_dx_23_wri_fu_550;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_33_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_33_preg <= ref_patch_dx_24_wri_fu_546;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_34_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_34_preg <= ref_patch_dx_25_wri_fu_542;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_35_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_35_preg <= ref_patch_dx_26_wri_fu_538;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_36_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_36_preg <= ref_patch_dx_27_wri_fu_410;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_37_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_37_preg <= ref_patch_dx_28_wri_fu_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_38_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_38_preg <= ref_patch_dx_29_wri_fu_434;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_39_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_39_preg <= ref_patch_dx_30_wri_fu_446;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_3_preg <= grp_fu_1378_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_40_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_40_preg <= ref_patch_dx_31_wri_fu_458;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_41_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_41_preg <= ref_patch_dx_32_wri_fu_470;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_42_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_42_preg <= ref_patch_dx_33_wri_fu_482;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_43_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_43_preg <= ref_patch_dx_34_wri_fu_494;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_44_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_44_preg <= ref_patch_dx_35_wri_fu_506;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_45_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_45_preg <= ref_patch_dx_36_wri_fu_518;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_46_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_46_preg <= ref_patch_dx_37_wri_fu_530;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_47_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_47_preg <= ref_patch_dx_38_wri_fu_534;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_48_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_48_preg <= ref_patch_dx_39_wri_fu_526;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_49_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_49_preg <= ref_patch_dx_40_wri_fu_522;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_4_preg <= grp_fu_1386_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_50_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_50_preg <= ref_patch_dx_41_wri_fu_514;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_51_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_51_preg <= ref_patch_dx_42_wri_fu_510;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_52_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_52_preg <= ref_patch_dx_43_wri_fu_502;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_53_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_53_preg <= ref_patch_dx_44_wri_fu_498;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_54_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_54_preg <= ref_patch_dx_45_wri_fu_490;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_55_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_55_preg <= ref_patch_dx_46_wri_fu_486;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_56_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_56_preg <= ref_patch_dx_47_wri_fu_478;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_57_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_57_preg <= ref_patch_dx_48_wri_fu_474;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_58_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_58_preg <= ref_patch_dx_49_wri_fu_466;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_59_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_59_preg <= ref_patch_dx_50_wri_fu_462;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_5_preg <= grp_fu_1390_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_60_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_60_preg <= ref_patch_dx_51_wri_fu_454;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_61_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_61_preg <= ref_patch_dx_52_wri_fu_450;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_62_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_62_preg <= ref_patch_dx_53_wri_fu_442;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_63_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_63_preg <= ref_patch_dx_54_wri_fu_438;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_64_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_64_preg <= ref_patch_dx_55_wri_fu_430;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_65_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_65_preg <= ref_patch_dx_56_wri_fu_426;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_66_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_66_preg <= ref_patch_dx_57_wri_fu_418;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_67_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_67_preg <= ref_patch_dx_58_wri_fu_414;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_68_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_68_preg <= ref_patch_dx_59_wri_fu_406;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_69_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_69_preg <= ref_patch_dx_60_wri_fu_390;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_6_preg <= grp_fu_1382_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_70_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_70_preg <= ref_patch_dx_61_wri_fu_394;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_71_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_71_preg <= ref_patch_dx_62_wri_fu_398;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_72_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_72_preg <= ref_patch_dx_63_wri_fu_402;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_7_preg <= grp_fu_1390_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_8_preg <= grp_fu_1394_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_return_9_preg <= ref_patch_dx_0_writ_fu_598;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_1306 <= 7'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_4245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_reg_1306 <= i_1_reg_4249;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_67_reg_1258 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_67_reg_1258 <= grp_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_68_reg_1270 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_68_reg_1270 <= reg_1418;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_69_reg_1282 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_69_reg_1282 <= tmp_125_reg_4308;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_70_reg_1294 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_70_reg_1294 <= reg_1444;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_s_reg_1246 <= 32'd0;
    end else if (((exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_s_reg_1246 <= reg_1438;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_reg_4245 <= exitcond_fu_1498_p2;
        exitcond_reg_4245_pp0_iter1_reg <= exitcond_reg_4245;
        exitcond_reg_4245_pp0_iter2_reg <= exitcond_reg_4245_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_4249 <= i_1_fu_1504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_0_writ_fu_598 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd10) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_10_wri_fu_606 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd11) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_11_wri_fu_602 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd12) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_12_wri_fu_594 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd13) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_13_wri_fu_590 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd14) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_14_wri_fu_586 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd15) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_15_wri_fu_582 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd16) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_16_wri_fu_578 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd17) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_17_wri_fu_574 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd18) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_18_wri_fu_570 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd19) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_19_wri_fu_566 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_1_writ_fu_610 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd20) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_20_wri_fu_562 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd21) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_21_wri_fu_558 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd22) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_22_wri_fu_554 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd23) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_23_wri_fu_550 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd24) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_24_wri_fu_546 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd25) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_25_wri_fu_542 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd26) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_26_wri_fu_538 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd27) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_27_wri_fu_410 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd28) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_28_wri_fu_422 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd29) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_29_wri_fu_434 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd2) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_2_writ_fu_622 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd30) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_30_wri_fu_446 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd31) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_31_wri_fu_458 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd32) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_32_wri_fu_470 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd33) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_33_wri_fu_482 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd34) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_34_wri_fu_494 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd35) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_35_wri_fu_506 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd36) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_36_wri_fu_518 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd37) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_37_wri_fu_530 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd38) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_38_wri_fu_534 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd39) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_39_wri_fu_526 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_3_writ_fu_634 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd40) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_40_wri_fu_522 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd41) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_41_wri_fu_514 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd42) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_42_wri_fu_510 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd43) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_43_wri_fu_502 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd44) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_44_wri_fu_498 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd45) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_45_wri_fu_490 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd46) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_46_wri_fu_486 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd47) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_47_wri_fu_478 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd48) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_48_wri_fu_474 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd49) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_49_wri_fu_466 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd4) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_4_writ_fu_642 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd50) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_50_wri_fu_462 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd51) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_51_wri_fu_454 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd52) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_52_wri_fu_450 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd53) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_53_wri_fu_442 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd54) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_54_wri_fu_438 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd55) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_55_wri_fu_430 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd56) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_56_wri_fu_426 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd57) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_57_wri_fu_418 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd58) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_58_wri_fu_414 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd59) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_59_wri_fu_406 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd5) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_5_writ_fu_638 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd60) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_60_wri_fu_390 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd61) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_61_wri_fu_394 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd62) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_62_wri_fu_398 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd63) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_63_wri_fu_402 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd6) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_6_writ_fu_630 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd7) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_7_writ_fu_626 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd8) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_8_writ_fu_618 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_105_reg_4254 == 6'd9) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_9_writ_fu_614 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ref_patch_dx_reg_4294 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_4245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ref_patch_dy_reg_4301 <= grp_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state15) | ((exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_1401 <= grp_fu_1338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_1411 <= grp_fu_1338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state31) | ((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_1418 <= grp_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_1430 <= grp_fu_1338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_1438 <= grp_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_1444 <= grp_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_1449 <= grp_fu_1325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_1455 <= grp_fu_1344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_1467 <= grp_fu_1350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_1476 <= grp_fu_1344_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_1483 <= grp_fu_1350_p2;
        reg_1488 <= grp_fu_1359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_1493 <= grp_fu_1338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_100_reg_4336 <= grp_fu_1370_p2;
        tmp_99_reg_4331 <= grp_fu_1365_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_102_reg_4346 <= grp_fu_1330_p2;
        tmp_104_reg_4351 <= grp_fu_1334_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_fu_1498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_105_reg_4254 <= tmp_105_fu_1510_p1;
        tmp_106_reg_4258 <= tmp_106_fu_1514_p1;
        tmp_110_reg_4263[6 : 1] <= tmp_110_fu_1552_p2[6 : 1];
        tmp_115_reg_4274 <= tmp_115_fu_1814_p2;
        tmp_121_cast_reg_4269[2 : 0] <= tmp_121_cast_fu_1558_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_reg_4245 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_121_reg_4284 <= tmp_121_fu_2072_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_125_reg_4308 <= grp_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_76_reg_4319 <= grp_fu_1338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_80_reg_4313 <= grp_fu_1344_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_83_reg_4325 <= grp_fu_1338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_92_reg_4341 <= grp_fu_1359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp_93_reg_4356 <= grp_fu_1325_p2;
    end
end

always @ (*) begin
    if ((exitcond_fu_1498_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_reg_4245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_1310_p4 = i_1_reg_4249;
    end else begin
        ap_phi_mux_i_phi_fu_1310_p4 = i_reg_1306;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tmp_68_phi_fu_1274_p4 = reg_1418;
    end else begin
        ap_phi_mux_tmp_68_phi_fu_1274_p4 = tmp_68_reg_1270;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_mux_tmp_69_phi_fu_1286_p4 = tmp_125_reg_4308;
    end else begin
        ap_phi_mux_tmp_69_phi_fu_1286_p4 = tmp_69_reg_1282;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_mux_tmp_70_phi_fu_1298_p4 = reg_1444;
    end else begin
        ap_phi_mux_tmp_70_phi_fu_1298_p4 = tmp_70_reg_1294;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (exitcond_reg_4245_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_tmp_s_phi_fu_1250_p4 = reg_1438;
    end else begin
        ap_phi_mux_tmp_s_phi_fu_1250_p4 = tmp_s_reg_1246;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_0 = grp_fu_1374_p2;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_1 = grp_fu_1378_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_10 = ref_patch_dx_1_writ_fu_610;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_11 = ref_patch_dx_2_writ_fu_622;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_12 = ref_patch_dx_3_writ_fu_634;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_13 = ref_patch_dx_4_writ_fu_642;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_14 = ref_patch_dx_5_writ_fu_638;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_15 = ref_patch_dx_6_writ_fu_630;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_16 = ref_patch_dx_7_writ_fu_626;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_17 = ref_patch_dx_8_writ_fu_618;
    end else begin
        ap_return_17 = ap_return_17_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_18 = ref_patch_dx_9_writ_fu_614;
    end else begin
        ap_return_18 = ap_return_18_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_19 = ref_patch_dx_10_wri_fu_606;
    end else begin
        ap_return_19 = ap_return_19_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_2 = grp_fu_1382_p2;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_20 = ref_patch_dx_11_wri_fu_602;
    end else begin
        ap_return_20 = ap_return_20_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_21 = ref_patch_dx_12_wri_fu_594;
    end else begin
        ap_return_21 = ap_return_21_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_22 = ref_patch_dx_13_wri_fu_590;
    end else begin
        ap_return_22 = ap_return_22_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_23 = ref_patch_dx_14_wri_fu_586;
    end else begin
        ap_return_23 = ap_return_23_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_24 = ref_patch_dx_15_wri_fu_582;
    end else begin
        ap_return_24 = ap_return_24_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_25 = ref_patch_dx_16_wri_fu_578;
    end else begin
        ap_return_25 = ap_return_25_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_26 = ref_patch_dx_17_wri_fu_574;
    end else begin
        ap_return_26 = ap_return_26_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_27 = ref_patch_dx_18_wri_fu_570;
    end else begin
        ap_return_27 = ap_return_27_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_28 = ref_patch_dx_19_wri_fu_566;
    end else begin
        ap_return_28 = ap_return_28_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_29 = ref_patch_dx_20_wri_fu_562;
    end else begin
        ap_return_29 = ap_return_29_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_3 = grp_fu_1378_p2;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_30 = ref_patch_dx_21_wri_fu_558;
    end else begin
        ap_return_30 = ap_return_30_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_31 = ref_patch_dx_22_wri_fu_554;
    end else begin
        ap_return_31 = ap_return_31_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_32 = ref_patch_dx_23_wri_fu_550;
    end else begin
        ap_return_32 = ap_return_32_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_33 = ref_patch_dx_24_wri_fu_546;
    end else begin
        ap_return_33 = ap_return_33_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_34 = ref_patch_dx_25_wri_fu_542;
    end else begin
        ap_return_34 = ap_return_34_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_35 = ref_patch_dx_26_wri_fu_538;
    end else begin
        ap_return_35 = ap_return_35_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_36 = ref_patch_dx_27_wri_fu_410;
    end else begin
        ap_return_36 = ap_return_36_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_37 = ref_patch_dx_28_wri_fu_422;
    end else begin
        ap_return_37 = ap_return_37_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_38 = ref_patch_dx_29_wri_fu_434;
    end else begin
        ap_return_38 = ap_return_38_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_39 = ref_patch_dx_30_wri_fu_446;
    end else begin
        ap_return_39 = ap_return_39_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_4 = grp_fu_1386_p2;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_40 = ref_patch_dx_31_wri_fu_458;
    end else begin
        ap_return_40 = ap_return_40_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_41 = ref_patch_dx_32_wri_fu_470;
    end else begin
        ap_return_41 = ap_return_41_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_42 = ref_patch_dx_33_wri_fu_482;
    end else begin
        ap_return_42 = ap_return_42_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_43 = ref_patch_dx_34_wri_fu_494;
    end else begin
        ap_return_43 = ap_return_43_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_44 = ref_patch_dx_35_wri_fu_506;
    end else begin
        ap_return_44 = ap_return_44_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_45 = ref_patch_dx_36_wri_fu_518;
    end else begin
        ap_return_45 = ap_return_45_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_46 = ref_patch_dx_37_wri_fu_530;
    end else begin
        ap_return_46 = ap_return_46_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_47 = ref_patch_dx_38_wri_fu_534;
    end else begin
        ap_return_47 = ap_return_47_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_48 = ref_patch_dx_39_wri_fu_526;
    end else begin
        ap_return_48 = ap_return_48_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_49 = ref_patch_dx_40_wri_fu_522;
    end else begin
        ap_return_49 = ap_return_49_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_5 = grp_fu_1390_p2;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_50 = ref_patch_dx_41_wri_fu_514;
    end else begin
        ap_return_50 = ap_return_50_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_51 = ref_patch_dx_42_wri_fu_510;
    end else begin
        ap_return_51 = ap_return_51_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_52 = ref_patch_dx_43_wri_fu_502;
    end else begin
        ap_return_52 = ap_return_52_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_53 = ref_patch_dx_44_wri_fu_498;
    end else begin
        ap_return_53 = ap_return_53_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_54 = ref_patch_dx_45_wri_fu_490;
    end else begin
        ap_return_54 = ap_return_54_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_55 = ref_patch_dx_46_wri_fu_486;
    end else begin
        ap_return_55 = ap_return_55_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_56 = ref_patch_dx_47_wri_fu_478;
    end else begin
        ap_return_56 = ap_return_56_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_57 = ref_patch_dx_48_wri_fu_474;
    end else begin
        ap_return_57 = ap_return_57_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_58 = ref_patch_dx_49_wri_fu_466;
    end else begin
        ap_return_58 = ap_return_58_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_59 = ref_patch_dx_50_wri_fu_462;
    end else begin
        ap_return_59 = ap_return_59_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_6 = grp_fu_1382_p2;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_60 = ref_patch_dx_51_wri_fu_454;
    end else begin
        ap_return_60 = ap_return_60_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_61 = ref_patch_dx_52_wri_fu_450;
    end else begin
        ap_return_61 = ap_return_61_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_62 = ref_patch_dx_53_wri_fu_442;
    end else begin
        ap_return_62 = ap_return_62_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_63 = ref_patch_dx_54_wri_fu_438;
    end else begin
        ap_return_63 = ap_return_63_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_64 = ref_patch_dx_55_wri_fu_430;
    end else begin
        ap_return_64 = ap_return_64_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_65 = ref_patch_dx_56_wri_fu_426;
    end else begin
        ap_return_65 = ap_return_65_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_66 = ref_patch_dx_57_wri_fu_418;
    end else begin
        ap_return_66 = ap_return_66_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_67 = ref_patch_dx_58_wri_fu_414;
    end else begin
        ap_return_67 = ap_return_67_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_68 = ref_patch_dx_59_wri_fu_406;
    end else begin
        ap_return_68 = ap_return_68_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_69 = ref_patch_dx_60_wri_fu_390;
    end else begin
        ap_return_69 = ap_return_69_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_7 = grp_fu_1390_p2;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_70 = ref_patch_dx_61_wri_fu_394;
    end else begin
        ap_return_70 = ap_return_70_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_71 = ref_patch_dx_62_wri_fu_398;
    end else begin
        ap_return_71 = ap_return_71_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_72 = ref_patch_dx_63_wri_fu_402;
    end else begin
        ap_return_72 = ap_return_72_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_8 = grp_fu_1394_p2;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_return_9 = ref_patch_dx_0_writ_fu_598;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26))) begin
        grp_fu_1317_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | ((exitcond_reg_4245 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_00001)) | ((exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_00001)) | ((exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_00001)) | ((exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_00001)))) begin
        grp_fu_1317_opcode = 2'd0;
    end else begin
        grp_fu_1317_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_1317_p0 = reg_1418;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1317_p0 = reg_1483;
    end else if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        grp_fu_1317_p0 = reg_1411;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_1317_p0 = reg_1401;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1317_p0 = ref_patch_dy_reg_4301;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_1317_p0 = ref_patch_dx_reg_4294;
    end else begin
        grp_fu_1317_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1317_p1 = reg_1476;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1317_p1 = reg_1411;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_1317_p1 = tmp_83_reg_4325;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24))) begin
        grp_fu_1317_p1 = reg_1493;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1317_p1 = reg_1488;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_1317_p1 = ap_phi_mux_tmp_69_phi_fu_1286_p4;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_1317_p1 = ap_phi_mux_tmp_70_phi_fu_1298_p4;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1317_p1 = ap_phi_mux_tmp_s_phi_fu_1250_p4;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_1317_p1 = ap_phi_mux_tmp_68_phi_fu_1274_p4;
    end else begin
        grp_fu_1317_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1325_opcode = 2'd1;
    end else if (((exitcond_reg_4245_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_00001))) begin
        grp_fu_1325_opcode = 2'd0;
    end else begin
        grp_fu_1325_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1325_p0 = reg_1467;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1325_p0 = tmp_99_reg_4331;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1325_p0 = reg_1430;
    end else begin
        grp_fu_1325_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1325_p1 = tmp_92_reg_4341;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1325_p1 = tmp_100_reg_4336;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1325_p1 = tmp_67_reg_1258;
    end else begin
        grp_fu_1325_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_1338_p0 = tmp_83_reg_4325;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_1338_p0 = reg_1455;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_1338_p0 = tmp_76_reg_4319;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_1338_p0 = reg_1430;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1338_p0 = tmp_70_reg_1294;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1338_p0 = reg_1401;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1338_p0 = tmp_69_reg_1282;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_1338_p0 = ref_patch_dy_reg_4301;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1338_p0 = ref_patch_dx_reg_4294;
    end else begin
        grp_fu_1338_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1338_p1 = reg_1401;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_1338_p1 = reg_1455;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1338_p1 = 32'd1115684864;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_1338_p1 = reg_1476;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1338_p1 = reg_1467;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_1338_p1 = 32'd1048576000;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1338_p1 = ref_patch_dy_reg_4301;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_1338_p1 = ref_patch_dx_reg_4294;
    end else begin
        grp_fu_1338_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1344_p0 = reg_1430;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1344_p0 = tmp_67_reg_1258;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1344_p0 = reg_1455;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1344_p0 = tmp_68_reg_1270;
    end else begin
        grp_fu_1344_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1344_p1 = reg_1467;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1344_p1 = 32'd1048576000;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_1344_p1 = reg_1401;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1344_p1 = 32'd1056964608;
    end else begin
        grp_fu_1344_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1350_p0 = reg_1476;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1350_p0 = reg_1401;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1350_p0 = reg_1411;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1350_p0 = tmp_s_reg_1246;
    end else begin
        grp_fu_1350_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1350_p1 = 32'd1115684864;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1350_p1 = reg_1455;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1350_p1 = 32'd1056964608;
    end else begin
        grp_fu_1350_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28))) begin
        grp_fu_1359_p0 = reg_1467;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_1359_p0 = tmp_80_reg_4313;
    end else begin
        grp_fu_1359_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1359_p1 = reg_1455;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1359_p1 = reg_1467;
    end else begin
        grp_fu_1359_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_1398_p0 = ref_patch_dy1_fu_2078_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_1398_p0 = ref_patch_dx1_fu_1823_p1;
        end else begin
            grp_fu_1398_p0 = 'bx;
        end
    end else begin
        grp_fu_1398_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_fu_1498_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_fu_1498_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd38];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exitcond_fu_1498_p2 = ((ap_phi_mux_i_phi_fu_1310_p4 == 7'd64) ? 1'b1 : 1'b0);

assign grp_fu_1378_p0 = tmp_127_neg_fu_2406_p2;

assign grp_fu_1390_p0 = tmp_136_neg_fu_2420_p2;

assign i_1_fu_1504_p2 = (ap_phi_mux_i_phi_fu_1310_p4 + 7'd1);

assign ref_patch_dx1_fu_1823_p1 = $signed(tmp_115_reg_4274);

assign ref_patch_dy1_fu_2078_p1 = $signed(tmp_121_reg_4284);

assign tmp100_cast_fu_1568_p1 = tmp73_fu_1562_p2;

assign tmp101_cast_fu_1694_p1 = tmp101_fu_1688_p2;

assign tmp101_fu_1688_p2 = (5'd10 + tmp_121_cast_fu_1558_p1);

assign tmp103_cast_fu_1832_p1 = tmp103_fu_1827_p2;

assign tmp103_fu_1827_p2 = ($signed(tmp_121_cast_reg_4269) + $signed(5'd21));

assign tmp73_fu_1562_p2 = (5'd12 + tmp_121_cast_fu_1558_p1);

assign tmp_105_fu_1510_p1 = ap_phi_mux_i_phi_fu_1310_p4[5:0];

assign tmp_106_fu_1514_p1 = ap_phi_mux_i_phi_fu_1310_p4[2:0];

assign tmp_107_fu_1518_p4 = {{ap_phi_mux_i_phi_fu_1310_p4[5:3]}};

assign tmp_108_fu_1528_p3 = {{tmp_107_fu_1518_p4}, {1'd0}};

assign tmp_109_fu_1540_p3 = {{tmp_107_fu_1518_p4}, {3'd0}};

assign tmp_110_fu_1552_p2 = (tmp_118_cast_fu_1548_p1 + tmp_117_cast_fu_1536_p1);

assign tmp_112_fu_1578_p101 = (tmp_110_fu_1552_p2 + tmp100_cast_fu_1568_p1);

assign tmp_114_fu_1704_p101 = (tmp_110_fu_1552_p2 + tmp101_cast_fu_1694_p1);

assign tmp_115_fu_1814_p2 = (tmp_124_cast_fu_1684_p1 - tmp_128_cast_fu_1810_p1);

assign tmp_117_cast_fu_1536_p1 = tmp_108_fu_1528_p3;

assign tmp_117_fu_1841_p101 = (tmp103_cast_fu_1832_p1 + tmp_110_reg_4263);

assign tmp_118_cast_fu_1548_p1 = tmp_109_fu_1540_p3;

assign tmp_118_fu_1951_p2 = (tmp_110_reg_4263 | 7'd1);

assign tmp_120_fu_1962_p101 = (tmp_121_cast1_fu_1820_p1 + tmp_118_fu_1951_p2);

assign tmp_121_cast1_fu_1820_p1 = tmp_106_reg_4258;

assign tmp_121_cast_fu_1558_p1 = tmp_106_fu_1514_p1;

assign tmp_121_fu_2072_p2 = (tmp_134_cast_fu_1947_p1 - tmp_138_cast_fu_2068_p1);

assign tmp_124_cast_fu_1684_p1 = tmp_112_fu_1578_p102;

assign tmp_127_neg_fu_2406_p2 = (tmp_127_to_int_fu_2402_p1 ^ 32'd2147483648);

assign tmp_127_to_int_fu_2402_p1 = reg_1444;

assign tmp_128_cast_fu_1810_p1 = tmp_114_fu_1704_p102;

assign tmp_134_cast_fu_1947_p1 = tmp_117_fu_1841_p102;

assign tmp_136_neg_fu_2420_p2 = (tmp_136_to_int_fu_2417_p1 ^ 32'd2147483648);

assign tmp_136_to_int_fu_2417_p1 = tmp_102_reg_4346;

assign tmp_138_cast_fu_2068_p1 = tmp_120_fu_1962_p102;

always @ (posedge ap_clk) begin
    tmp_110_reg_4263[0] <= 1'b0;
    tmp_121_cast_reg_4269[4:3] <= 2'b00;
end

endmodule //compute_inverse_hess
