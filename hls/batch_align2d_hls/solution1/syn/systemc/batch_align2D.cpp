// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "batch_align2D.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic batch_align2D::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic batch_align2D::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<47> batch_align2D::ap_ST_fsm_state1 = "1";
const sc_lv<47> batch_align2D::ap_ST_fsm_state2 = "10";
const sc_lv<47> batch_align2D::ap_ST_fsm_state3 = "100";
const sc_lv<47> batch_align2D::ap_ST_fsm_state4 = "1000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state5 = "10000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state6 = "100000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state7 = "1000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state8 = "10000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_pp0_stage0 = "100000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state12 = "1000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state13 = "10000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state14 = "100000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state15 = "1000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state16 = "10000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state17 = "100000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state18 = "1000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_pp1_stage0 = "10000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state21 = "100000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state22 = "1000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state23 = "10000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state24 = "100000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state25 = "1000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state26 = "10000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state27 = "100000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state28 = "1000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state29 = "10000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state30 = "100000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state31 = "1000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state32 = "10000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state33 = "100000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state34 = "1000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state35 = "10000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state36 = "100000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state37 = "1000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state38 = "10000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_pp2_stage0 = "100000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state41 = "1000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state42 = "10000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state43 = "100000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state44 = "1000000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state45 = "10000000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_pp3_stage0 = "100000000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state48 = "1000000000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state49 = "10000000000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state50 = "100000000000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state51 = "1000000000000000000000000000000000000000000000";
const sc_lv<47> batch_align2D::ap_ST_fsm_state52 = "10000000000000000000000000000000000000000000000";
const sc_lv<32> batch_align2D::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool batch_align2D::ap_const_boolean_1 = true;
const sc_lv<32> batch_align2D::ap_const_lv32_1 = "1";
const sc_lv<32> batch_align2D::ap_const_lv32_8 = "1000";
const bool batch_align2D::ap_const_boolean_0 = false;
const sc_lv<1> batch_align2D::ap_const_lv1_0 = "0";
const sc_lv<32> batch_align2D::ap_const_lv32_9 = "1001";
const sc_lv<32> batch_align2D::ap_const_lv32_10 = "10000";
const sc_lv<32> batch_align2D::ap_const_lv32_17 = "10111";
const sc_lv<32> batch_align2D::ap_const_lv32_1A = "11010";
const sc_lv<32> batch_align2D::ap_const_lv32_1F = "11111";
const sc_lv<32> batch_align2D::ap_const_lv32_28 = "101000";
const sc_lv<32> batch_align2D::ap_const_lv32_29 = "101001";
const sc_lv<32> batch_align2D::ap_const_lv32_2E = "101110";
const sc_lv<32> batch_align2D::ap_const_lv32_18 = "11000";
const sc_lv<32> batch_align2D::ap_const_lv32_1B = "11011";
const sc_lv<32> batch_align2D::ap_const_lv32_20 = "100000";
const sc_lv<32> batch_align2D::ap_const_lv32_19 = "11001";
const sc_lv<32> batch_align2D::ap_const_lv32_1C = "11100";
const sc_lv<32> batch_align2D::ap_const_lv32_21 = "100001";
const sc_lv<32> batch_align2D::ap_const_lv32_1D = "11101";
const sc_lv<32> batch_align2D::ap_const_lv32_22 = "100010";
const sc_lv<32> batch_align2D::ap_const_lv32_23 = "100011";
const int batch_align2D::C_S_AXI_DATA_WIDTH = "100000";
const int batch_align2D::C_M_AXI_PYR_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int batch_align2D::C_M_AXI_PYR_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int batch_align2D::C_M_AXI_PYR_CACHE_VALUE = "11";
const int batch_align2D::C_M_AXI_DATA_WIDTH = "100000";
const int batch_align2D::C_M_AXI_PATCHES_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int batch_align2D::C_M_AXI_PATCHES_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int batch_align2D::C_M_AXI_PATCHES_CACHE_VALUE = "11";
const int batch_align2D::C_M_AXI_POS_R_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int batch_align2D::C_M_AXI_POS_R_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int batch_align2D::C_M_AXI_POS_R_CACHE_VALUE = "11";
const int batch_align2D::C_M_AXI_DEBUG_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int batch_align2D::C_M_AXI_DEBUG_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int batch_align2D::C_M_AXI_DEBUG_CACHE_VALUE = "11";
const sc_lv<32> batch_align2D::ap_const_lv32_12 = "10010";
const sc_lv<32> batch_align2D::ap_const_lv32_13 = "10011";
const sc_lv<32> batch_align2D::ap_const_lv32_14 = "10100";
const sc_lv<32> batch_align2D::ap_const_lv32_15 = "10101";
const sc_lv<32> batch_align2D::ap_const_lv32_16 = "10110";
const sc_lv<32> batch_align2D::ap_const_lv32_7 = "111";
const sc_lv<1> batch_align2D::ap_const_lv1_1 = "1";
const sc_lv<32> batch_align2D::ap_const_lv32_F = "1111";
const sc_lv<19> batch_align2D::ap_const_lv19_0 = "0000000000000000000";
const sc_lv<4> batch_align2D::ap_const_lv4_0 = "0000";
const sc_lv<6> batch_align2D::ap_const_lv6_0 = "000000";
const sc_lv<32> batch_align2D::ap_const_lv32_73AA0 = "1110011101010100000";
const sc_lv<3> batch_align2D::ap_const_lv3_0 = "000";
const sc_lv<2> batch_align2D::ap_const_lv2_0 = "00";
const sc_lv<32> batch_align2D::ap_const_lv32_24 = "100100";
const sc_lv<4> batch_align2D::ap_const_lv4_F = "1111";
const sc_lv<2> batch_align2D::ap_const_lv2_3 = "11";
const sc_lv<2> batch_align2D::ap_const_lv2_1 = "1";
const sc_lv<2> batch_align2D::ap_const_lv2_2 = "10";
const sc_lv<64> batch_align2D::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> batch_align2D::ap_const_lv32_11 = "10001";
const sc_lv<19> batch_align2D::ap_const_lv19_1 = "1";
const sc_lv<19> batch_align2D::ap_const_lv19_2 = "10";
const sc_lv<19> batch_align2D::ap_const_lv19_3 = "11";
const sc_lv<32> batch_align2D::ap_const_lv32_2 = "10";
const sc_lv<32> batch_align2D::ap_const_lv32_3F = "111111";
const sc_lv<19> batch_align2D::ap_const_lv19_73AA0 = "1110011101010100000";
const sc_lv<4> batch_align2D::ap_const_lv4_8 = "1000";
const sc_lv<4> batch_align2D::ap_const_lv4_1 = "1";
const sc_lv<63> batch_align2D::ap_const_lv63_2 = "10";
const sc_lv<63> batch_align2D::ap_const_lv63_4 = "100";
const sc_lv<63> batch_align2D::ap_const_lv63_6 = "110";
const sc_lv<6> batch_align2D::ap_const_lv6_24 = "100100";
const sc_lv<6> batch_align2D::ap_const_lv6_1 = "1";
const sc_lv<3> batch_align2D::ap_const_lv3_1 = "1";
const sc_lv<3> batch_align2D::ap_const_lv3_2 = "10";
const sc_lv<3> batch_align2D::ap_const_lv3_3 = "11";
const sc_lv<3> batch_align2D::ap_const_lv3_4 = "100";
const sc_lv<3> batch_align2D::ap_const_lv3_5 = "101";
const sc_lv<3> batch_align2D::ap_const_lv3_6 = "110";
const sc_lv<8> batch_align2D::ap_const_lv8_0 = "00000000";

batch_align2D::batch_align2D(sc_module_name name) : sc_module(name), mVcdFile(0) {
    pyr_data_U = new batch_align2D_pyr_data("pyr_data_U");
    pyr_data_U->clk(ap_clk);
    pyr_data_U->reset(ap_rst_n_inv);
    pyr_data_U->address0(pyr_data_address0);
    pyr_data_U->ce0(pyr_data_ce0);
    pyr_data_U->we0(pyr_data_we0);
    pyr_data_U->d0(pyr_addr_read_reg_925);
    pyr_data_U->q0(pyr_data_q0);
    batch_align2D_ctrl_s_axi_U = new batch_align2D_ctrl_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>("batch_align2D_ctrl_s_axi_U");
    batch_align2D_ctrl_s_axi_U->AWVALID(s_axi_ctrl_AWVALID);
    batch_align2D_ctrl_s_axi_U->AWREADY(s_axi_ctrl_AWREADY);
    batch_align2D_ctrl_s_axi_U->AWADDR(s_axi_ctrl_AWADDR);
    batch_align2D_ctrl_s_axi_U->WVALID(s_axi_ctrl_WVALID);
    batch_align2D_ctrl_s_axi_U->WREADY(s_axi_ctrl_WREADY);
    batch_align2D_ctrl_s_axi_U->WDATA(s_axi_ctrl_WDATA);
    batch_align2D_ctrl_s_axi_U->WSTRB(s_axi_ctrl_WSTRB);
    batch_align2D_ctrl_s_axi_U->ARVALID(s_axi_ctrl_ARVALID);
    batch_align2D_ctrl_s_axi_U->ARREADY(s_axi_ctrl_ARREADY);
    batch_align2D_ctrl_s_axi_U->ARADDR(s_axi_ctrl_ARADDR);
    batch_align2D_ctrl_s_axi_U->RVALID(s_axi_ctrl_RVALID);
    batch_align2D_ctrl_s_axi_U->RREADY(s_axi_ctrl_RREADY);
    batch_align2D_ctrl_s_axi_U->RDATA(s_axi_ctrl_RDATA);
    batch_align2D_ctrl_s_axi_U->RRESP(s_axi_ctrl_RRESP);
    batch_align2D_ctrl_s_axi_U->BVALID(s_axi_ctrl_BVALID);
    batch_align2D_ctrl_s_axi_U->BREADY(s_axi_ctrl_BREADY);
    batch_align2D_ctrl_s_axi_U->BRESP(s_axi_ctrl_BRESP);
    batch_align2D_ctrl_s_axi_U->ACLK(ap_clk);
    batch_align2D_ctrl_s_axi_U->ARESET(ap_rst_n_inv);
    batch_align2D_ctrl_s_axi_U->ACLK_EN(ap_var_for_const0);
    batch_align2D_ctrl_s_axi_U->ap_start(ap_start);
    batch_align2D_ctrl_s_axi_U->interrupt(interrupt);
    batch_align2D_ctrl_s_axi_U->ap_ready(ap_ready);
    batch_align2D_ctrl_s_axi_U->ap_done(ap_done);
    batch_align2D_ctrl_s_axi_U->ap_idle(ap_idle);
    batch_align2D_ctrl_s_axi_U->pyr_data_ptr(pyr_data_ptr);
    batch_align2D_ctrl_s_axi_U->ref_patch_with_border_ptr(ref_patch_with_border_ptr);
    batch_align2D_ctrl_s_axi_U->cur_px_estimate_ptr(cur_px_estimate_ptr);
    batch_align2D_ctrl_s_axi_U->inv_out(inv_out);
    batch_align2D_param_s_axi_U = new batch_align2D_param_s_axi<C_S_AXI_PARAM_ADDR_WIDTH,C_S_AXI_PARAM_DATA_WIDTH>("batch_align2D_param_s_axi_U");
    batch_align2D_param_s_axi_U->AWVALID(s_axi_param_AWVALID);
    batch_align2D_param_s_axi_U->AWREADY(s_axi_param_AWREADY);
    batch_align2D_param_s_axi_U->AWADDR(s_axi_param_AWADDR);
    batch_align2D_param_s_axi_U->WVALID(s_axi_param_WVALID);
    batch_align2D_param_s_axi_U->WREADY(s_axi_param_WREADY);
    batch_align2D_param_s_axi_U->WDATA(s_axi_param_WDATA);
    batch_align2D_param_s_axi_U->WSTRB(s_axi_param_WSTRB);
    batch_align2D_param_s_axi_U->ARVALID(s_axi_param_ARVALID);
    batch_align2D_param_s_axi_U->ARREADY(s_axi_param_ARREADY);
    batch_align2D_param_s_axi_U->ARADDR(s_axi_param_ARADDR);
    batch_align2D_param_s_axi_U->RVALID(s_axi_param_RVALID);
    batch_align2D_param_s_axi_U->RREADY(s_axi_param_RREADY);
    batch_align2D_param_s_axi_U->RDATA(s_axi_param_RDATA);
    batch_align2D_param_s_axi_U->RRESP(s_axi_param_RRESP);
    batch_align2D_param_s_axi_U->BVALID(s_axi_param_BVALID);
    batch_align2D_param_s_axi_U->BREADY(s_axi_param_BREADY);
    batch_align2D_param_s_axi_U->BRESP(s_axi_param_BRESP);
    batch_align2D_param_s_axi_U->ACLK(ap_clk);
    batch_align2D_param_s_axi_U->ARESET(ap_rst_n_inv);
    batch_align2D_param_s_axi_U->ACLK_EN(ap_var_for_const0);
    batch_align2D_param_s_axi_U->img_w(img_w);
    batch_align2D_param_s_axi_U->img_h(img_h);
    batch_align2D_param_s_axi_U->levels(levels);
    batch_align2D_param_s_axi_U->converged(ap_var_for_const1);
    batch_align2D_param_s_axi_U->converged_ap_vld(converged_ap_vld);
    batch_align2D_param_s_axi_U->n_iter(n_iter);
    batch_align2D_param_s_axi_U->transfer_pyr(transfer_pyr);
    batch_align2D_pyr_m_axi_U = new batch_align2D_pyr_m_axi<0,8,64,5,16,16,16,16,C_M_AXI_PYR_ID_WIDTH,C_M_AXI_PYR_ADDR_WIDTH,C_M_AXI_PYR_DATA_WIDTH,C_M_AXI_PYR_AWUSER_WIDTH,C_M_AXI_PYR_ARUSER_WIDTH,C_M_AXI_PYR_WUSER_WIDTH,C_M_AXI_PYR_RUSER_WIDTH,C_M_AXI_PYR_BUSER_WIDTH,C_M_AXI_PYR_USER_VALUE,C_M_AXI_PYR_PROT_VALUE,C_M_AXI_PYR_CACHE_VALUE>("batch_align2D_pyr_m_axi_U");
    batch_align2D_pyr_m_axi_U->AWVALID(m_axi_pyr_AWVALID);
    batch_align2D_pyr_m_axi_U->AWREADY(m_axi_pyr_AWREADY);
    batch_align2D_pyr_m_axi_U->AWADDR(m_axi_pyr_AWADDR);
    batch_align2D_pyr_m_axi_U->AWID(m_axi_pyr_AWID);
    batch_align2D_pyr_m_axi_U->AWLEN(m_axi_pyr_AWLEN);
    batch_align2D_pyr_m_axi_U->AWSIZE(m_axi_pyr_AWSIZE);
    batch_align2D_pyr_m_axi_U->AWBURST(m_axi_pyr_AWBURST);
    batch_align2D_pyr_m_axi_U->AWLOCK(m_axi_pyr_AWLOCK);
    batch_align2D_pyr_m_axi_U->AWCACHE(m_axi_pyr_AWCACHE);
    batch_align2D_pyr_m_axi_U->AWPROT(m_axi_pyr_AWPROT);
    batch_align2D_pyr_m_axi_U->AWQOS(m_axi_pyr_AWQOS);
    batch_align2D_pyr_m_axi_U->AWREGION(m_axi_pyr_AWREGION);
    batch_align2D_pyr_m_axi_U->AWUSER(m_axi_pyr_AWUSER);
    batch_align2D_pyr_m_axi_U->WVALID(m_axi_pyr_WVALID);
    batch_align2D_pyr_m_axi_U->WREADY(m_axi_pyr_WREADY);
    batch_align2D_pyr_m_axi_U->WDATA(m_axi_pyr_WDATA);
    batch_align2D_pyr_m_axi_U->WSTRB(m_axi_pyr_WSTRB);
    batch_align2D_pyr_m_axi_U->WLAST(m_axi_pyr_WLAST);
    batch_align2D_pyr_m_axi_U->WID(m_axi_pyr_WID);
    batch_align2D_pyr_m_axi_U->WUSER(m_axi_pyr_WUSER);
    batch_align2D_pyr_m_axi_U->ARVALID(m_axi_pyr_ARVALID);
    batch_align2D_pyr_m_axi_U->ARREADY(m_axi_pyr_ARREADY);
    batch_align2D_pyr_m_axi_U->ARADDR(m_axi_pyr_ARADDR);
    batch_align2D_pyr_m_axi_U->ARID(m_axi_pyr_ARID);
    batch_align2D_pyr_m_axi_U->ARLEN(m_axi_pyr_ARLEN);
    batch_align2D_pyr_m_axi_U->ARSIZE(m_axi_pyr_ARSIZE);
    batch_align2D_pyr_m_axi_U->ARBURST(m_axi_pyr_ARBURST);
    batch_align2D_pyr_m_axi_U->ARLOCK(m_axi_pyr_ARLOCK);
    batch_align2D_pyr_m_axi_U->ARCACHE(m_axi_pyr_ARCACHE);
    batch_align2D_pyr_m_axi_U->ARPROT(m_axi_pyr_ARPROT);
    batch_align2D_pyr_m_axi_U->ARQOS(m_axi_pyr_ARQOS);
    batch_align2D_pyr_m_axi_U->ARREGION(m_axi_pyr_ARREGION);
    batch_align2D_pyr_m_axi_U->ARUSER(m_axi_pyr_ARUSER);
    batch_align2D_pyr_m_axi_U->RVALID(m_axi_pyr_RVALID);
    batch_align2D_pyr_m_axi_U->RREADY(m_axi_pyr_RREADY);
    batch_align2D_pyr_m_axi_U->RDATA(m_axi_pyr_RDATA);
    batch_align2D_pyr_m_axi_U->RLAST(m_axi_pyr_RLAST);
    batch_align2D_pyr_m_axi_U->RID(m_axi_pyr_RID);
    batch_align2D_pyr_m_axi_U->RUSER(m_axi_pyr_RUSER);
    batch_align2D_pyr_m_axi_U->RRESP(m_axi_pyr_RRESP);
    batch_align2D_pyr_m_axi_U->BVALID(m_axi_pyr_BVALID);
    batch_align2D_pyr_m_axi_U->BREADY(m_axi_pyr_BREADY);
    batch_align2D_pyr_m_axi_U->BRESP(m_axi_pyr_BRESP);
    batch_align2D_pyr_m_axi_U->BID(m_axi_pyr_BID);
    batch_align2D_pyr_m_axi_U->BUSER(m_axi_pyr_BUSER);
    batch_align2D_pyr_m_axi_U->ACLK(ap_clk);
    batch_align2D_pyr_m_axi_U->ARESET(ap_rst_n_inv);
    batch_align2D_pyr_m_axi_U->ACLK_EN(ap_var_for_const0);
    batch_align2D_pyr_m_axi_U->I_ARVALID(pyr_ARVALID);
    batch_align2D_pyr_m_axi_U->I_ARREADY(pyr_ARREADY);
    batch_align2D_pyr_m_axi_U->I_ARADDR(pyr_addr_reg_910);
    batch_align2D_pyr_m_axi_U->I_ARID(ap_var_for_const2);
    batch_align2D_pyr_m_axi_U->I_ARLEN(ap_var_for_const3);
    batch_align2D_pyr_m_axi_U->I_ARSIZE(ap_var_for_const4);
    batch_align2D_pyr_m_axi_U->I_ARLOCK(ap_var_for_const5);
    batch_align2D_pyr_m_axi_U->I_ARCACHE(ap_var_for_const6);
    batch_align2D_pyr_m_axi_U->I_ARQOS(ap_var_for_const6);
    batch_align2D_pyr_m_axi_U->I_ARPROT(ap_var_for_const4);
    batch_align2D_pyr_m_axi_U->I_ARUSER(ap_var_for_const2);
    batch_align2D_pyr_m_axi_U->I_ARBURST(ap_var_for_const5);
    batch_align2D_pyr_m_axi_U->I_ARREGION(ap_var_for_const6);
    batch_align2D_pyr_m_axi_U->I_RVALID(pyr_RVALID);
    batch_align2D_pyr_m_axi_U->I_RREADY(pyr_RREADY);
    batch_align2D_pyr_m_axi_U->I_RDATA(pyr_RDATA);
    batch_align2D_pyr_m_axi_U->I_RID(pyr_RID);
    batch_align2D_pyr_m_axi_U->I_RUSER(pyr_RUSER);
    batch_align2D_pyr_m_axi_U->I_RRESP(pyr_RRESP);
    batch_align2D_pyr_m_axi_U->I_RLAST(pyr_RLAST);
    batch_align2D_pyr_m_axi_U->I_AWVALID(ap_var_for_const7);
    batch_align2D_pyr_m_axi_U->I_AWREADY(pyr_AWREADY);
    batch_align2D_pyr_m_axi_U->I_AWADDR(ap_var_for_const1);
    batch_align2D_pyr_m_axi_U->I_AWID(ap_var_for_const2);
    batch_align2D_pyr_m_axi_U->I_AWLEN(ap_var_for_const8);
    batch_align2D_pyr_m_axi_U->I_AWSIZE(ap_var_for_const4);
    batch_align2D_pyr_m_axi_U->I_AWLOCK(ap_var_for_const5);
    batch_align2D_pyr_m_axi_U->I_AWCACHE(ap_var_for_const6);
    batch_align2D_pyr_m_axi_U->I_AWQOS(ap_var_for_const6);
    batch_align2D_pyr_m_axi_U->I_AWPROT(ap_var_for_const4);
    batch_align2D_pyr_m_axi_U->I_AWUSER(ap_var_for_const2);
    batch_align2D_pyr_m_axi_U->I_AWBURST(ap_var_for_const5);
    batch_align2D_pyr_m_axi_U->I_AWREGION(ap_var_for_const6);
    batch_align2D_pyr_m_axi_U->I_WVALID(ap_var_for_const7);
    batch_align2D_pyr_m_axi_U->I_WREADY(pyr_WREADY);
    batch_align2D_pyr_m_axi_U->I_WDATA(ap_var_for_const9);
    batch_align2D_pyr_m_axi_U->I_WID(ap_var_for_const2);
    batch_align2D_pyr_m_axi_U->I_WUSER(ap_var_for_const2);
    batch_align2D_pyr_m_axi_U->I_WLAST(ap_var_for_const7);
    batch_align2D_pyr_m_axi_U->I_WSTRB(ap_var_for_const2);
    batch_align2D_pyr_m_axi_U->I_BVALID(pyr_BVALID);
    batch_align2D_pyr_m_axi_U->I_BREADY(ap_var_for_const7);
    batch_align2D_pyr_m_axi_U->I_BRESP(pyr_BRESP);
    batch_align2D_pyr_m_axi_U->I_BID(pyr_BID);
    batch_align2D_pyr_m_axi_U->I_BUSER(pyr_BUSER);
    batch_align2D_pos_r_m_axi_U = new batch_align2D_pos_r_m_axi<0,32,64,5,16,16,16,16,C_M_AXI_POS_R_ID_WIDTH,C_M_AXI_POS_R_ADDR_WIDTH,C_M_AXI_POS_R_DATA_WIDTH,C_M_AXI_POS_R_AWUSER_WIDTH,C_M_AXI_POS_R_ARUSER_WIDTH,C_M_AXI_POS_R_WUSER_WIDTH,C_M_AXI_POS_R_RUSER_WIDTH,C_M_AXI_POS_R_BUSER_WIDTH,C_M_AXI_POS_R_USER_VALUE,C_M_AXI_POS_R_PROT_VALUE,C_M_AXI_POS_R_CACHE_VALUE>("batch_align2D_pos_r_m_axi_U");
    batch_align2D_pos_r_m_axi_U->AWVALID(m_axi_pos_r_AWVALID);
    batch_align2D_pos_r_m_axi_U->AWREADY(m_axi_pos_r_AWREADY);
    batch_align2D_pos_r_m_axi_U->AWADDR(m_axi_pos_r_AWADDR);
    batch_align2D_pos_r_m_axi_U->AWID(m_axi_pos_r_AWID);
    batch_align2D_pos_r_m_axi_U->AWLEN(m_axi_pos_r_AWLEN);
    batch_align2D_pos_r_m_axi_U->AWSIZE(m_axi_pos_r_AWSIZE);
    batch_align2D_pos_r_m_axi_U->AWBURST(m_axi_pos_r_AWBURST);
    batch_align2D_pos_r_m_axi_U->AWLOCK(m_axi_pos_r_AWLOCK);
    batch_align2D_pos_r_m_axi_U->AWCACHE(m_axi_pos_r_AWCACHE);
    batch_align2D_pos_r_m_axi_U->AWPROT(m_axi_pos_r_AWPROT);
    batch_align2D_pos_r_m_axi_U->AWQOS(m_axi_pos_r_AWQOS);
    batch_align2D_pos_r_m_axi_U->AWREGION(m_axi_pos_r_AWREGION);
    batch_align2D_pos_r_m_axi_U->AWUSER(m_axi_pos_r_AWUSER);
    batch_align2D_pos_r_m_axi_U->WVALID(m_axi_pos_r_WVALID);
    batch_align2D_pos_r_m_axi_U->WREADY(m_axi_pos_r_WREADY);
    batch_align2D_pos_r_m_axi_U->WDATA(m_axi_pos_r_WDATA);
    batch_align2D_pos_r_m_axi_U->WSTRB(m_axi_pos_r_WSTRB);
    batch_align2D_pos_r_m_axi_U->WLAST(m_axi_pos_r_WLAST);
    batch_align2D_pos_r_m_axi_U->WID(m_axi_pos_r_WID);
    batch_align2D_pos_r_m_axi_U->WUSER(m_axi_pos_r_WUSER);
    batch_align2D_pos_r_m_axi_U->ARVALID(m_axi_pos_r_ARVALID);
    batch_align2D_pos_r_m_axi_U->ARREADY(m_axi_pos_r_ARREADY);
    batch_align2D_pos_r_m_axi_U->ARADDR(m_axi_pos_r_ARADDR);
    batch_align2D_pos_r_m_axi_U->ARID(m_axi_pos_r_ARID);
    batch_align2D_pos_r_m_axi_U->ARLEN(m_axi_pos_r_ARLEN);
    batch_align2D_pos_r_m_axi_U->ARSIZE(m_axi_pos_r_ARSIZE);
    batch_align2D_pos_r_m_axi_U->ARBURST(m_axi_pos_r_ARBURST);
    batch_align2D_pos_r_m_axi_U->ARLOCK(m_axi_pos_r_ARLOCK);
    batch_align2D_pos_r_m_axi_U->ARCACHE(m_axi_pos_r_ARCACHE);
    batch_align2D_pos_r_m_axi_U->ARPROT(m_axi_pos_r_ARPROT);
    batch_align2D_pos_r_m_axi_U->ARQOS(m_axi_pos_r_ARQOS);
    batch_align2D_pos_r_m_axi_U->ARREGION(m_axi_pos_r_ARREGION);
    batch_align2D_pos_r_m_axi_U->ARUSER(m_axi_pos_r_ARUSER);
    batch_align2D_pos_r_m_axi_U->RVALID(m_axi_pos_r_RVALID);
    batch_align2D_pos_r_m_axi_U->RREADY(m_axi_pos_r_RREADY);
    batch_align2D_pos_r_m_axi_U->RDATA(m_axi_pos_r_RDATA);
    batch_align2D_pos_r_m_axi_U->RLAST(m_axi_pos_r_RLAST);
    batch_align2D_pos_r_m_axi_U->RID(m_axi_pos_r_RID);
    batch_align2D_pos_r_m_axi_U->RUSER(m_axi_pos_r_RUSER);
    batch_align2D_pos_r_m_axi_U->RRESP(m_axi_pos_r_RRESP);
    batch_align2D_pos_r_m_axi_U->BVALID(m_axi_pos_r_BVALID);
    batch_align2D_pos_r_m_axi_U->BREADY(m_axi_pos_r_BREADY);
    batch_align2D_pos_r_m_axi_U->BRESP(m_axi_pos_r_BRESP);
    batch_align2D_pos_r_m_axi_U->BID(m_axi_pos_r_BID);
    batch_align2D_pos_r_m_axi_U->BUSER(m_axi_pos_r_BUSER);
    batch_align2D_pos_r_m_axi_U->ACLK(ap_clk);
    batch_align2D_pos_r_m_axi_U->ARESET(ap_rst_n_inv);
    batch_align2D_pos_r_m_axi_U->ACLK_EN(ap_var_for_const0);
    batch_align2D_pos_r_m_axi_U->I_ARVALID(pos_r_ARVALID);
    batch_align2D_pos_r_m_axi_U->I_ARREADY(pos_r_ARREADY);
    batch_align2D_pos_r_m_axi_U->I_ARADDR(pos_addr_reg_902);
    batch_align2D_pos_r_m_axi_U->I_ARID(ap_var_for_const2);
    batch_align2D_pos_r_m_axi_U->I_ARLEN(ap_var_for_const10);
    batch_align2D_pos_r_m_axi_U->I_ARSIZE(ap_var_for_const4);
    batch_align2D_pos_r_m_axi_U->I_ARLOCK(ap_var_for_const5);
    batch_align2D_pos_r_m_axi_U->I_ARCACHE(ap_var_for_const6);
    batch_align2D_pos_r_m_axi_U->I_ARQOS(ap_var_for_const6);
    batch_align2D_pos_r_m_axi_U->I_ARPROT(ap_var_for_const4);
    batch_align2D_pos_r_m_axi_U->I_ARUSER(ap_var_for_const2);
    batch_align2D_pos_r_m_axi_U->I_ARBURST(ap_var_for_const5);
    batch_align2D_pos_r_m_axi_U->I_ARREGION(ap_var_for_const6);
    batch_align2D_pos_r_m_axi_U->I_RVALID(pos_r_RVALID);
    batch_align2D_pos_r_m_axi_U->I_RREADY(pos_r_RREADY);
    batch_align2D_pos_r_m_axi_U->I_RDATA(pos_r_RDATA);
    batch_align2D_pos_r_m_axi_U->I_RID(pos_r_RID);
    batch_align2D_pos_r_m_axi_U->I_RUSER(pos_r_RUSER);
    batch_align2D_pos_r_m_axi_U->I_RRESP(pos_r_RRESP);
    batch_align2D_pos_r_m_axi_U->I_RLAST(pos_r_RLAST);
    batch_align2D_pos_r_m_axi_U->I_AWVALID(pos_r_AWVALID);
    batch_align2D_pos_r_m_axi_U->I_AWREADY(pos_r_AWREADY);
    batch_align2D_pos_r_m_axi_U->I_AWADDR(pos_r_AWADDR);
    batch_align2D_pos_r_m_axi_U->I_AWID(ap_var_for_const2);
    batch_align2D_pos_r_m_axi_U->I_AWLEN(pos_r_AWLEN);
    batch_align2D_pos_r_m_axi_U->I_AWSIZE(ap_var_for_const4);
    batch_align2D_pos_r_m_axi_U->I_AWLOCK(ap_var_for_const5);
    batch_align2D_pos_r_m_axi_U->I_AWCACHE(ap_var_for_const6);
    batch_align2D_pos_r_m_axi_U->I_AWQOS(ap_var_for_const6);
    batch_align2D_pos_r_m_axi_U->I_AWPROT(ap_var_for_const4);
    batch_align2D_pos_r_m_axi_U->I_AWUSER(ap_var_for_const2);
    batch_align2D_pos_r_m_axi_U->I_AWBURST(ap_var_for_const5);
    batch_align2D_pos_r_m_axi_U->I_AWREGION(ap_var_for_const6);
    batch_align2D_pos_r_m_axi_U->I_WVALID(pos_r_WVALID);
    batch_align2D_pos_r_m_axi_U->I_WREADY(pos_r_WREADY);
    batch_align2D_pos_r_m_axi_U->I_WDATA(pos_r_WDATA);
    batch_align2D_pos_r_m_axi_U->I_WID(ap_var_for_const2);
    batch_align2D_pos_r_m_axi_U->I_WUSER(ap_var_for_const2);
    batch_align2D_pos_r_m_axi_U->I_WLAST(ap_var_for_const7);
    batch_align2D_pos_r_m_axi_U->I_WSTRB(ap_var_for_const11);
    batch_align2D_pos_r_m_axi_U->I_BVALID(pos_r_BVALID);
    batch_align2D_pos_r_m_axi_U->I_BREADY(pos_r_BREADY);
    batch_align2D_pos_r_m_axi_U->I_BRESP(pos_r_BRESP);
    batch_align2D_pos_r_m_axi_U->I_BID(pos_r_BID);
    batch_align2D_pos_r_m_axi_U->I_BUSER(pos_r_BUSER);
    batch_align2D_debug_m_axi_U = new batch_align2D_debug_m_axi<0,32,64,5,16,16,16,16,C_M_AXI_DEBUG_ID_WIDTH,C_M_AXI_DEBUG_ADDR_WIDTH,C_M_AXI_DEBUG_DATA_WIDTH,C_M_AXI_DEBUG_AWUSER_WIDTH,C_M_AXI_DEBUG_ARUSER_WIDTH,C_M_AXI_DEBUG_WUSER_WIDTH,C_M_AXI_DEBUG_RUSER_WIDTH,C_M_AXI_DEBUG_BUSER_WIDTH,C_M_AXI_DEBUG_USER_VALUE,C_M_AXI_DEBUG_PROT_VALUE,C_M_AXI_DEBUG_CACHE_VALUE>("batch_align2D_debug_m_axi_U");
    batch_align2D_debug_m_axi_U->AWVALID(m_axi_debug_AWVALID);
    batch_align2D_debug_m_axi_U->AWREADY(m_axi_debug_AWREADY);
    batch_align2D_debug_m_axi_U->AWADDR(m_axi_debug_AWADDR);
    batch_align2D_debug_m_axi_U->AWID(m_axi_debug_AWID);
    batch_align2D_debug_m_axi_U->AWLEN(m_axi_debug_AWLEN);
    batch_align2D_debug_m_axi_U->AWSIZE(m_axi_debug_AWSIZE);
    batch_align2D_debug_m_axi_U->AWBURST(m_axi_debug_AWBURST);
    batch_align2D_debug_m_axi_U->AWLOCK(m_axi_debug_AWLOCK);
    batch_align2D_debug_m_axi_U->AWCACHE(m_axi_debug_AWCACHE);
    batch_align2D_debug_m_axi_U->AWPROT(m_axi_debug_AWPROT);
    batch_align2D_debug_m_axi_U->AWQOS(m_axi_debug_AWQOS);
    batch_align2D_debug_m_axi_U->AWREGION(m_axi_debug_AWREGION);
    batch_align2D_debug_m_axi_U->AWUSER(m_axi_debug_AWUSER);
    batch_align2D_debug_m_axi_U->WVALID(m_axi_debug_WVALID);
    batch_align2D_debug_m_axi_U->WREADY(m_axi_debug_WREADY);
    batch_align2D_debug_m_axi_U->WDATA(m_axi_debug_WDATA);
    batch_align2D_debug_m_axi_U->WSTRB(m_axi_debug_WSTRB);
    batch_align2D_debug_m_axi_U->WLAST(m_axi_debug_WLAST);
    batch_align2D_debug_m_axi_U->WID(m_axi_debug_WID);
    batch_align2D_debug_m_axi_U->WUSER(m_axi_debug_WUSER);
    batch_align2D_debug_m_axi_U->ARVALID(m_axi_debug_ARVALID);
    batch_align2D_debug_m_axi_U->ARREADY(m_axi_debug_ARREADY);
    batch_align2D_debug_m_axi_U->ARADDR(m_axi_debug_ARADDR);
    batch_align2D_debug_m_axi_U->ARID(m_axi_debug_ARID);
    batch_align2D_debug_m_axi_U->ARLEN(m_axi_debug_ARLEN);
    batch_align2D_debug_m_axi_U->ARSIZE(m_axi_debug_ARSIZE);
    batch_align2D_debug_m_axi_U->ARBURST(m_axi_debug_ARBURST);
    batch_align2D_debug_m_axi_U->ARLOCK(m_axi_debug_ARLOCK);
    batch_align2D_debug_m_axi_U->ARCACHE(m_axi_debug_ARCACHE);
    batch_align2D_debug_m_axi_U->ARPROT(m_axi_debug_ARPROT);
    batch_align2D_debug_m_axi_U->ARQOS(m_axi_debug_ARQOS);
    batch_align2D_debug_m_axi_U->ARREGION(m_axi_debug_ARREGION);
    batch_align2D_debug_m_axi_U->ARUSER(m_axi_debug_ARUSER);
    batch_align2D_debug_m_axi_U->RVALID(m_axi_debug_RVALID);
    batch_align2D_debug_m_axi_U->RREADY(m_axi_debug_RREADY);
    batch_align2D_debug_m_axi_U->RDATA(m_axi_debug_RDATA);
    batch_align2D_debug_m_axi_U->RLAST(m_axi_debug_RLAST);
    batch_align2D_debug_m_axi_U->RID(m_axi_debug_RID);
    batch_align2D_debug_m_axi_U->RUSER(m_axi_debug_RUSER);
    batch_align2D_debug_m_axi_U->RRESP(m_axi_debug_RRESP);
    batch_align2D_debug_m_axi_U->BVALID(m_axi_debug_BVALID);
    batch_align2D_debug_m_axi_U->BREADY(m_axi_debug_BREADY);
    batch_align2D_debug_m_axi_U->BRESP(m_axi_debug_BRESP);
    batch_align2D_debug_m_axi_U->BID(m_axi_debug_BID);
    batch_align2D_debug_m_axi_U->BUSER(m_axi_debug_BUSER);
    batch_align2D_debug_m_axi_U->ACLK(ap_clk);
    batch_align2D_debug_m_axi_U->ARESET(ap_rst_n_inv);
    batch_align2D_debug_m_axi_U->ACLK_EN(ap_var_for_const0);
    batch_align2D_debug_m_axi_U->I_ARVALID(ap_var_for_const7);
    batch_align2D_debug_m_axi_U->I_ARREADY(debug_ARREADY);
    batch_align2D_debug_m_axi_U->I_ARADDR(ap_var_for_const1);
    batch_align2D_debug_m_axi_U->I_ARID(ap_var_for_const2);
    batch_align2D_debug_m_axi_U->I_ARLEN(ap_var_for_const8);
    batch_align2D_debug_m_axi_U->I_ARSIZE(ap_var_for_const4);
    batch_align2D_debug_m_axi_U->I_ARLOCK(ap_var_for_const5);
    batch_align2D_debug_m_axi_U->I_ARCACHE(ap_var_for_const6);
    batch_align2D_debug_m_axi_U->I_ARQOS(ap_var_for_const6);
    batch_align2D_debug_m_axi_U->I_ARPROT(ap_var_for_const4);
    batch_align2D_debug_m_axi_U->I_ARUSER(ap_var_for_const2);
    batch_align2D_debug_m_axi_U->I_ARBURST(ap_var_for_const5);
    batch_align2D_debug_m_axi_U->I_ARREGION(ap_var_for_const6);
    batch_align2D_debug_m_axi_U->I_RVALID(debug_RVALID);
    batch_align2D_debug_m_axi_U->I_RREADY(ap_var_for_const7);
    batch_align2D_debug_m_axi_U->I_RDATA(debug_RDATA);
    batch_align2D_debug_m_axi_U->I_RID(debug_RID);
    batch_align2D_debug_m_axi_U->I_RUSER(debug_RUSER);
    batch_align2D_debug_m_axi_U->I_RRESP(debug_RRESP);
    batch_align2D_debug_m_axi_U->I_RLAST(debug_RLAST);
    batch_align2D_debug_m_axi_U->I_AWVALID(debug_AWVALID);
    batch_align2D_debug_m_axi_U->I_AWREADY(debug_AWREADY);
    batch_align2D_debug_m_axi_U->I_AWADDR(debug_addr_reg_889);
    batch_align2D_debug_m_axi_U->I_AWID(ap_var_for_const2);
    batch_align2D_debug_m_axi_U->I_AWLEN(ap_var_for_const12);
    batch_align2D_debug_m_axi_U->I_AWSIZE(ap_var_for_const4);
    batch_align2D_debug_m_axi_U->I_AWLOCK(ap_var_for_const5);
    batch_align2D_debug_m_axi_U->I_AWCACHE(ap_var_for_const6);
    batch_align2D_debug_m_axi_U->I_AWQOS(ap_var_for_const6);
    batch_align2D_debug_m_axi_U->I_AWPROT(ap_var_for_const4);
    batch_align2D_debug_m_axi_U->I_AWUSER(ap_var_for_const2);
    batch_align2D_debug_m_axi_U->I_AWBURST(ap_var_for_const5);
    batch_align2D_debug_m_axi_U->I_AWREGION(ap_var_for_const6);
    batch_align2D_debug_m_axi_U->I_WVALID(debug_WVALID);
    batch_align2D_debug_m_axi_U->I_WREADY(debug_WREADY);
    batch_align2D_debug_m_axi_U->I_WDATA(tmp_1_13_reg_1014);
    batch_align2D_debug_m_axi_U->I_WID(ap_var_for_const2);
    batch_align2D_debug_m_axi_U->I_WUSER(ap_var_for_const2);
    batch_align2D_debug_m_axi_U->I_WLAST(ap_var_for_const7);
    batch_align2D_debug_m_axi_U->I_WSTRB(ap_var_for_const11);
    batch_align2D_debug_m_axi_U->I_BVALID(debug_BVALID);
    batch_align2D_debug_m_axi_U->I_BREADY(debug_BREADY);
    batch_align2D_debug_m_axi_U->I_BRESP(debug_BRESP);
    batch_align2D_debug_m_axi_U->I_BID(debug_BID);
    batch_align2D_debug_m_axi_U->I_BUSER(debug_BUSER);
    batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1_U1 = new batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1_U1");
    batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1_U1->clk(ap_clk);
    batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1_U1->reset(ap_rst_n_inv);
    batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1_U1->din0(grp_fu_423_p0);
    batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1_U1->din1(ap_var_for_const8);
    batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1_U1->ce(grp_fu_423_ce);
    batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1_U1->dout(grp_fu_423_p2);
    batch_align2D_sitofp_32ns_32_3_1_U2 = new batch_align2D_sitofp_32ns_32_3_1<1,3,32,32>("batch_align2D_sitofp_32ns_32_3_1_U2");
    batch_align2D_sitofp_32ns_32_3_1_U2->clk(ap_clk);
    batch_align2D_sitofp_32ns_32_3_1_U2->reset(ap_rst_n_inv);
    batch_align2D_sitofp_32ns_32_3_1_U2->din0(grp_fu_428_p0);
    batch_align2D_sitofp_32ns_32_3_1_U2->ce(grp_fu_428_ce);
    batch_align2D_sitofp_32ns_32_3_1_U2->dout(grp_fu_428_p1);
    batch_align2D_mux_366_32_1_1_U3 = new batch_align2D_mux_366_32_1_1<1,1,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,6,32>("batch_align2D_mux_366_32_1_1_U3");
    batch_align2D_mux_366_32_1_1_U3->din0(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din1(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din2(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din3(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din4(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din5(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din6(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din7(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din8(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din9(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din10(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din11(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din12(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din13(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din14(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din15(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din16(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din17(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din18(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din19(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din20(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din21(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din22(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din23(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din24(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din25(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din26(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din27(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din28(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din29(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din30(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din31(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din32(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din33(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din34(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din35(ap_var_for_const8);
    batch_align2D_mux_366_32_1_1_U3->din36(indvar6_reg_401);
    batch_align2D_mux_366_32_1_1_U3->dout(tmp_1_13_fu_661_p38);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_UnifiedRetVal_i_fu_877_p3);
    sensitive << ( cur_px_estimate_3_0 );
    sensitive << ( sel_tmp12_i_fu_871_p2 );
    sensitive << ( sel_tmp11_i_fu_863_p3 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond3_reg_916 );
    sensitive << ( pyr_RVALID );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond3_reg_916 );
    sensitive << ( pyr_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( pos_r_RVALID );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( pos_r_RVALID );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_01001);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_state40_io );

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_state40_io );

    SC_METHOD(thread_ap_block_pp3_stage0);

    SC_METHOD(thread_ap_block_pp3_stage0_01001);

    SC_METHOD(thread_ap_block_pp3_stage0_11001);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_state47_io );

    SC_METHOD(thread_ap_block_pp3_stage0_subdone);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_state47_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);
    sensitive << ( exitcond3_reg_916 );
    sensitive << ( pyr_RVALID );

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state19_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state20_pp1_stage0_iter1);
    sensitive << ( pos_r_RVALID );

    SC_METHOD(thread_ap_block_state27_io);
    sensitive << ( ap_sig_ioackin_pos_r_AWREADY );
    sensitive << ( ap_sig_ioackin_debug_AWREADY );

    SC_METHOD(thread_ap_block_state30_io);
    sensitive << ( ap_sig_ioackin_pos_r_AWREADY );
    sensitive << ( ap_sig_ioackin_pos_r_WREADY );

    SC_METHOD(thread_ap_block_state39_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state40_io);
    sensitive << ( exitcond4_reg_1005 );
    sensitive << ( ap_sig_ioackin_debug_WREADY );

    SC_METHOD(thread_ap_block_state40_pp2_stage0_iter1);

    SC_METHOD(thread_ap_block_state46_pp3_stage0_iter0);

    SC_METHOD(thread_ap_block_state47_io);
    sensitive << ( exitcond5_reg_1019 );
    sensitive << ( ap_sig_ioackin_pos_r_WREADY );

    SC_METHOD(thread_ap_block_state47_pp3_stage0_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter0);

    SC_METHOD(thread_ap_condition_1615);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond4_reg_1005 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state9);
    sensitive << ( exitcond3_fu_493_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state19);
    sensitive << ( exitcond2_fu_510_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state39);
    sensitive << ( exitcond4_fu_649_p2 );

    SC_METHOD(thread_ap_condition_pp3_exit_iter0_state46);
    sensitive << ( exitcond5_fu_739_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( pos_r_BVALID );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_enable_pp3);
    sensitive << ( ap_idle_pp3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_ap_idle_pp3);
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_ap_phi_mux_indvar_phi_fu_382_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond3_reg_916 );
    sensitive << ( indvar_reg_378 );
    sensitive << ( indvar_next_reg_920 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( pos_r_BVALID );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_debug_AWREADY);
    sensitive << ( debug_AWREADY );
    sensitive << ( ap_reg_ioackin_debug_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_debug_WREADY);
    sensitive << ( debug_WREADY );
    sensitive << ( ap_reg_ioackin_debug_WREADY );

    SC_METHOD(thread_ap_sig_ioackin_pos_r_ARREADY);
    sensitive << ( pos_r_ARREADY );
    sensitive << ( ap_reg_ioackin_pos_r_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_pos_r_AWREADY);
    sensitive << ( pos_r_AWREADY );
    sensitive << ( ap_reg_ioackin_pos_r_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_pos_r_WREADY);
    sensitive << ( pos_r_WREADY );
    sensitive << ( ap_reg_ioackin_pos_r_WREADY );

    SC_METHOD(thread_ap_sig_ioackin_pyr_ARREADY);
    sensitive << ( pyr_ARREADY );
    sensitive << ( ap_reg_ioackin_pyr_ARREADY );

    SC_METHOD(thread_converged_ap_vld);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_block_state30_io );

    SC_METHOD(thread_cur_px_estimate_ptr5_fu_463_p4);
    sensitive << ( cur_px_estimate_ptr );

    SC_METHOD(thread_cur_px_estimate_ptr6_1_fu_604_p2);
    sensitive << ( tmp_2_cast_reg_895 );

    SC_METHOD(thread_cur_px_estimate_ptr6_2_fu_619_p2);
    sensitive << ( tmp_2_cast_reg_895 );

    SC_METHOD(thread_cur_px_estimate_ptr6_3_fu_634_p2);
    sensitive << ( tmp_2_cast_reg_895 );

    SC_METHOD(thread_cur_px_estimate_ptr6_4_fu_624_p1);
    sensitive << ( cur_px_estimate_ptr6_2_fu_619_p2 );

    SC_METHOD(thread_cur_px_estimate_ptr6_5_fu_639_p1);
    sensitive << ( cur_px_estimate_ptr6_3_fu_634_p2 );

    SC_METHOD(thread_cur_px_estimate_ptr6_fu_609_p1);
    sensitive << ( cur_px_estimate_ptr6_1_fu_604_p2 );

    SC_METHOD(thread_debug_AWVALID);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_reg_ioackin_debug_AWREADY );

    SC_METHOD(thread_debug_BREADY);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( debug_BVALID );
    sensitive << ( ap_sig_ioackin_pos_r_AWREADY );

    SC_METHOD(thread_debug_WVALID);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( exitcond4_reg_1005 );
    sensitive << ( ap_reg_ioackin_debug_WREADY );
    sensitive << ( ap_block_pp2_stage0_01001 );

    SC_METHOD(thread_debug_blk_n_AW);
    sensitive << ( m_axi_debug_AWREADY );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_debug_blk_n_B);
    sensitive << ( m_axi_debug_BVALID );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_debug_blk_n_W);
    sensitive << ( m_axi_debug_WREADY );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( exitcond4_reg_1005 );

    SC_METHOD(thread_exitcond2_fu_510_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( indvar3_reg_390 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond3_fu_493_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_phi_fu_382_p4 );

    SC_METHOD(thread_exitcond4_fu_649_p2);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( indvar6_reg_401 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_exitcond5_fu_739_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( indvar8_reg_412 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );

    SC_METHOD(thread_grp_fu_423_ce);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_sig_ioackin_pos_r_AWREADY );
    sensitive << ( ap_sig_ioackin_pos_r_WREADY );
    sensitive << ( ap_block_state30_io );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_block_state27_io );

    SC_METHOD(thread_grp_fu_423_p0);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( tmp_9_reg_957 );
    sensitive << ( tmp_9_1_reg_967 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_9_2_reg_983 );
    sensitive << ( tmp_9_3_reg_994 );

    SC_METHOD(thread_grp_fu_428_ce);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_sig_ioackin_pos_r_AWREADY );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_block_state27_io );

    SC_METHOD(thread_grp_fu_428_p0);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( tmp_8_fu_584_p1 );
    sensitive << ( tmp_8_1_fu_589_p1 );
    sensitive << ( tmp_8_2_fu_594_p1 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_8_3_fu_599_p1 );

    SC_METHOD(thread_indvar4_fu_505_p1);
    sensitive << ( indvar_reg_378_pp0_iter1_reg );

    SC_METHOD(thread_indvar_next2_fu_516_p2);
    sensitive << ( indvar3_reg_390 );

    SC_METHOD(thread_indvar_next3_fu_655_p2);
    sensitive << ( indvar6_reg_401 );

    SC_METHOD(thread_indvar_next4_fu_745_p2);
    sensitive << ( indvar8_reg_412 );

    SC_METHOD(thread_indvar_next_fu_499_p2);
    sensitive << ( ap_phi_mux_indvar_phi_fu_382_p4 );

    SC_METHOD(thread_inv_out7_fu_443_p4);
    sensitive << ( inv_out );

    SC_METHOD(thread_m_axi_patches_ARADDR);

    SC_METHOD(thread_m_axi_patches_ARBURST);

    SC_METHOD(thread_m_axi_patches_ARCACHE);

    SC_METHOD(thread_m_axi_patches_ARID);

    SC_METHOD(thread_m_axi_patches_ARLEN);

    SC_METHOD(thread_m_axi_patches_ARLOCK);

    SC_METHOD(thread_m_axi_patches_ARPROT);

    SC_METHOD(thread_m_axi_patches_ARQOS);

    SC_METHOD(thread_m_axi_patches_ARREGION);

    SC_METHOD(thread_m_axi_patches_ARSIZE);

    SC_METHOD(thread_m_axi_patches_ARUSER);

    SC_METHOD(thread_m_axi_patches_ARVALID);

    SC_METHOD(thread_m_axi_patches_AWADDR);

    SC_METHOD(thread_m_axi_patches_AWBURST);

    SC_METHOD(thread_m_axi_patches_AWCACHE);

    SC_METHOD(thread_m_axi_patches_AWID);

    SC_METHOD(thread_m_axi_patches_AWLEN);

    SC_METHOD(thread_m_axi_patches_AWLOCK);

    SC_METHOD(thread_m_axi_patches_AWPROT);

    SC_METHOD(thread_m_axi_patches_AWQOS);

    SC_METHOD(thread_m_axi_patches_AWREGION);

    SC_METHOD(thread_m_axi_patches_AWSIZE);

    SC_METHOD(thread_m_axi_patches_AWUSER);

    SC_METHOD(thread_m_axi_patches_AWVALID);

    SC_METHOD(thread_m_axi_patches_BREADY);

    SC_METHOD(thread_m_axi_patches_RREADY);

    SC_METHOD(thread_m_axi_patches_WDATA);

    SC_METHOD(thread_m_axi_patches_WID);

    SC_METHOD(thread_m_axi_patches_WLAST);

    SC_METHOD(thread_m_axi_patches_WSTRB);

    SC_METHOD(thread_m_axi_patches_WUSER);

    SC_METHOD(thread_m_axi_patches_WVALID);

    SC_METHOD(thread_pos_r_ARVALID);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_reg_ioackin_pos_r_ARREADY );

    SC_METHOD(thread_pos_r_AWADDR);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( debug_BVALID );
    sensitive << ( pos_addr_reg_902 );
    sensitive << ( pos_addr_1_reg_977 );
    sensitive << ( pos_addr_2_reg_988 );
    sensitive << ( pos_addr_3_reg_999 );
    sensitive << ( ap_reg_ioackin_pos_r_AWREADY );

    SC_METHOD(thread_pos_r_AWLEN);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( debug_BVALID );
    sensitive << ( ap_reg_ioackin_pos_r_AWREADY );

    SC_METHOD(thread_pos_r_AWVALID);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( debug_BVALID );
    sensitive << ( ap_reg_ioackin_pos_r_AWREADY );

    SC_METHOD(thread_pos_r_BREADY);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( pos_r_BVALID );

    SC_METHOD(thread_pos_r_RREADY);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_pos_r_WDATA);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond5_reg_1019 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( reg_435 );
    sensitive << ( UnifiedRetVal_i_reg_1028 );
    sensitive << ( ap_reg_ioackin_pos_r_WREADY );
    sensitive << ( ap_block_pp3_stage0_01001 );

    SC_METHOD(thread_pos_r_WVALID);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( exitcond5_reg_1019 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_reg_ioackin_pos_r_WREADY );
    sensitive << ( ap_block_pp3_stage0_01001 );

    SC_METHOD(thread_pos_r_blk_n_AR);
    sensitive << ( m_axi_pos_r_ARREADY );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_pos_r_blk_n_AW);
    sensitive << ( m_axi_pos_r_AWREADY );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_pos_r_blk_n_B);
    sensitive << ( m_axi_pos_r_BVALID );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_pos_r_blk_n_R);
    sensitive << ( m_axi_pos_r_RVALID );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_pos_r_blk_n_W);
    sensitive << ( m_axi_pos_r_WREADY );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( exitcond5_reg_1019 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_pyr_ARVALID);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_reg_ioackin_pyr_ARREADY );

    SC_METHOD(thread_pyr_RREADY);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond3_reg_916 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_pyr_blk_n_AR);
    sensitive << ( m_axi_pyr_ARREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_pyr_blk_n_R);
    sensitive << ( m_axi_pyr_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond3_reg_916 );

    SC_METHOD(thread_pyr_data_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( indvar4_fu_505_p1 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_pyr_data_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_pyr_data_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond3_reg_916_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_sel_tmp10_i_fu_857_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( exitcond5_fu_739_p2 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_4_fu_751_p1 );

    SC_METHOD(thread_sel_tmp11_i_fu_863_p3);
    sensitive << ( cur_px_estimate_2_1 );
    sensitive << ( sel_tmp10_i_fu_857_p2 );
    sensitive << ( sel_tmp9_i_fu_849_p3 );

    SC_METHOD(thread_sel_tmp12_i_fu_871_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( exitcond5_fu_739_p2 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_4_fu_751_p1 );

    SC_METHOD(thread_sel_tmp1_i_fu_793_p3);
    sensitive << ( cur_px_estimate_3_1 );
    sensitive << ( cur_px_estimate_0_0 );
    sensitive << ( sel_tmp_i_fu_787_p2 );

    SC_METHOD(thread_sel_tmp2_i_fu_801_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( exitcond5_fu_739_p2 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_4_fu_751_p1 );

    SC_METHOD(thread_sel_tmp3_i_fu_807_p3);
    sensitive << ( cur_px_estimate_0_1 );
    sensitive << ( sel_tmp2_i_fu_801_p2 );
    sensitive << ( sel_tmp1_i_fu_793_p3 );

    SC_METHOD(thread_sel_tmp4_i_fu_815_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( exitcond5_fu_739_p2 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_4_fu_751_p1 );

    SC_METHOD(thread_sel_tmp5_i_fu_821_p3);
    sensitive << ( cur_px_estimate_1_0 );
    sensitive << ( sel_tmp4_i_fu_815_p2 );
    sensitive << ( sel_tmp3_i_fu_807_p3 );

    SC_METHOD(thread_sel_tmp6_i_fu_829_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( exitcond5_fu_739_p2 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_4_fu_751_p1 );

    SC_METHOD(thread_sel_tmp7_i_fu_835_p3);
    sensitive << ( cur_px_estimate_1_1 );
    sensitive << ( sel_tmp6_i_fu_829_p2 );
    sensitive << ( sel_tmp5_i_fu_821_p3 );

    SC_METHOD(thread_sel_tmp8_i_fu_843_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( exitcond5_fu_739_p2 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_4_fu_751_p1 );

    SC_METHOD(thread_sel_tmp9_i_fu_849_p3);
    sensitive << ( cur_px_estimate_2_0 );
    sensitive << ( sel_tmp8_i_fu_843_p2 );
    sensitive << ( sel_tmp7_i_fu_835_p3 );

    SC_METHOD(thread_sel_tmp_i_fu_787_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( exitcond5_fu_739_p2 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( tmp_4_fu_751_p1 );

    SC_METHOD(thread_tmp_2_cast_fu_477_p1);
    sensitive << ( cur_px_estimate_ptr5_fu_463_p4 );

    SC_METHOD(thread_tmp_2_fu_473_p1);
    sensitive << ( cur_px_estimate_ptr5_fu_463_p4 );

    SC_METHOD(thread_tmp_3_fu_532_p1);
    sensitive << ( indvar3_reg_390 );

    SC_METHOD(thread_tmp_4_fu_751_p1);
    sensitive << ( indvar8_reg_412 );

    SC_METHOD(thread_tmp_8_1_fu_589_p1);
    sensitive << ( reg_431 );

    SC_METHOD(thread_tmp_8_2_fu_594_p1);
    sensitive << ( reg_431 );

    SC_METHOD(thread_tmp_8_3_fu_599_p1);
    sensitive << ( reg_431 );

    SC_METHOD(thread_tmp_8_fu_584_p1);
    sensitive << ( reg_431 );

    SC_METHOD(thread_tmp_fu_453_p1);
    sensitive << ( inv_out7_fu_443_p4 );

    SC_METHOD(thread_transfer_pyr_read_read_fu_228_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( transfer_pyr );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( pos_r_BVALID );
    sensitive << ( debug_BVALID );
    sensitive << ( ap_sig_ioackin_pos_r_AWREADY );
    sensitive << ( ap_sig_ioackin_pos_r_WREADY );
    sensitive << ( ap_block_state30_io );
    sensitive << ( transfer_pyr_read_read_fu_228_p2 );
    sensitive << ( exitcond3_fu_493_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond2_fu_510_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_state27_io );
    sensitive << ( exitcond4_fu_649_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( exitcond5_fu_739_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( ap_block_pp3_stage0_subdone );
    sensitive << ( ap_sig_ioackin_pyr_ARREADY );
    sensitive << ( ap_sig_ioackin_pos_r_ARREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const10);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const12);

    SC_THREAD(thread_ap_var_for_const11);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const9);

    ap_CS_fsm = "00000000000000000000000000000000000000000000001";
    cur_px_estimate_3_1 = "00000000000000000000000000000000";
    cur_px_estimate_0_0 = "00000000000000000000000000000000";
    cur_px_estimate_0_1 = "00000000000000000000000000000000";
    cur_px_estimate_1_0 = "00000000000000000000000000000000";
    cur_px_estimate_1_1 = "00000000000000000000000000000000";
    cur_px_estimate_2_0 = "00000000000000000000000000000000";
    cur_px_estimate_2_1 = "00000000000000000000000000000000";
    cur_px_estimate_3_0 = "00000000000000000000000000000000";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_reg_ioackin_pyr_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_pos_r_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_pos_r_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_debug_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_pos_r_WREADY = SC_LOGIC_0;
    ap_reg_ioackin_debug_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "batch_align2D_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_pyr_AWVALID, "(port)m_axi_pyr_AWVALID");
    sc_trace(mVcdFile, m_axi_pyr_AWREADY, "(port)m_axi_pyr_AWREADY");
    sc_trace(mVcdFile, m_axi_pyr_AWADDR, "(port)m_axi_pyr_AWADDR");
    sc_trace(mVcdFile, m_axi_pyr_AWID, "(port)m_axi_pyr_AWID");
    sc_trace(mVcdFile, m_axi_pyr_AWLEN, "(port)m_axi_pyr_AWLEN");
    sc_trace(mVcdFile, m_axi_pyr_AWSIZE, "(port)m_axi_pyr_AWSIZE");
    sc_trace(mVcdFile, m_axi_pyr_AWBURST, "(port)m_axi_pyr_AWBURST");
    sc_trace(mVcdFile, m_axi_pyr_AWLOCK, "(port)m_axi_pyr_AWLOCK");
    sc_trace(mVcdFile, m_axi_pyr_AWCACHE, "(port)m_axi_pyr_AWCACHE");
    sc_trace(mVcdFile, m_axi_pyr_AWPROT, "(port)m_axi_pyr_AWPROT");
    sc_trace(mVcdFile, m_axi_pyr_AWQOS, "(port)m_axi_pyr_AWQOS");
    sc_trace(mVcdFile, m_axi_pyr_AWREGION, "(port)m_axi_pyr_AWREGION");
    sc_trace(mVcdFile, m_axi_pyr_AWUSER, "(port)m_axi_pyr_AWUSER");
    sc_trace(mVcdFile, m_axi_pyr_WVALID, "(port)m_axi_pyr_WVALID");
    sc_trace(mVcdFile, m_axi_pyr_WREADY, "(port)m_axi_pyr_WREADY");
    sc_trace(mVcdFile, m_axi_pyr_WDATA, "(port)m_axi_pyr_WDATA");
    sc_trace(mVcdFile, m_axi_pyr_WSTRB, "(port)m_axi_pyr_WSTRB");
    sc_trace(mVcdFile, m_axi_pyr_WLAST, "(port)m_axi_pyr_WLAST");
    sc_trace(mVcdFile, m_axi_pyr_WID, "(port)m_axi_pyr_WID");
    sc_trace(mVcdFile, m_axi_pyr_WUSER, "(port)m_axi_pyr_WUSER");
    sc_trace(mVcdFile, m_axi_pyr_ARVALID, "(port)m_axi_pyr_ARVALID");
    sc_trace(mVcdFile, m_axi_pyr_ARREADY, "(port)m_axi_pyr_ARREADY");
    sc_trace(mVcdFile, m_axi_pyr_ARADDR, "(port)m_axi_pyr_ARADDR");
    sc_trace(mVcdFile, m_axi_pyr_ARID, "(port)m_axi_pyr_ARID");
    sc_trace(mVcdFile, m_axi_pyr_ARLEN, "(port)m_axi_pyr_ARLEN");
    sc_trace(mVcdFile, m_axi_pyr_ARSIZE, "(port)m_axi_pyr_ARSIZE");
    sc_trace(mVcdFile, m_axi_pyr_ARBURST, "(port)m_axi_pyr_ARBURST");
    sc_trace(mVcdFile, m_axi_pyr_ARLOCK, "(port)m_axi_pyr_ARLOCK");
    sc_trace(mVcdFile, m_axi_pyr_ARCACHE, "(port)m_axi_pyr_ARCACHE");
    sc_trace(mVcdFile, m_axi_pyr_ARPROT, "(port)m_axi_pyr_ARPROT");
    sc_trace(mVcdFile, m_axi_pyr_ARQOS, "(port)m_axi_pyr_ARQOS");
    sc_trace(mVcdFile, m_axi_pyr_ARREGION, "(port)m_axi_pyr_ARREGION");
    sc_trace(mVcdFile, m_axi_pyr_ARUSER, "(port)m_axi_pyr_ARUSER");
    sc_trace(mVcdFile, m_axi_pyr_RVALID, "(port)m_axi_pyr_RVALID");
    sc_trace(mVcdFile, m_axi_pyr_RREADY, "(port)m_axi_pyr_RREADY");
    sc_trace(mVcdFile, m_axi_pyr_RDATA, "(port)m_axi_pyr_RDATA");
    sc_trace(mVcdFile, m_axi_pyr_RLAST, "(port)m_axi_pyr_RLAST");
    sc_trace(mVcdFile, m_axi_pyr_RID, "(port)m_axi_pyr_RID");
    sc_trace(mVcdFile, m_axi_pyr_RUSER, "(port)m_axi_pyr_RUSER");
    sc_trace(mVcdFile, m_axi_pyr_RRESP, "(port)m_axi_pyr_RRESP");
    sc_trace(mVcdFile, m_axi_pyr_BVALID, "(port)m_axi_pyr_BVALID");
    sc_trace(mVcdFile, m_axi_pyr_BREADY, "(port)m_axi_pyr_BREADY");
    sc_trace(mVcdFile, m_axi_pyr_BRESP, "(port)m_axi_pyr_BRESP");
    sc_trace(mVcdFile, m_axi_pyr_BID, "(port)m_axi_pyr_BID");
    sc_trace(mVcdFile, m_axi_pyr_BUSER, "(port)m_axi_pyr_BUSER");
    sc_trace(mVcdFile, m_axi_patches_AWVALID, "(port)m_axi_patches_AWVALID");
    sc_trace(mVcdFile, m_axi_patches_AWREADY, "(port)m_axi_patches_AWREADY");
    sc_trace(mVcdFile, m_axi_patches_AWADDR, "(port)m_axi_patches_AWADDR");
    sc_trace(mVcdFile, m_axi_patches_AWID, "(port)m_axi_patches_AWID");
    sc_trace(mVcdFile, m_axi_patches_AWLEN, "(port)m_axi_patches_AWLEN");
    sc_trace(mVcdFile, m_axi_patches_AWSIZE, "(port)m_axi_patches_AWSIZE");
    sc_trace(mVcdFile, m_axi_patches_AWBURST, "(port)m_axi_patches_AWBURST");
    sc_trace(mVcdFile, m_axi_patches_AWLOCK, "(port)m_axi_patches_AWLOCK");
    sc_trace(mVcdFile, m_axi_patches_AWCACHE, "(port)m_axi_patches_AWCACHE");
    sc_trace(mVcdFile, m_axi_patches_AWPROT, "(port)m_axi_patches_AWPROT");
    sc_trace(mVcdFile, m_axi_patches_AWQOS, "(port)m_axi_patches_AWQOS");
    sc_trace(mVcdFile, m_axi_patches_AWREGION, "(port)m_axi_patches_AWREGION");
    sc_trace(mVcdFile, m_axi_patches_AWUSER, "(port)m_axi_patches_AWUSER");
    sc_trace(mVcdFile, m_axi_patches_WVALID, "(port)m_axi_patches_WVALID");
    sc_trace(mVcdFile, m_axi_patches_WREADY, "(port)m_axi_patches_WREADY");
    sc_trace(mVcdFile, m_axi_patches_WDATA, "(port)m_axi_patches_WDATA");
    sc_trace(mVcdFile, m_axi_patches_WSTRB, "(port)m_axi_patches_WSTRB");
    sc_trace(mVcdFile, m_axi_patches_WLAST, "(port)m_axi_patches_WLAST");
    sc_trace(mVcdFile, m_axi_patches_WID, "(port)m_axi_patches_WID");
    sc_trace(mVcdFile, m_axi_patches_WUSER, "(port)m_axi_patches_WUSER");
    sc_trace(mVcdFile, m_axi_patches_ARVALID, "(port)m_axi_patches_ARVALID");
    sc_trace(mVcdFile, m_axi_patches_ARREADY, "(port)m_axi_patches_ARREADY");
    sc_trace(mVcdFile, m_axi_patches_ARADDR, "(port)m_axi_patches_ARADDR");
    sc_trace(mVcdFile, m_axi_patches_ARID, "(port)m_axi_patches_ARID");
    sc_trace(mVcdFile, m_axi_patches_ARLEN, "(port)m_axi_patches_ARLEN");
    sc_trace(mVcdFile, m_axi_patches_ARSIZE, "(port)m_axi_patches_ARSIZE");
    sc_trace(mVcdFile, m_axi_patches_ARBURST, "(port)m_axi_patches_ARBURST");
    sc_trace(mVcdFile, m_axi_patches_ARLOCK, "(port)m_axi_patches_ARLOCK");
    sc_trace(mVcdFile, m_axi_patches_ARCACHE, "(port)m_axi_patches_ARCACHE");
    sc_trace(mVcdFile, m_axi_patches_ARPROT, "(port)m_axi_patches_ARPROT");
    sc_trace(mVcdFile, m_axi_patches_ARQOS, "(port)m_axi_patches_ARQOS");
    sc_trace(mVcdFile, m_axi_patches_ARREGION, "(port)m_axi_patches_ARREGION");
    sc_trace(mVcdFile, m_axi_patches_ARUSER, "(port)m_axi_patches_ARUSER");
    sc_trace(mVcdFile, m_axi_patches_RVALID, "(port)m_axi_patches_RVALID");
    sc_trace(mVcdFile, m_axi_patches_RREADY, "(port)m_axi_patches_RREADY");
    sc_trace(mVcdFile, m_axi_patches_RDATA, "(port)m_axi_patches_RDATA");
    sc_trace(mVcdFile, m_axi_patches_RLAST, "(port)m_axi_patches_RLAST");
    sc_trace(mVcdFile, m_axi_patches_RID, "(port)m_axi_patches_RID");
    sc_trace(mVcdFile, m_axi_patches_RUSER, "(port)m_axi_patches_RUSER");
    sc_trace(mVcdFile, m_axi_patches_RRESP, "(port)m_axi_patches_RRESP");
    sc_trace(mVcdFile, m_axi_patches_BVALID, "(port)m_axi_patches_BVALID");
    sc_trace(mVcdFile, m_axi_patches_BREADY, "(port)m_axi_patches_BREADY");
    sc_trace(mVcdFile, m_axi_patches_BRESP, "(port)m_axi_patches_BRESP");
    sc_trace(mVcdFile, m_axi_patches_BID, "(port)m_axi_patches_BID");
    sc_trace(mVcdFile, m_axi_patches_BUSER, "(port)m_axi_patches_BUSER");
    sc_trace(mVcdFile, m_axi_pos_r_AWVALID, "(port)m_axi_pos_r_AWVALID");
    sc_trace(mVcdFile, m_axi_pos_r_AWREADY, "(port)m_axi_pos_r_AWREADY");
    sc_trace(mVcdFile, m_axi_pos_r_AWADDR, "(port)m_axi_pos_r_AWADDR");
    sc_trace(mVcdFile, m_axi_pos_r_AWID, "(port)m_axi_pos_r_AWID");
    sc_trace(mVcdFile, m_axi_pos_r_AWLEN, "(port)m_axi_pos_r_AWLEN");
    sc_trace(mVcdFile, m_axi_pos_r_AWSIZE, "(port)m_axi_pos_r_AWSIZE");
    sc_trace(mVcdFile, m_axi_pos_r_AWBURST, "(port)m_axi_pos_r_AWBURST");
    sc_trace(mVcdFile, m_axi_pos_r_AWLOCK, "(port)m_axi_pos_r_AWLOCK");
    sc_trace(mVcdFile, m_axi_pos_r_AWCACHE, "(port)m_axi_pos_r_AWCACHE");
    sc_trace(mVcdFile, m_axi_pos_r_AWPROT, "(port)m_axi_pos_r_AWPROT");
    sc_trace(mVcdFile, m_axi_pos_r_AWQOS, "(port)m_axi_pos_r_AWQOS");
    sc_trace(mVcdFile, m_axi_pos_r_AWREGION, "(port)m_axi_pos_r_AWREGION");
    sc_trace(mVcdFile, m_axi_pos_r_AWUSER, "(port)m_axi_pos_r_AWUSER");
    sc_trace(mVcdFile, m_axi_pos_r_WVALID, "(port)m_axi_pos_r_WVALID");
    sc_trace(mVcdFile, m_axi_pos_r_WREADY, "(port)m_axi_pos_r_WREADY");
    sc_trace(mVcdFile, m_axi_pos_r_WDATA, "(port)m_axi_pos_r_WDATA");
    sc_trace(mVcdFile, m_axi_pos_r_WSTRB, "(port)m_axi_pos_r_WSTRB");
    sc_trace(mVcdFile, m_axi_pos_r_WLAST, "(port)m_axi_pos_r_WLAST");
    sc_trace(mVcdFile, m_axi_pos_r_WID, "(port)m_axi_pos_r_WID");
    sc_trace(mVcdFile, m_axi_pos_r_WUSER, "(port)m_axi_pos_r_WUSER");
    sc_trace(mVcdFile, m_axi_pos_r_ARVALID, "(port)m_axi_pos_r_ARVALID");
    sc_trace(mVcdFile, m_axi_pos_r_ARREADY, "(port)m_axi_pos_r_ARREADY");
    sc_trace(mVcdFile, m_axi_pos_r_ARADDR, "(port)m_axi_pos_r_ARADDR");
    sc_trace(mVcdFile, m_axi_pos_r_ARID, "(port)m_axi_pos_r_ARID");
    sc_trace(mVcdFile, m_axi_pos_r_ARLEN, "(port)m_axi_pos_r_ARLEN");
    sc_trace(mVcdFile, m_axi_pos_r_ARSIZE, "(port)m_axi_pos_r_ARSIZE");
    sc_trace(mVcdFile, m_axi_pos_r_ARBURST, "(port)m_axi_pos_r_ARBURST");
    sc_trace(mVcdFile, m_axi_pos_r_ARLOCK, "(port)m_axi_pos_r_ARLOCK");
    sc_trace(mVcdFile, m_axi_pos_r_ARCACHE, "(port)m_axi_pos_r_ARCACHE");
    sc_trace(mVcdFile, m_axi_pos_r_ARPROT, "(port)m_axi_pos_r_ARPROT");
    sc_trace(mVcdFile, m_axi_pos_r_ARQOS, "(port)m_axi_pos_r_ARQOS");
    sc_trace(mVcdFile, m_axi_pos_r_ARREGION, "(port)m_axi_pos_r_ARREGION");
    sc_trace(mVcdFile, m_axi_pos_r_ARUSER, "(port)m_axi_pos_r_ARUSER");
    sc_trace(mVcdFile, m_axi_pos_r_RVALID, "(port)m_axi_pos_r_RVALID");
    sc_trace(mVcdFile, m_axi_pos_r_RREADY, "(port)m_axi_pos_r_RREADY");
    sc_trace(mVcdFile, m_axi_pos_r_RDATA, "(port)m_axi_pos_r_RDATA");
    sc_trace(mVcdFile, m_axi_pos_r_RLAST, "(port)m_axi_pos_r_RLAST");
    sc_trace(mVcdFile, m_axi_pos_r_RID, "(port)m_axi_pos_r_RID");
    sc_trace(mVcdFile, m_axi_pos_r_RUSER, "(port)m_axi_pos_r_RUSER");
    sc_trace(mVcdFile, m_axi_pos_r_RRESP, "(port)m_axi_pos_r_RRESP");
    sc_trace(mVcdFile, m_axi_pos_r_BVALID, "(port)m_axi_pos_r_BVALID");
    sc_trace(mVcdFile, m_axi_pos_r_BREADY, "(port)m_axi_pos_r_BREADY");
    sc_trace(mVcdFile, m_axi_pos_r_BRESP, "(port)m_axi_pos_r_BRESP");
    sc_trace(mVcdFile, m_axi_pos_r_BID, "(port)m_axi_pos_r_BID");
    sc_trace(mVcdFile, m_axi_pos_r_BUSER, "(port)m_axi_pos_r_BUSER");
    sc_trace(mVcdFile, m_axi_debug_AWVALID, "(port)m_axi_debug_AWVALID");
    sc_trace(mVcdFile, m_axi_debug_AWREADY, "(port)m_axi_debug_AWREADY");
    sc_trace(mVcdFile, m_axi_debug_AWADDR, "(port)m_axi_debug_AWADDR");
    sc_trace(mVcdFile, m_axi_debug_AWID, "(port)m_axi_debug_AWID");
    sc_trace(mVcdFile, m_axi_debug_AWLEN, "(port)m_axi_debug_AWLEN");
    sc_trace(mVcdFile, m_axi_debug_AWSIZE, "(port)m_axi_debug_AWSIZE");
    sc_trace(mVcdFile, m_axi_debug_AWBURST, "(port)m_axi_debug_AWBURST");
    sc_trace(mVcdFile, m_axi_debug_AWLOCK, "(port)m_axi_debug_AWLOCK");
    sc_trace(mVcdFile, m_axi_debug_AWCACHE, "(port)m_axi_debug_AWCACHE");
    sc_trace(mVcdFile, m_axi_debug_AWPROT, "(port)m_axi_debug_AWPROT");
    sc_trace(mVcdFile, m_axi_debug_AWQOS, "(port)m_axi_debug_AWQOS");
    sc_trace(mVcdFile, m_axi_debug_AWREGION, "(port)m_axi_debug_AWREGION");
    sc_trace(mVcdFile, m_axi_debug_AWUSER, "(port)m_axi_debug_AWUSER");
    sc_trace(mVcdFile, m_axi_debug_WVALID, "(port)m_axi_debug_WVALID");
    sc_trace(mVcdFile, m_axi_debug_WREADY, "(port)m_axi_debug_WREADY");
    sc_trace(mVcdFile, m_axi_debug_WDATA, "(port)m_axi_debug_WDATA");
    sc_trace(mVcdFile, m_axi_debug_WSTRB, "(port)m_axi_debug_WSTRB");
    sc_trace(mVcdFile, m_axi_debug_WLAST, "(port)m_axi_debug_WLAST");
    sc_trace(mVcdFile, m_axi_debug_WID, "(port)m_axi_debug_WID");
    sc_trace(mVcdFile, m_axi_debug_WUSER, "(port)m_axi_debug_WUSER");
    sc_trace(mVcdFile, m_axi_debug_ARVALID, "(port)m_axi_debug_ARVALID");
    sc_trace(mVcdFile, m_axi_debug_ARREADY, "(port)m_axi_debug_ARREADY");
    sc_trace(mVcdFile, m_axi_debug_ARADDR, "(port)m_axi_debug_ARADDR");
    sc_trace(mVcdFile, m_axi_debug_ARID, "(port)m_axi_debug_ARID");
    sc_trace(mVcdFile, m_axi_debug_ARLEN, "(port)m_axi_debug_ARLEN");
    sc_trace(mVcdFile, m_axi_debug_ARSIZE, "(port)m_axi_debug_ARSIZE");
    sc_trace(mVcdFile, m_axi_debug_ARBURST, "(port)m_axi_debug_ARBURST");
    sc_trace(mVcdFile, m_axi_debug_ARLOCK, "(port)m_axi_debug_ARLOCK");
    sc_trace(mVcdFile, m_axi_debug_ARCACHE, "(port)m_axi_debug_ARCACHE");
    sc_trace(mVcdFile, m_axi_debug_ARPROT, "(port)m_axi_debug_ARPROT");
    sc_trace(mVcdFile, m_axi_debug_ARQOS, "(port)m_axi_debug_ARQOS");
    sc_trace(mVcdFile, m_axi_debug_ARREGION, "(port)m_axi_debug_ARREGION");
    sc_trace(mVcdFile, m_axi_debug_ARUSER, "(port)m_axi_debug_ARUSER");
    sc_trace(mVcdFile, m_axi_debug_RVALID, "(port)m_axi_debug_RVALID");
    sc_trace(mVcdFile, m_axi_debug_RREADY, "(port)m_axi_debug_RREADY");
    sc_trace(mVcdFile, m_axi_debug_RDATA, "(port)m_axi_debug_RDATA");
    sc_trace(mVcdFile, m_axi_debug_RLAST, "(port)m_axi_debug_RLAST");
    sc_trace(mVcdFile, m_axi_debug_RID, "(port)m_axi_debug_RID");
    sc_trace(mVcdFile, m_axi_debug_RUSER, "(port)m_axi_debug_RUSER");
    sc_trace(mVcdFile, m_axi_debug_RRESP, "(port)m_axi_debug_RRESP");
    sc_trace(mVcdFile, m_axi_debug_BVALID, "(port)m_axi_debug_BVALID");
    sc_trace(mVcdFile, m_axi_debug_BREADY, "(port)m_axi_debug_BREADY");
    sc_trace(mVcdFile, m_axi_debug_BRESP, "(port)m_axi_debug_BRESP");
    sc_trace(mVcdFile, m_axi_debug_BID, "(port)m_axi_debug_BID");
    sc_trace(mVcdFile, m_axi_debug_BUSER, "(port)m_axi_debug_BUSER");
    sc_trace(mVcdFile, s_axi_ctrl_AWVALID, "(port)s_axi_ctrl_AWVALID");
    sc_trace(mVcdFile, s_axi_ctrl_AWREADY, "(port)s_axi_ctrl_AWREADY");
    sc_trace(mVcdFile, s_axi_ctrl_AWADDR, "(port)s_axi_ctrl_AWADDR");
    sc_trace(mVcdFile, s_axi_ctrl_WVALID, "(port)s_axi_ctrl_WVALID");
    sc_trace(mVcdFile, s_axi_ctrl_WREADY, "(port)s_axi_ctrl_WREADY");
    sc_trace(mVcdFile, s_axi_ctrl_WDATA, "(port)s_axi_ctrl_WDATA");
    sc_trace(mVcdFile, s_axi_ctrl_WSTRB, "(port)s_axi_ctrl_WSTRB");
    sc_trace(mVcdFile, s_axi_ctrl_ARVALID, "(port)s_axi_ctrl_ARVALID");
    sc_trace(mVcdFile, s_axi_ctrl_ARREADY, "(port)s_axi_ctrl_ARREADY");
    sc_trace(mVcdFile, s_axi_ctrl_ARADDR, "(port)s_axi_ctrl_ARADDR");
    sc_trace(mVcdFile, s_axi_ctrl_RVALID, "(port)s_axi_ctrl_RVALID");
    sc_trace(mVcdFile, s_axi_ctrl_RREADY, "(port)s_axi_ctrl_RREADY");
    sc_trace(mVcdFile, s_axi_ctrl_RDATA, "(port)s_axi_ctrl_RDATA");
    sc_trace(mVcdFile, s_axi_ctrl_RRESP, "(port)s_axi_ctrl_RRESP");
    sc_trace(mVcdFile, s_axi_ctrl_BVALID, "(port)s_axi_ctrl_BVALID");
    sc_trace(mVcdFile, s_axi_ctrl_BREADY, "(port)s_axi_ctrl_BREADY");
    sc_trace(mVcdFile, s_axi_ctrl_BRESP, "(port)s_axi_ctrl_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, s_axi_param_AWVALID, "(port)s_axi_param_AWVALID");
    sc_trace(mVcdFile, s_axi_param_AWREADY, "(port)s_axi_param_AWREADY");
    sc_trace(mVcdFile, s_axi_param_AWADDR, "(port)s_axi_param_AWADDR");
    sc_trace(mVcdFile, s_axi_param_WVALID, "(port)s_axi_param_WVALID");
    sc_trace(mVcdFile, s_axi_param_WREADY, "(port)s_axi_param_WREADY");
    sc_trace(mVcdFile, s_axi_param_WDATA, "(port)s_axi_param_WDATA");
    sc_trace(mVcdFile, s_axi_param_WSTRB, "(port)s_axi_param_WSTRB");
    sc_trace(mVcdFile, s_axi_param_ARVALID, "(port)s_axi_param_ARVALID");
    sc_trace(mVcdFile, s_axi_param_ARREADY, "(port)s_axi_param_ARREADY");
    sc_trace(mVcdFile, s_axi_param_ARADDR, "(port)s_axi_param_ARADDR");
    sc_trace(mVcdFile, s_axi_param_RVALID, "(port)s_axi_param_RVALID");
    sc_trace(mVcdFile, s_axi_param_RREADY, "(port)s_axi_param_RREADY");
    sc_trace(mVcdFile, s_axi_param_RDATA, "(port)s_axi_param_RDATA");
    sc_trace(mVcdFile, s_axi_param_RRESP, "(port)s_axi_param_RRESP");
    sc_trace(mVcdFile, s_axi_param_BVALID, "(port)s_axi_param_BVALID");
    sc_trace(mVcdFile, s_axi_param_BREADY, "(port)s_axi_param_BREADY");
    sc_trace(mVcdFile, s_axi_param_BRESP, "(port)s_axi_param_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, pyr_data_ptr, "pyr_data_ptr");
    sc_trace(mVcdFile, img_w, "img_w");
    sc_trace(mVcdFile, img_h, "img_h");
    sc_trace(mVcdFile, ref_patch_with_border_ptr, "ref_patch_with_border_ptr");
    sc_trace(mVcdFile, cur_px_estimate_ptr, "cur_px_estimate_ptr");
    sc_trace(mVcdFile, levels, "levels");
    sc_trace(mVcdFile, converged_ap_vld, "converged_ap_vld");
    sc_trace(mVcdFile, n_iter, "n_iter");
    sc_trace(mVcdFile, transfer_pyr, "transfer_pyr");
    sc_trace(mVcdFile, inv_out, "inv_out");
    sc_trace(mVcdFile, pyr_data_address0, "pyr_data_address0");
    sc_trace(mVcdFile, pyr_data_ce0, "pyr_data_ce0");
    sc_trace(mVcdFile, pyr_data_we0, "pyr_data_we0");
    sc_trace(mVcdFile, pyr_data_q0, "pyr_data_q0");
    sc_trace(mVcdFile, cur_px_estimate_3_1, "cur_px_estimate_3_1");
    sc_trace(mVcdFile, cur_px_estimate_0_0, "cur_px_estimate_0_0");
    sc_trace(mVcdFile, cur_px_estimate_0_1, "cur_px_estimate_0_1");
    sc_trace(mVcdFile, cur_px_estimate_1_0, "cur_px_estimate_1_0");
    sc_trace(mVcdFile, cur_px_estimate_1_1, "cur_px_estimate_1_1");
    sc_trace(mVcdFile, cur_px_estimate_2_0, "cur_px_estimate_2_0");
    sc_trace(mVcdFile, cur_px_estimate_2_1, "cur_px_estimate_2_1");
    sc_trace(mVcdFile, cur_px_estimate_3_0, "cur_px_estimate_3_0");
    sc_trace(mVcdFile, pyr_blk_n_AR, "pyr_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, pyr_blk_n_R, "pyr_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond3_reg_916, "exitcond3_reg_916");
    sc_trace(mVcdFile, pos_r_blk_n_AR, "pos_r_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, pos_r_blk_n_R, "pos_r_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, pos_r_blk_n_AW, "pos_r_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, pos_r_blk_n_W, "pos_r_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, pos_r_blk_n_B, "pos_r_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage0, "ap_block_pp3_stage0");
    sc_trace(mVcdFile, exitcond5_reg_1019, "exitcond5_reg_1019");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, debug_blk_n_AW, "debug_blk_n_AW");
    sc_trace(mVcdFile, debug_blk_n_B, "debug_blk_n_B");
    sc_trace(mVcdFile, debug_blk_n_W, "debug_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, exitcond4_reg_1005, "exitcond4_reg_1005");
    sc_trace(mVcdFile, pyr_AWREADY, "pyr_AWREADY");
    sc_trace(mVcdFile, pyr_WREADY, "pyr_WREADY");
    sc_trace(mVcdFile, pyr_ARVALID, "pyr_ARVALID");
    sc_trace(mVcdFile, pyr_ARREADY, "pyr_ARREADY");
    sc_trace(mVcdFile, pyr_RVALID, "pyr_RVALID");
    sc_trace(mVcdFile, pyr_RREADY, "pyr_RREADY");
    sc_trace(mVcdFile, pyr_RDATA, "pyr_RDATA");
    sc_trace(mVcdFile, pyr_RLAST, "pyr_RLAST");
    sc_trace(mVcdFile, pyr_RID, "pyr_RID");
    sc_trace(mVcdFile, pyr_RUSER, "pyr_RUSER");
    sc_trace(mVcdFile, pyr_RRESP, "pyr_RRESP");
    sc_trace(mVcdFile, pyr_BVALID, "pyr_BVALID");
    sc_trace(mVcdFile, pyr_BRESP, "pyr_BRESP");
    sc_trace(mVcdFile, pyr_BID, "pyr_BID");
    sc_trace(mVcdFile, pyr_BUSER, "pyr_BUSER");
    sc_trace(mVcdFile, pos_r_AWVALID, "pos_r_AWVALID");
    sc_trace(mVcdFile, pos_r_AWREADY, "pos_r_AWREADY");
    sc_trace(mVcdFile, pos_r_AWADDR, "pos_r_AWADDR");
    sc_trace(mVcdFile, pos_r_AWLEN, "pos_r_AWLEN");
    sc_trace(mVcdFile, pos_r_WVALID, "pos_r_WVALID");
    sc_trace(mVcdFile, pos_r_WREADY, "pos_r_WREADY");
    sc_trace(mVcdFile, pos_r_WDATA, "pos_r_WDATA");
    sc_trace(mVcdFile, pos_r_ARVALID, "pos_r_ARVALID");
    sc_trace(mVcdFile, pos_r_ARREADY, "pos_r_ARREADY");
    sc_trace(mVcdFile, pos_r_RVALID, "pos_r_RVALID");
    sc_trace(mVcdFile, pos_r_RREADY, "pos_r_RREADY");
    sc_trace(mVcdFile, pos_r_RDATA, "pos_r_RDATA");
    sc_trace(mVcdFile, pos_r_RLAST, "pos_r_RLAST");
    sc_trace(mVcdFile, pos_r_RID, "pos_r_RID");
    sc_trace(mVcdFile, pos_r_RUSER, "pos_r_RUSER");
    sc_trace(mVcdFile, pos_r_RRESP, "pos_r_RRESP");
    sc_trace(mVcdFile, pos_r_BVALID, "pos_r_BVALID");
    sc_trace(mVcdFile, pos_r_BREADY, "pos_r_BREADY");
    sc_trace(mVcdFile, pos_r_BRESP, "pos_r_BRESP");
    sc_trace(mVcdFile, pos_r_BID, "pos_r_BID");
    sc_trace(mVcdFile, pos_r_BUSER, "pos_r_BUSER");
    sc_trace(mVcdFile, debug_AWVALID, "debug_AWVALID");
    sc_trace(mVcdFile, debug_AWREADY, "debug_AWREADY");
    sc_trace(mVcdFile, debug_WVALID, "debug_WVALID");
    sc_trace(mVcdFile, debug_WREADY, "debug_WREADY");
    sc_trace(mVcdFile, debug_ARREADY, "debug_ARREADY");
    sc_trace(mVcdFile, debug_RVALID, "debug_RVALID");
    sc_trace(mVcdFile, debug_RDATA, "debug_RDATA");
    sc_trace(mVcdFile, debug_RLAST, "debug_RLAST");
    sc_trace(mVcdFile, debug_RID, "debug_RID");
    sc_trace(mVcdFile, debug_RUSER, "debug_RUSER");
    sc_trace(mVcdFile, debug_RRESP, "debug_RRESP");
    sc_trace(mVcdFile, debug_BVALID, "debug_BVALID");
    sc_trace(mVcdFile, debug_BREADY, "debug_BREADY");
    sc_trace(mVcdFile, debug_BRESP, "debug_BRESP");
    sc_trace(mVcdFile, debug_BID, "debug_BID");
    sc_trace(mVcdFile, debug_BUSER, "debug_BUSER");
    sc_trace(mVcdFile, indvar_reg_378, "indvar_reg_378");
    sc_trace(mVcdFile, indvar_reg_378_pp0_iter1_reg, "indvar_reg_378_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter0, "ap_block_state9_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter2, "ap_block_state11_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar3_reg_390, "indvar3_reg_390");
    sc_trace(mVcdFile, indvar6_reg_401, "indvar6_reg_401");
    sc_trace(mVcdFile, indvar8_reg_412, "indvar8_reg_412");
    sc_trace(mVcdFile, reg_431, "reg_431");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_423_p2, "grp_fu_423_p2");
    sc_trace(mVcdFile, reg_435, "reg_435");
    sc_trace(mVcdFile, ap_sig_ioackin_pos_r_AWREADY, "ap_sig_ioackin_pos_r_AWREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_pos_r_WREADY, "ap_sig_ioackin_pos_r_WREADY");
    sc_trace(mVcdFile, ap_block_state30_io, "ap_block_state30_io");
    sc_trace(mVcdFile, transfer_pyr_read_read_fu_228_p2, "transfer_pyr_read_read_fu_228_p2");
    sc_trace(mVcdFile, debug_addr_reg_889, "debug_addr_reg_889");
    sc_trace(mVcdFile, tmp_2_cast_fu_477_p1, "tmp_2_cast_fu_477_p1");
    sc_trace(mVcdFile, tmp_2_cast_reg_895, "tmp_2_cast_reg_895");
    sc_trace(mVcdFile, pos_addr_reg_902, "pos_addr_reg_902");
    sc_trace(mVcdFile, pyr_addr_reg_910, "pyr_addr_reg_910");
    sc_trace(mVcdFile, exitcond3_fu_493_p2, "exitcond3_fu_493_p2");
    sc_trace(mVcdFile, exitcond3_reg_916_pp0_iter1_reg, "exitcond3_reg_916_pp0_iter1_reg");
    sc_trace(mVcdFile, indvar_next_fu_499_p2, "indvar_next_fu_499_p2");
    sc_trace(mVcdFile, indvar_next_reg_920, "indvar_next_reg_920");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, pyr_addr_read_reg_925, "pyr_addr_read_reg_925");
    sc_trace(mVcdFile, exitcond2_fu_510_p2, "exitcond2_fu_510_p2");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage0_iter0, "ap_block_state19_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state20_pp1_stage0_iter1, "ap_block_state20_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, indvar_next2_fu_516_p2, "indvar_next2_fu_516_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, p_t1_reg_939, "p_t1_reg_939");
    sc_trace(mVcdFile, tmp_3_fu_532_p1, "tmp_3_fu_532_p1");
    sc_trace(mVcdFile, tmp_3_reg_943, "tmp_3_reg_943");
    sc_trace(mVcdFile, tmp_8_fu_584_p1, "tmp_8_fu_584_p1");
    sc_trace(mVcdFile, tmp_8_1_fu_589_p1, "tmp_8_1_fu_589_p1");
    sc_trace(mVcdFile, grp_fu_428_p1, "grp_fu_428_p1");
    sc_trace(mVcdFile, tmp_9_reg_957, "tmp_9_reg_957");
    sc_trace(mVcdFile, tmp_8_2_fu_594_p1, "tmp_8_2_fu_594_p1");
    sc_trace(mVcdFile, tmp_9_1_reg_967, "tmp_9_1_reg_967");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, tmp_8_3_fu_599_p1, "tmp_8_3_fu_599_p1");
    sc_trace(mVcdFile, pos_addr_1_reg_977, "pos_addr_1_reg_977");
    sc_trace(mVcdFile, ap_sig_ioackin_debug_AWREADY, "ap_sig_ioackin_debug_AWREADY");
    sc_trace(mVcdFile, ap_block_state27_io, "ap_block_state27_io");
    sc_trace(mVcdFile, tmp_9_2_reg_983, "tmp_9_2_reg_983");
    sc_trace(mVcdFile, pos_addr_2_reg_988, "pos_addr_2_reg_988");
    sc_trace(mVcdFile, tmp_9_3_reg_994, "tmp_9_3_reg_994");
    sc_trace(mVcdFile, pos_addr_3_reg_999, "pos_addr_3_reg_999");
    sc_trace(mVcdFile, exitcond4_fu_649_p2, "exitcond4_fu_649_p2");
    sc_trace(mVcdFile, ap_block_state39_pp2_stage0_iter0, "ap_block_state39_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state40_pp2_stage0_iter1, "ap_block_state40_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_sig_ioackin_debug_WREADY, "ap_sig_ioackin_debug_WREADY");
    sc_trace(mVcdFile, ap_block_state40_io, "ap_block_state40_io");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, indvar_next3_fu_655_p2, "indvar_next3_fu_655_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, tmp_1_13_fu_661_p38, "tmp_1_13_fu_661_p38");
    sc_trace(mVcdFile, tmp_1_13_reg_1014, "tmp_1_13_reg_1014");
    sc_trace(mVcdFile, exitcond5_fu_739_p2, "exitcond5_fu_739_p2");
    sc_trace(mVcdFile, ap_block_state46_pp3_stage0_iter0, "ap_block_state46_pp3_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state47_pp3_stage0_iter1, "ap_block_state47_pp3_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state47_io, "ap_block_state47_io");
    sc_trace(mVcdFile, ap_block_pp3_stage0_11001, "ap_block_pp3_stage0_11001");
    sc_trace(mVcdFile, indvar_next4_fu_745_p2, "indvar_next4_fu_745_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, UnifiedRetVal_i_fu_877_p3, "UnifiedRetVal_i_fu_877_p3");
    sc_trace(mVcdFile, UnifiedRetVal_i_reg_1028, "UnifiedRetVal_i_reg_1028");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state9, "ap_condition_pp0_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state19, "ap_condition_pp1_exit_iter0_state19");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state39, "ap_condition_pp2_exit_iter0_state39");
    sc_trace(mVcdFile, ap_block_pp3_stage0_subdone, "ap_block_pp3_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp3_exit_iter0_state46, "ap_condition_pp3_exit_iter0_state46");
    sc_trace(mVcdFile, ap_phi_mux_indvar_phi_fu_382_p4, "ap_phi_mux_indvar_phi_fu_382_p4");
    sc_trace(mVcdFile, indvar4_fu_505_p1, "indvar4_fu_505_p1");
    sc_trace(mVcdFile, tmp_fu_453_p1, "tmp_fu_453_p1");
    sc_trace(mVcdFile, tmp_2_fu_473_p1, "tmp_2_fu_473_p1");
    sc_trace(mVcdFile, cur_px_estimate_ptr6_fu_609_p1, "cur_px_estimate_ptr6_fu_609_p1");
    sc_trace(mVcdFile, cur_px_estimate_ptr6_4_fu_624_p1, "cur_px_estimate_ptr6_4_fu_624_p1");
    sc_trace(mVcdFile, cur_px_estimate_ptr6_5_fu_639_p1, "cur_px_estimate_ptr6_5_fu_639_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_pyr_ARREADY, "ap_reg_ioackin_pyr_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_pyr_ARREADY, "ap_sig_ioackin_pyr_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_pos_r_ARREADY, "ap_reg_ioackin_pos_r_ARREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_pos_r_ARREADY, "ap_sig_ioackin_pos_r_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_pos_r_AWREADY, "ap_reg_ioackin_pos_r_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_debug_AWREADY, "ap_reg_ioackin_debug_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_pos_r_WREADY, "ap_reg_ioackin_pos_r_WREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_debug_WREADY, "ap_reg_ioackin_debug_WREADY");
    sc_trace(mVcdFile, ap_block_pp2_stage0_01001, "ap_block_pp2_stage0_01001");
    sc_trace(mVcdFile, ap_block_pp3_stage0_01001, "ap_block_pp3_stage0_01001");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_423_p0, "grp_fu_423_p0");
    sc_trace(mVcdFile, grp_fu_428_p0, "grp_fu_428_p0");
    sc_trace(mVcdFile, inv_out7_fu_443_p4, "inv_out7_fu_443_p4");
    sc_trace(mVcdFile, cur_px_estimate_ptr5_fu_463_p4, "cur_px_estimate_ptr5_fu_463_p4");
    sc_trace(mVcdFile, cur_px_estimate_ptr6_1_fu_604_p2, "cur_px_estimate_ptr6_1_fu_604_p2");
    sc_trace(mVcdFile, cur_px_estimate_ptr6_2_fu_619_p2, "cur_px_estimate_ptr6_2_fu_619_p2");
    sc_trace(mVcdFile, cur_px_estimate_ptr6_3_fu_634_p2, "cur_px_estimate_ptr6_3_fu_634_p2");
    sc_trace(mVcdFile, tmp_4_fu_751_p1, "tmp_4_fu_751_p1");
    sc_trace(mVcdFile, sel_tmp_i_fu_787_p2, "sel_tmp_i_fu_787_p2");
    sc_trace(mVcdFile, sel_tmp2_i_fu_801_p2, "sel_tmp2_i_fu_801_p2");
    sc_trace(mVcdFile, sel_tmp1_i_fu_793_p3, "sel_tmp1_i_fu_793_p3");
    sc_trace(mVcdFile, sel_tmp4_i_fu_815_p2, "sel_tmp4_i_fu_815_p2");
    sc_trace(mVcdFile, sel_tmp3_i_fu_807_p3, "sel_tmp3_i_fu_807_p3");
    sc_trace(mVcdFile, sel_tmp6_i_fu_829_p2, "sel_tmp6_i_fu_829_p2");
    sc_trace(mVcdFile, sel_tmp5_i_fu_821_p3, "sel_tmp5_i_fu_821_p3");
    sc_trace(mVcdFile, sel_tmp8_i_fu_843_p2, "sel_tmp8_i_fu_843_p2");
    sc_trace(mVcdFile, sel_tmp7_i_fu_835_p3, "sel_tmp7_i_fu_835_p3");
    sc_trace(mVcdFile, sel_tmp10_i_fu_857_p2, "sel_tmp10_i_fu_857_p2");
    sc_trace(mVcdFile, sel_tmp9_i_fu_849_p3, "sel_tmp9_i_fu_849_p3");
    sc_trace(mVcdFile, sel_tmp12_i_fu_871_p2, "sel_tmp12_i_fu_871_p2");
    sc_trace(mVcdFile, sel_tmp11_i_fu_863_p3, "sel_tmp11_i_fu_863_p3");
    sc_trace(mVcdFile, grp_fu_423_ce, "grp_fu_423_ce");
    sc_trace(mVcdFile, grp_fu_428_ce, "grp_fu_428_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_idle_pp3, "ap_idle_pp3");
    sc_trace(mVcdFile, ap_enable_pp3, "ap_enable_pp3");
    sc_trace(mVcdFile, ap_condition_1615, "ap_condition_1615");
#endif

    }
    mHdltvinHandle.open("batch_align2D.hdltvin.dat");
    mHdltvoutHandle.open("batch_align2D.hdltvout.dat");
}

batch_align2D::~batch_align2D() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete pyr_data_U;
    delete batch_align2D_ctrl_s_axi_U;
    delete batch_align2D_param_s_axi_U;
    delete batch_align2D_pyr_m_axi_U;
    delete batch_align2D_pos_r_m_axi_U;
    delete batch_align2D_debug_m_axi_U;
    delete batch_align2D_fadd_32ns_32ns_32_4_full_dsp_1_U1;
    delete batch_align2D_sitofp_32ns_32_3_1_U2;
    delete batch_align2D_mux_366_32_1_1_U3;
}

void batch_align2D::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void batch_align2D::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_logic_0;
}

void batch_align2D::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv32_0;
}

void batch_align2D::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv32_8;
}

void batch_align2D::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv1_0;
}

void batch_align2D::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void batch_align2D::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_73AA0;
}

void batch_align2D::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void batch_align2D::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void batch_align2D::thread_ap_var_for_const12() {
    ap_var_for_const12 = ap_const_lv32_24;
}

void batch_align2D::thread_ap_var_for_const11() {
    ap_var_for_const11 = ap_const_lv4_F;
}

void batch_align2D::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_0;
}

void batch_align2D::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_0;
}

void batch_align2D::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state9.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state19.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state19.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state19.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state39.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
                    esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state39.read()))) {
            ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state39.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
                    esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state46.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, debug_BVALID.read())))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state46.read()))) {
            ap_enable_reg_pp3_iter1 = (ap_condition_pp3_exit_iter0_state46.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, debug_BVALID.read())))) {
            ap_enable_reg_pp3_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_debug_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
            if (esl_seteq<1,1,1>(ap_block_state27_io.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_debug_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, debug_AWREADY.read())) {
                ap_reg_ioackin_debug_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_debug_WREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_1615.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0)) {
                ap_reg_ioackin_debug_WREADY = ap_const_logic_0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, debug_WREADY.read()) && 
                        esl_seteq<1,1,1>(ap_block_pp2_stage0_01001.read(), ap_const_boolean_0))) {
                ap_reg_ioackin_debug_WREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_pos_r_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_pos_r_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, pos_r_ARREADY.read())) {
                ap_reg_ioackin_pos_r_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_AWREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
              esl_seteq<1,1,1>(ap_block_state30_io.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
              esl_seteq<1,1,1>(ap_block_state27_io.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_AWREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
              !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, debug_BVALID.read()))))) {
            ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_AWREADY.read()) && 
                     esl_seteq<1,1,1>(debug_BVALID.read(), ap_const_logic_1)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_AWREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_AWREADY.read())))) {
            ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
              esl_seteq<1,1,1>(ap_block_state30_io.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
              esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1019.read()) && 
              esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_WREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1019.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, pos_r_WREADY.read()) && 
                     esl_seteq<1,1,1>(ap_block_pp3_stage0_01001.read(), ap_const_boolean_0)))) {
            ap_reg_ioackin_pos_r_WREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_pyr_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_pyr_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_pyr_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, pyr_ARREADY.read())) {
                ap_reg_ioackin_pyr_ARREADY = ap_const_logic_1;
            }
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        indvar3_reg_390 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_510_p2.read()))) {
        indvar3_reg_390 = indvar_next2_fu_516_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
         esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
        indvar6_reg_401 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_649_p2.read()))) {
        indvar6_reg_401 = indvar_next3_fu_655_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, debug_BVALID.read())))) {
        indvar8_reg_412 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_739_p2.read()))) {
        indvar8_reg_412 = indvar_next4_fu_745_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        indvar_reg_378 = ap_const_lv19_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(exitcond3_reg_916.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_reg_378 = indvar_next_reg_920.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_739_p2.read()))) {
        UnifiedRetVal_i_reg_1028 = UnifiedRetVal_i_fu_877_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(p_t1_reg_939.read(), ap_const_lv2_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_943.read()))) {
        cur_px_estimate_0_0 = pos_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_3_reg_943.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(p_t1_reg_939.read(), ap_const_lv2_0))) {
        cur_px_estimate_0_1 = pos_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_943.read()) && esl_seteq<1,2,2>(p_t1_reg_939.read(), ap_const_lv2_1))) {
        cur_px_estimate_1_0 = pos_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_3_reg_943.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(p_t1_reg_939.read(), ap_const_lv2_1))) {
        cur_px_estimate_1_1 = pos_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_943.read()) && esl_seteq<1,2,2>(p_t1_reg_939.read(), ap_const_lv2_2))) {
        cur_px_estimate_2_0 = pos_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_3_reg_943.read(), ap_const_lv1_1) && esl_seteq<1,2,2>(p_t1_reg_939.read(), ap_const_lv2_2))) {
        cur_px_estimate_2_1 = pos_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(p_t1_reg_939.read(), ap_const_lv2_3) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_943.read()))) {
        cur_px_estimate_3_0 = pos_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,2,2>(p_t1_reg_939.read(), ap_const_lv2_3) && esl_seteq<1,1,1>(tmp_3_reg_943.read(), ap_const_lv1_1))) {
        cur_px_estimate_3_1 = pos_r_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        debug_addr_reg_889 = tmp_fu_453_p1.read();
        pos_addr_reg_902 = tmp_2_fu_473_p1.read();
        pyr_addr_reg_910 = pyr_data_ptr.read();
        tmp_2_cast_reg_895 = tmp_2_cast_fu_477_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond3_reg_916 = exitcond3_fu_493_p2.read();
        exitcond3_reg_916_pp0_iter1_reg = exitcond3_reg_916.read();
        indvar_reg_378_pp0_iter1_reg = indvar_reg_378.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond4_reg_1005 = exitcond4_fu_649_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond5_reg_1019 = exitcond5_fu_739_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        indvar_next_reg_920 = indvar_next_fu_499_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_510_p2.read()))) {
        p_t1_reg_939 = indvar3_reg_390.read().range(2, 1);
        tmp_3_reg_943 = tmp_3_fu_532_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(ap_block_state27_io.read(), ap_const_boolean_0))) {
        pos_addr_1_reg_977 = cur_px_estimate_ptr6_fu_609_p1.read();
        tmp_9_2_reg_983 = grp_fu_428_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_AWREADY.read(), ap_const_logic_1))) {
        pos_addr_2_reg_988 = cur_px_estimate_ptr6_4_fu_624_p1.read();
        pos_addr_3_reg_999 = cur_px_estimate_ptr6_5_fu_639_p1.read();
        tmp_9_3_reg_994 = grp_fu_428_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond3_reg_916.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        pyr_addr_read_reg_925 = pyr_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_431 = pyr_data_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
  esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_AWREADY.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
  esl_seteq<1,1,1>(ap_block_state30_io.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
  esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
  esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1)))) {
        reg_435 = grp_fu_423_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_649_p2.read()))) {
        tmp_1_13_reg_1014 = tmp_1_13_fu_661_p38.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        tmp_9_1_reg_967 = grp_fu_428_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        tmp_9_reg_957 = grp_fu_428_p1.read();
    }
}

void batch_align2D::thread_UnifiedRetVal_i_fu_877_p3() {
    UnifiedRetVal_i_fu_877_p3 = (!sel_tmp12_i_fu_871_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp12_i_fu_871_p2.read()[0].to_bool())? cur_px_estimate_3_0.read(): sel_tmp11_i_fu_863_p3.read());
}

void batch_align2D::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[8];
}

void batch_align2D::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[16];
}

void batch_align2D::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[35];
}

void batch_align2D::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read()[41];
}

void batch_align2D::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void batch_align2D::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[9];
}

void batch_align2D::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[15];
}

void batch_align2D::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void batch_align2D::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[17];
}

void batch_align2D::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[18];
}

void batch_align2D::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[19];
}

void batch_align2D::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[20];
}

void batch_align2D::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[21];
}

void batch_align2D::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[22];
}

void batch_align2D::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[23];
}

void batch_align2D::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[24];
}

void batch_align2D::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[25];
}

void batch_align2D::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[26];
}

void batch_align2D::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[27];
}

void batch_align2D::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[28];
}

void batch_align2D::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[29];
}

void batch_align2D::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[31];
}

void batch_align2D::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[32];
}

void batch_align2D::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[33];
}

void batch_align2D::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[34];
}

void batch_align2D::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[40];
}

void batch_align2D::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[46];
}

void batch_align2D::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void batch_align2D::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond3_reg_916.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, pyr_RVALID.read()));
}

void batch_align2D::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond3_reg_916.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, pyr_RVALID.read()));
}

void batch_align2D::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, pos_r_RVALID.read()));
}

void batch_align2D::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, pos_r_RVALID.read()));
}

void batch_align2D::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_pp2_stage0_01001() {
    ap_block_pp2_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state40_io.read()));
}

void batch_align2D::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state40_io.read()));
}

void batch_align2D::thread_ap_block_pp3_stage0() {
    ap_block_pp3_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_pp3_stage0_01001() {
    ap_block_pp3_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_pp3_stage0_11001() {
    ap_block_pp3_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state47_io.read()));
}

void batch_align2D::thread_ap_block_pp3_stage0_subdone() {
    ap_block_pp3_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state47_io.read()));
}

void batch_align2D::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = (esl_seteq<1,1,1>(exitcond3_reg_916.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, pyr_RVALID.read()));
}

void batch_align2D::thread_ap_block_state11_pp0_stage0_iter2() {
    ap_block_state11_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_state19_pp1_stage0_iter0() {
    ap_block_state19_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_state20_pp1_stage0_iter1() {
    ap_block_state20_pp1_stage0_iter1 = esl_seteq<1,1,1>(ap_const_logic_0, pos_r_RVALID.read());
}

void batch_align2D::thread_ap_block_state27_io() {
    ap_block_state27_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_debug_AWREADY.read()));
}

void batch_align2D::thread_ap_block_state30_io() {
    ap_block_state30_io = (esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_WREADY.read()));
}

void batch_align2D::thread_ap_block_state39_pp2_stage0_iter0() {
    ap_block_state39_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_state40_io() {
    ap_block_state40_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1005.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_debug_WREADY.read()));
}

void batch_align2D::thread_ap_block_state40_pp2_stage0_iter1() {
    ap_block_state40_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_state46_pp3_stage0_iter0() {
    ap_block_state46_pp3_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_state47_io() {
    ap_block_state47_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1019.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_WREADY.read()));
}

void batch_align2D::thread_ap_block_state47_pp3_stage0_iter1() {
    ap_block_state47_pp3_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_block_state9_pp0_stage0_iter0() {
    ap_block_state9_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void batch_align2D::thread_ap_condition_1615() {
    ap_condition_1615 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1005.read()));
}

void batch_align2D::thread_ap_condition_pp0_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(exitcond3_fu_493_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_condition_pp1_exit_iter0_state19() {
    if (esl_seteq<1,1,1>(exitcond2_fu_510_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state19 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state19 = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_condition_pp2_exit_iter0_state39() {
    if (esl_seteq<1,1,1>(exitcond4_fu_649_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp2_exit_iter0_state39 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state39 = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_condition_pp3_exit_iter0_state46() {
    if (esl_seteq<1,1,1>(exitcond5_fu_739_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp3_exit_iter0_state46 = ap_const_logic_1;
    } else {
        ap_condition_pp3_exit_iter0_state46 = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
         esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void batch_align2D::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void batch_align2D::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void batch_align2D::thread_ap_enable_pp3() {
    ap_enable_pp3 = (ap_idle_pp3.read() ^ ap_const_logic_1);
}

void batch_align2D::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_idle_pp3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter1.read()))) {
        ap_idle_pp3 = ap_const_logic_1;
    } else {
        ap_idle_pp3 = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_phi_mux_indvar_phi_fu_382_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond3_reg_916.read(), ap_const_lv1_0))) {
        ap_phi_mux_indvar_phi_fu_382_p4 = indvar_next_reg_920.read();
    } else {
        ap_phi_mux_indvar_phi_fu_382_p4 = indvar_reg_378.read();
    }
}

void batch_align2D::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
         esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void batch_align2D::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void batch_align2D::thread_ap_sig_ioackin_debug_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_debug_AWREADY.read())) {
        ap_sig_ioackin_debug_AWREADY = debug_AWREADY.read();
    } else {
        ap_sig_ioackin_debug_AWREADY = ap_const_logic_1;
    }
}

void batch_align2D::thread_ap_sig_ioackin_debug_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_debug_WREADY.read())) {
        ap_sig_ioackin_debug_WREADY = debug_WREADY.read();
    } else {
        ap_sig_ioackin_debug_WREADY = ap_const_logic_1;
    }
}

void batch_align2D::thread_ap_sig_ioackin_pos_r_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_ARREADY.read())) {
        ap_sig_ioackin_pos_r_ARREADY = pos_r_ARREADY.read();
    } else {
        ap_sig_ioackin_pos_r_ARREADY = ap_const_logic_1;
    }
}

void batch_align2D::thread_ap_sig_ioackin_pos_r_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())) {
        ap_sig_ioackin_pos_r_AWREADY = pos_r_AWREADY.read();
    } else {
        ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1;
    }
}

void batch_align2D::thread_ap_sig_ioackin_pos_r_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read())) {
        ap_sig_ioackin_pos_r_WREADY = pos_r_WREADY.read();
    } else {
        ap_sig_ioackin_pos_r_WREADY = ap_const_logic_1;
    }
}

void batch_align2D::thread_ap_sig_ioackin_pyr_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pyr_ARREADY.read())) {
        ap_sig_ioackin_pyr_ARREADY = pyr_ARREADY.read();
    } else {
        ap_sig_ioackin_pyr_ARREADY = ap_const_logic_1;
    }
}

void batch_align2D::thread_converged_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(ap_block_state30_io.read(), ap_const_boolean_0))) {
        converged_ap_vld = ap_const_logic_1;
    } else {
        converged_ap_vld = ap_const_logic_0;
    }
}

void batch_align2D::thread_cur_px_estimate_ptr5_fu_463_p4() {
    cur_px_estimate_ptr5_fu_463_p4 = cur_px_estimate_ptr.read().range(63, 2);
}

void batch_align2D::thread_cur_px_estimate_ptr6_1_fu_604_p2() {
    cur_px_estimate_ptr6_1_fu_604_p2 = (!tmp_2_cast_reg_895.read().is_01() || !ap_const_lv63_2.is_01())? sc_lv<63>(): (sc_biguint<63>(tmp_2_cast_reg_895.read()) + sc_biguint<63>(ap_const_lv63_2));
}

void batch_align2D::thread_cur_px_estimate_ptr6_2_fu_619_p2() {
    cur_px_estimate_ptr6_2_fu_619_p2 = (!tmp_2_cast_reg_895.read().is_01() || !ap_const_lv63_4.is_01())? sc_lv<63>(): (sc_biguint<63>(tmp_2_cast_reg_895.read()) + sc_biguint<63>(ap_const_lv63_4));
}

void batch_align2D::thread_cur_px_estimate_ptr6_3_fu_634_p2() {
    cur_px_estimate_ptr6_3_fu_634_p2 = (!tmp_2_cast_reg_895.read().is_01() || !ap_const_lv63_6.is_01())? sc_lv<63>(): (sc_biguint<63>(tmp_2_cast_reg_895.read()) + sc_biguint<63>(ap_const_lv63_6));
}

void batch_align2D::thread_cur_px_estimate_ptr6_4_fu_624_p1() {
    cur_px_estimate_ptr6_4_fu_624_p1 = esl_zext<64,63>(cur_px_estimate_ptr6_2_fu_619_p2.read());
}

void batch_align2D::thread_cur_px_estimate_ptr6_5_fu_639_p1() {
    cur_px_estimate_ptr6_5_fu_639_p1 = esl_zext<64,63>(cur_px_estimate_ptr6_3_fu_634_p2.read());
}

void batch_align2D::thread_cur_px_estimate_ptr6_fu_609_p1() {
    cur_px_estimate_ptr6_fu_609_p1 = esl_zext<64,63>(cur_px_estimate_ptr6_1_fu_604_p2.read());
}

void batch_align2D::thread_debug_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_debug_AWREADY.read()))) {
        debug_AWVALID = ap_const_logic_1;
    } else {
        debug_AWVALID = ap_const_logic_0;
    }
}

void batch_align2D::thread_debug_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, debug_BVALID.read())))) {
        debug_BREADY = ap_const_logic_1;
    } else {
        debug_BREADY = ap_const_logic_0;
    }
}

void batch_align2D::thread_debug_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1005.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_01001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_debug_WREADY.read()))) {
        debug_WVALID = ap_const_logic_1;
    } else {
        debug_WVALID = ap_const_logic_0;
    }
}

void batch_align2D::thread_debug_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        debug_blk_n_AW = m_axi_debug_AWREADY.read();
    } else {
        debug_blk_n_AW = ap_const_logic_1;
    }
}

void batch_align2D::thread_debug_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        debug_blk_n_B = m_axi_debug_BVALID.read();
    } else {
        debug_blk_n_B = ap_const_logic_1;
    }
}

void batch_align2D::thread_debug_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_1005.read()))) {
        debug_blk_n_W = m_axi_debug_WREADY.read();
    } else {
        debug_blk_n_W = ap_const_logic_1;
    }
}

void batch_align2D::thread_exitcond2_fu_510_p2() {
    exitcond2_fu_510_p2 = (!indvar3_reg_390.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(indvar3_reg_390.read() == ap_const_lv4_8);
}

void batch_align2D::thread_exitcond3_fu_493_p2() {
    exitcond3_fu_493_p2 = (!ap_phi_mux_indvar_phi_fu_382_p4.read().is_01() || !ap_const_lv19_73AA0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_phi_fu_382_p4.read() == ap_const_lv19_73AA0);
}

void batch_align2D::thread_exitcond4_fu_649_p2() {
    exitcond4_fu_649_p2 = (!indvar6_reg_401.read().is_01() || !ap_const_lv6_24.is_01())? sc_lv<1>(): sc_lv<1>(indvar6_reg_401.read() == ap_const_lv6_24);
}

void batch_align2D::thread_exitcond5_fu_739_p2() {
    exitcond5_fu_739_p2 = (!indvar8_reg_412.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(indvar8_reg_412.read() == ap_const_lv4_8);
}

void batch_align2D::thread_grp_fu_423_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_AWREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_block_state30_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(ap_block_state27_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_AWREADY.read(), ap_const_logic_1)))) {
        grp_fu_423_ce = ap_const_logic_1;
    } else {
        grp_fu_423_ce = ap_const_logic_0;
    }
}

void batch_align2D::thread_grp_fu_423_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_423_p0 = tmp_9_3_reg_994.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_fu_423_p0 = tmp_9_2_reg_983.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_423_p0 = tmp_9_1_reg_967.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_423_p0 = tmp_9_reg_957.read();
    } else {
        grp_fu_423_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void batch_align2D::thread_grp_fu_428_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(ap_block_state27_io.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_AWREADY.read(), ap_const_logic_1)))) {
        grp_fu_428_ce = ap_const_logic_1;
    } else {
        grp_fu_428_ce = ap_const_logic_0;
    }
}

void batch_align2D::thread_grp_fu_428_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_428_p0 = tmp_8_3_fu_599_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        grp_fu_428_p0 = tmp_8_2_fu_594_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_428_p0 = tmp_8_1_fu_589_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_428_p0 = tmp_8_fu_584_p1.read();
    } else {
        grp_fu_428_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void batch_align2D::thread_indvar4_fu_505_p1() {
    indvar4_fu_505_p1 = esl_zext<64,19>(indvar_reg_378_pp0_iter1_reg.read());
}

void batch_align2D::thread_indvar_next2_fu_516_p2() {
    indvar_next2_fu_516_p2 = (!indvar3_reg_390.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar3_reg_390.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void batch_align2D::thread_indvar_next3_fu_655_p2() {
    indvar_next3_fu_655_p2 = (!indvar6_reg_401.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(indvar6_reg_401.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void batch_align2D::thread_indvar_next4_fu_745_p2() {
    indvar_next4_fu_745_p2 = (!indvar8_reg_412.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar8_reg_412.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void batch_align2D::thread_indvar_next_fu_499_p2() {
    indvar_next_fu_499_p2 = (!ap_phi_mux_indvar_phi_fu_382_p4.read().is_01() || !ap_const_lv19_1.is_01())? sc_lv<19>(): (sc_biguint<19>(ap_phi_mux_indvar_phi_fu_382_p4.read()) + sc_biguint<19>(ap_const_lv19_1));
}

void batch_align2D::thread_inv_out7_fu_443_p4() {
    inv_out7_fu_443_p4 = inv_out.read().range(63, 2);
}

void batch_align2D::thread_m_axi_patches_ARADDR() {
    m_axi_patches_ARADDR = ap_const_lv64_0;
}

void batch_align2D::thread_m_axi_patches_ARBURST() {
    m_axi_patches_ARBURST = ap_const_lv2_0;
}

void batch_align2D::thread_m_axi_patches_ARCACHE() {
    m_axi_patches_ARCACHE = ap_const_lv4_0;
}

void batch_align2D::thread_m_axi_patches_ARID() {
    m_axi_patches_ARID = ap_const_lv1_0;
}

void batch_align2D::thread_m_axi_patches_ARLEN() {
    m_axi_patches_ARLEN = ap_const_lv8_0;
}

void batch_align2D::thread_m_axi_patches_ARLOCK() {
    m_axi_patches_ARLOCK = ap_const_lv2_0;
}

void batch_align2D::thread_m_axi_patches_ARPROT() {
    m_axi_patches_ARPROT = ap_const_lv3_0;
}

void batch_align2D::thread_m_axi_patches_ARQOS() {
    m_axi_patches_ARQOS = ap_const_lv4_0;
}

void batch_align2D::thread_m_axi_patches_ARREGION() {
    m_axi_patches_ARREGION = ap_const_lv4_0;
}

void batch_align2D::thread_m_axi_patches_ARSIZE() {
    m_axi_patches_ARSIZE = ap_const_lv3_0;
}

void batch_align2D::thread_m_axi_patches_ARUSER() {
    m_axi_patches_ARUSER = ap_const_lv1_0;
}

void batch_align2D::thread_m_axi_patches_ARVALID() {
    m_axi_patches_ARVALID = ap_const_logic_0;
}

void batch_align2D::thread_m_axi_patches_AWADDR() {
    m_axi_patches_AWADDR = ap_const_lv64_0;
}

void batch_align2D::thread_m_axi_patches_AWBURST() {
    m_axi_patches_AWBURST = ap_const_lv2_0;
}

void batch_align2D::thread_m_axi_patches_AWCACHE() {
    m_axi_patches_AWCACHE = ap_const_lv4_0;
}

void batch_align2D::thread_m_axi_patches_AWID() {
    m_axi_patches_AWID = ap_const_lv1_0;
}

void batch_align2D::thread_m_axi_patches_AWLEN() {
    m_axi_patches_AWLEN = ap_const_lv8_0;
}

void batch_align2D::thread_m_axi_patches_AWLOCK() {
    m_axi_patches_AWLOCK = ap_const_lv2_0;
}

void batch_align2D::thread_m_axi_patches_AWPROT() {
    m_axi_patches_AWPROT = ap_const_lv3_0;
}

void batch_align2D::thread_m_axi_patches_AWQOS() {
    m_axi_patches_AWQOS = ap_const_lv4_0;
}

void batch_align2D::thread_m_axi_patches_AWREGION() {
    m_axi_patches_AWREGION = ap_const_lv4_0;
}

void batch_align2D::thread_m_axi_patches_AWSIZE() {
    m_axi_patches_AWSIZE = ap_const_lv3_0;
}

void batch_align2D::thread_m_axi_patches_AWUSER() {
    m_axi_patches_AWUSER = ap_const_lv1_0;
}

void batch_align2D::thread_m_axi_patches_AWVALID() {
    m_axi_patches_AWVALID = ap_const_logic_0;
}

void batch_align2D::thread_m_axi_patches_BREADY() {
    m_axi_patches_BREADY = ap_const_logic_0;
}

void batch_align2D::thread_m_axi_patches_RREADY() {
    m_axi_patches_RREADY = ap_const_logic_0;
}

void batch_align2D::thread_m_axi_patches_WDATA() {
    m_axi_patches_WDATA = ap_const_lv32_0;
}

void batch_align2D::thread_m_axi_patches_WID() {
    m_axi_patches_WID = ap_const_lv1_0;
}

void batch_align2D::thread_m_axi_patches_WLAST() {
    m_axi_patches_WLAST = ap_const_logic_0;
}

void batch_align2D::thread_m_axi_patches_WSTRB() {
    m_axi_patches_WSTRB = ap_const_lv4_0;
}

void batch_align2D::thread_m_axi_patches_WUSER() {
    m_axi_patches_WUSER = ap_const_lv1_0;
}

void batch_align2D::thread_m_axi_patches_WVALID() {
    m_axi_patches_WVALID = ap_const_logic_0;
}

void batch_align2D::thread_pos_r_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_ARREADY.read()))) {
        pos_r_ARVALID = ap_const_logic_1;
    } else {
        pos_r_ARVALID = ap_const_logic_0;
    }
}

void batch_align2D::thread_pos_r_AWADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read()))) {
        pos_r_AWADDR = pos_addr_3_reg_999.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read()))) {
        pos_r_AWADDR = pos_addr_2_reg_988.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read()))) {
        pos_r_AWADDR = pos_addr_1_reg_977.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read()) && 
                 esl_seteq<1,1,1>(debug_BVALID.read(), ap_const_logic_1)))) {
        pos_r_AWADDR = pos_addr_reg_902.read();
    } else {
        pos_r_AWADDR =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void batch_align2D::thread_pos_r_AWLEN() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read()) && 
         esl_seteq<1,1,1>(debug_BVALID.read(), ap_const_logic_1))) {
        pos_r_AWLEN = ap_const_lv32_8;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())))) {
        pos_r_AWLEN = ap_const_lv32_1;
    } else {
        pos_r_AWLEN = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void batch_align2D::thread_pos_r_AWVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read()) && 
          esl_seteq<1,1,1>(debug_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_AWREADY.read())))) {
        pos_r_AWVALID = ap_const_logic_1;
    } else {
        pos_r_AWVALID = ap_const_logic_0;
    }
}

void batch_align2D::thread_pos_r_BREADY() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
          esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && 
          esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1)))) {
        pos_r_BREADY = ap_const_logic_1;
    } else {
        pos_r_BREADY = ap_const_logic_0;
    }
}

void batch_align2D::thread_pos_r_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        pos_r_RREADY = ap_const_logic_1;
    } else {
        pos_r_RREADY = ap_const_logic_0;
    }
}

void batch_align2D::thread_pos_r_WDATA() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1019.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0_01001.read(), ap_const_boolean_0))) {
        pos_r_WDATA = UnifiedRetVal_i_reg_1028.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read())))) {
        pos_r_WDATA = reg_435.read();
    } else {
        pos_r_WDATA = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void batch_align2D::thread_pos_r_WVALID() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1019.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pos_r_WREADY.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_01001.read(), ap_const_boolean_0)))) {
        pos_r_WVALID = ap_const_logic_1;
    } else {
        pos_r_WVALID = ap_const_logic_0;
    }
}

void batch_align2D::thread_pos_r_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        pos_r_blk_n_AR = m_axi_pos_r_ARREADY.read();
    } else {
        pos_r_blk_n_AR = ap_const_logic_1;
    }
}

void batch_align2D::thread_pos_r_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        pos_r_blk_n_AW = m_axi_pos_r_AWREADY.read();
    } else {
        pos_r_blk_n_AW = ap_const_logic_1;
    }
}

void batch_align2D::thread_pos_r_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        pos_r_blk_n_B = m_axi_pos_r_BVALID.read();
    } else {
        pos_r_blk_n_B = ap_const_logic_1;
    }
}

void batch_align2D::thread_pos_r_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        pos_r_blk_n_R = m_axi_pos_r_RVALID.read();
    } else {
        pos_r_blk_n_R = ap_const_logic_1;
    }
}

void batch_align2D::thread_pos_r_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_reg_1019.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        pos_r_blk_n_W = m_axi_pos_r_WREADY.read();
    } else {
        pos_r_blk_n_W = ap_const_logic_1;
    }
}

void batch_align2D::thread_pyr_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_pyr_ARREADY.read()))) {
        pyr_ARVALID = ap_const_logic_1;
    } else {
        pyr_ARVALID = ap_const_logic_0;
    }
}

void batch_align2D::thread_pyr_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond3_reg_916.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        pyr_RREADY = ap_const_logic_1;
    } else {
        pyr_RREADY = ap_const_logic_0;
    }
}

void batch_align2D::thread_pyr_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        pyr_blk_n_AR = m_axi_pyr_ARREADY.read();
    } else {
        pyr_blk_n_AR = ap_const_logic_1;
    }
}

void batch_align2D::thread_pyr_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond3_reg_916.read(), ap_const_lv1_0))) {
        pyr_blk_n_R = m_axi_pyr_RVALID.read();
    } else {
        pyr_blk_n_R = ap_const_logic_1;
    }
}

void batch_align2D::thread_pyr_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        pyr_data_address0 = ap_const_lv19_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        pyr_data_address0 = ap_const_lv19_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        pyr_data_address0 = ap_const_lv19_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        pyr_data_address0 = ap_const_lv19_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        pyr_data_address0 =  (sc_lv<19>) (indvar4_fu_505_p1.read());
    } else {
        pyr_data_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void batch_align2D::thread_pyr_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        pyr_data_ce0 = ap_const_logic_1;
    } else {
        pyr_data_ce0 = ap_const_logic_0;
    }
}

void batch_align2D::thread_pyr_data_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_916_pp0_iter1_reg.read()))) {
        pyr_data_we0 = ap_const_logic_1;
    } else {
        pyr_data_we0 = ap_const_logic_0;
    }
}

void batch_align2D::thread_sel_tmp10_i_fu_857_p2() {
    sel_tmp10_i_fu_857_p2 = (!tmp_4_fu_751_p1.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_751_p1.read() == ap_const_lv3_5);
}

void batch_align2D::thread_sel_tmp11_i_fu_863_p3() {
    sel_tmp11_i_fu_863_p3 = (!sel_tmp10_i_fu_857_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp10_i_fu_857_p2.read()[0].to_bool())? cur_px_estimate_2_1.read(): sel_tmp9_i_fu_849_p3.read());
}

void batch_align2D::thread_sel_tmp12_i_fu_871_p2() {
    sel_tmp12_i_fu_871_p2 = (!tmp_4_fu_751_p1.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_751_p1.read() == ap_const_lv3_6);
}

void batch_align2D::thread_sel_tmp1_i_fu_793_p3() {
    sel_tmp1_i_fu_793_p3 = (!sel_tmp_i_fu_787_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_i_fu_787_p2.read()[0].to_bool())? cur_px_estimate_0_0.read(): cur_px_estimate_3_1.read());
}

void batch_align2D::thread_sel_tmp2_i_fu_801_p2() {
    sel_tmp2_i_fu_801_p2 = (!tmp_4_fu_751_p1.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_751_p1.read() == ap_const_lv3_1);
}

void batch_align2D::thread_sel_tmp3_i_fu_807_p3() {
    sel_tmp3_i_fu_807_p3 = (!sel_tmp2_i_fu_801_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_i_fu_801_p2.read()[0].to_bool())? cur_px_estimate_0_1.read(): sel_tmp1_i_fu_793_p3.read());
}

void batch_align2D::thread_sel_tmp4_i_fu_815_p2() {
    sel_tmp4_i_fu_815_p2 = (!tmp_4_fu_751_p1.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_751_p1.read() == ap_const_lv3_2);
}

void batch_align2D::thread_sel_tmp5_i_fu_821_p3() {
    sel_tmp5_i_fu_821_p3 = (!sel_tmp4_i_fu_815_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_i_fu_815_p2.read()[0].to_bool())? cur_px_estimate_1_0.read(): sel_tmp3_i_fu_807_p3.read());
}

void batch_align2D::thread_sel_tmp6_i_fu_829_p2() {
    sel_tmp6_i_fu_829_p2 = (!tmp_4_fu_751_p1.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_751_p1.read() == ap_const_lv3_3);
}

void batch_align2D::thread_sel_tmp7_i_fu_835_p3() {
    sel_tmp7_i_fu_835_p3 = (!sel_tmp6_i_fu_829_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp6_i_fu_829_p2.read()[0].to_bool())? cur_px_estimate_1_1.read(): sel_tmp5_i_fu_821_p3.read());
}

void batch_align2D::thread_sel_tmp8_i_fu_843_p2() {
    sel_tmp8_i_fu_843_p2 = (!tmp_4_fu_751_p1.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_751_p1.read() == ap_const_lv3_4);
}

void batch_align2D::thread_sel_tmp9_i_fu_849_p3() {
    sel_tmp9_i_fu_849_p3 = (!sel_tmp8_i_fu_843_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_i_fu_843_p2.read()[0].to_bool())? cur_px_estimate_2_0.read(): sel_tmp7_i_fu_835_p3.read());
}

void batch_align2D::thread_sel_tmp_i_fu_787_p2() {
    sel_tmp_i_fu_787_p2 = (!tmp_4_fu_751_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_751_p1.read() == ap_const_lv3_0);
}

void batch_align2D::thread_tmp_2_cast_fu_477_p1() {
    tmp_2_cast_fu_477_p1 = esl_zext<63,62>(cur_px_estimate_ptr5_fu_463_p4.read());
}

void batch_align2D::thread_tmp_2_fu_473_p1() {
    tmp_2_fu_473_p1 = esl_zext<64,62>(cur_px_estimate_ptr5_fu_463_p4.read());
}

void batch_align2D::thread_tmp_3_fu_532_p1() {
    tmp_3_fu_532_p1 = indvar3_reg_390.read().range(1-1, 0);
}

void batch_align2D::thread_tmp_4_fu_751_p1() {
    tmp_4_fu_751_p1 = indvar8_reg_412.read().range(3-1, 0);
}

void batch_align2D::thread_tmp_8_1_fu_589_p1() {
    tmp_8_1_fu_589_p1 = esl_zext<32,8>(reg_431.read());
}

void batch_align2D::thread_tmp_8_2_fu_594_p1() {
    tmp_8_2_fu_594_p1 = esl_zext<32,8>(reg_431.read());
}

void batch_align2D::thread_tmp_8_3_fu_599_p1() {
    tmp_8_3_fu_599_p1 = esl_zext<32,8>(reg_431.read());
}

void batch_align2D::thread_tmp_8_fu_584_p1() {
    tmp_8_fu_584_p1 = esl_zext<32,8>(reg_431.read());
}

void batch_align2D::thread_tmp_fu_453_p1() {
    tmp_fu_453_p1 = esl_zext<64,62>(inv_out7_fu_443_p4.read());
}

void batch_align2D::thread_transfer_pyr_read_read_fu_228_p2() {
    transfer_pyr_read_read_fu_228_p2 = transfer_pyr.read();
}

void batch_align2D::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, transfer_pyr_read_read_fu_228_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(transfer_pyr_read_read_fu_228_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_pyr_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_493_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond3_fu_493_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 65536 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_fu_510_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond2_fu_510_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(ap_block_state27_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        case 16777216 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(ap_block_state30_io.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state32;
            } else {
                ap_NS_fsm = ap_ST_fsm_state31;
            }
            break;
        case 268435456 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_pos_r_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state34;
            } else {
                ap_NS_fsm = ap_ST_fsm_state33;
            }
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 4294967296 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 8589934592 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 34359738368 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond4_fu_649_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond4_fu_649_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state41;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 1099511627776 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_pos_r_AWREADY.read()) || esl_seteq<1,1,1>(ap_const_logic_0, debug_BVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state45;
            }
            break;
        case 2199023255552 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond5_fu_739_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond5_fu_739_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state48;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state52;
            break;
        case 70368744177664 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && esl_seteq<1,1,1>(pos_r_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state52;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<47>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void batch_align2D::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_pyr_AWVALID\" :  \"" << m_axi_pyr_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_AWREADY\" :  \"" << m_axi_pyr_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWADDR\" :  \"" << m_axi_pyr_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWID\" :  \"" << m_axi_pyr_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWLEN\" :  \"" << m_axi_pyr_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWSIZE\" :  \"" << m_axi_pyr_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWBURST\" :  \"" << m_axi_pyr_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWLOCK\" :  \"" << m_axi_pyr_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWCACHE\" :  \"" << m_axi_pyr_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWPROT\" :  \"" << m_axi_pyr_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWQOS\" :  \"" << m_axi_pyr_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWREGION\" :  \"" << m_axi_pyr_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_AWUSER\" :  \"" << m_axi_pyr_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_WVALID\" :  \"" << m_axi_pyr_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_WREADY\" :  \"" << m_axi_pyr_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_WDATA\" :  \"" << m_axi_pyr_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_WSTRB\" :  \"" << m_axi_pyr_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_WLAST\" :  \"" << m_axi_pyr_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_WID\" :  \"" << m_axi_pyr_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_WUSER\" :  \"" << m_axi_pyr_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARVALID\" :  \"" << m_axi_pyr_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_ARREADY\" :  \"" << m_axi_pyr_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARADDR\" :  \"" << m_axi_pyr_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARID\" :  \"" << m_axi_pyr_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARLEN\" :  \"" << m_axi_pyr_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARSIZE\" :  \"" << m_axi_pyr_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARBURST\" :  \"" << m_axi_pyr_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARLOCK\" :  \"" << m_axi_pyr_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARCACHE\" :  \"" << m_axi_pyr_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARPROT\" :  \"" << m_axi_pyr_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARQOS\" :  \"" << m_axi_pyr_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARREGION\" :  \"" << m_axi_pyr_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_ARUSER\" :  \"" << m_axi_pyr_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_RVALID\" :  \"" << m_axi_pyr_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_RREADY\" :  \"" << m_axi_pyr_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_RDATA\" :  \"" << m_axi_pyr_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_RLAST\" :  \"" << m_axi_pyr_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_RID\" :  \"" << m_axi_pyr_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_RUSER\" :  \"" << m_axi_pyr_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_RRESP\" :  \"" << m_axi_pyr_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_BVALID\" :  \"" << m_axi_pyr_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pyr_BREADY\" :  \"" << m_axi_pyr_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_BRESP\" :  \"" << m_axi_pyr_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_BID\" :  \"" << m_axi_pyr_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pyr_BUSER\" :  \"" << m_axi_pyr_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWVALID\" :  \"" << m_axi_patches_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_AWREADY\" :  \"" << m_axi_patches_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWADDR\" :  \"" << m_axi_patches_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWID\" :  \"" << m_axi_patches_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWLEN\" :  \"" << m_axi_patches_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWSIZE\" :  \"" << m_axi_patches_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWBURST\" :  \"" << m_axi_patches_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWLOCK\" :  \"" << m_axi_patches_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWCACHE\" :  \"" << m_axi_patches_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWPROT\" :  \"" << m_axi_patches_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWQOS\" :  \"" << m_axi_patches_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWREGION\" :  \"" << m_axi_patches_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_AWUSER\" :  \"" << m_axi_patches_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_WVALID\" :  \"" << m_axi_patches_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_WREADY\" :  \"" << m_axi_patches_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_WDATA\" :  \"" << m_axi_patches_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_WSTRB\" :  \"" << m_axi_patches_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_WLAST\" :  \"" << m_axi_patches_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_WID\" :  \"" << m_axi_patches_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_WUSER\" :  \"" << m_axi_patches_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARVALID\" :  \"" << m_axi_patches_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_ARREADY\" :  \"" << m_axi_patches_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARADDR\" :  \"" << m_axi_patches_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARID\" :  \"" << m_axi_patches_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARLEN\" :  \"" << m_axi_patches_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARSIZE\" :  \"" << m_axi_patches_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARBURST\" :  \"" << m_axi_patches_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARLOCK\" :  \"" << m_axi_patches_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARCACHE\" :  \"" << m_axi_patches_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARPROT\" :  \"" << m_axi_patches_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARQOS\" :  \"" << m_axi_patches_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARREGION\" :  \"" << m_axi_patches_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_ARUSER\" :  \"" << m_axi_patches_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_RVALID\" :  \"" << m_axi_patches_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_RREADY\" :  \"" << m_axi_patches_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_RDATA\" :  \"" << m_axi_patches_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_RLAST\" :  \"" << m_axi_patches_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_RID\" :  \"" << m_axi_patches_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_RUSER\" :  \"" << m_axi_patches_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_RRESP\" :  \"" << m_axi_patches_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_BVALID\" :  \"" << m_axi_patches_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_patches_BREADY\" :  \"" << m_axi_patches_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_BRESP\" :  \"" << m_axi_patches_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_BID\" :  \"" << m_axi_patches_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_patches_BUSER\" :  \"" << m_axi_patches_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWVALID\" :  \"" << m_axi_pos_r_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_AWREADY\" :  \"" << m_axi_pos_r_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWADDR\" :  \"" << m_axi_pos_r_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWID\" :  \"" << m_axi_pos_r_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWLEN\" :  \"" << m_axi_pos_r_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWSIZE\" :  \"" << m_axi_pos_r_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWBURST\" :  \"" << m_axi_pos_r_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWLOCK\" :  \"" << m_axi_pos_r_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWCACHE\" :  \"" << m_axi_pos_r_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWPROT\" :  \"" << m_axi_pos_r_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWQOS\" :  \"" << m_axi_pos_r_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWREGION\" :  \"" << m_axi_pos_r_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_AWUSER\" :  \"" << m_axi_pos_r_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_WVALID\" :  \"" << m_axi_pos_r_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_WREADY\" :  \"" << m_axi_pos_r_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_WDATA\" :  \"" << m_axi_pos_r_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_WSTRB\" :  \"" << m_axi_pos_r_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_WLAST\" :  \"" << m_axi_pos_r_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_WID\" :  \"" << m_axi_pos_r_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_WUSER\" :  \"" << m_axi_pos_r_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARVALID\" :  \"" << m_axi_pos_r_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_ARREADY\" :  \"" << m_axi_pos_r_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARADDR\" :  \"" << m_axi_pos_r_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARID\" :  \"" << m_axi_pos_r_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARLEN\" :  \"" << m_axi_pos_r_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARSIZE\" :  \"" << m_axi_pos_r_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARBURST\" :  \"" << m_axi_pos_r_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARLOCK\" :  \"" << m_axi_pos_r_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARCACHE\" :  \"" << m_axi_pos_r_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARPROT\" :  \"" << m_axi_pos_r_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARQOS\" :  \"" << m_axi_pos_r_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARREGION\" :  \"" << m_axi_pos_r_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_ARUSER\" :  \"" << m_axi_pos_r_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_RVALID\" :  \"" << m_axi_pos_r_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_RREADY\" :  \"" << m_axi_pos_r_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_RDATA\" :  \"" << m_axi_pos_r_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_RLAST\" :  \"" << m_axi_pos_r_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_RID\" :  \"" << m_axi_pos_r_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_RUSER\" :  \"" << m_axi_pos_r_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_RRESP\" :  \"" << m_axi_pos_r_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_BVALID\" :  \"" << m_axi_pos_r_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pos_r_BREADY\" :  \"" << m_axi_pos_r_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_BRESP\" :  \"" << m_axi_pos_r_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_BID\" :  \"" << m_axi_pos_r_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pos_r_BUSER\" :  \"" << m_axi_pos_r_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWVALID\" :  \"" << m_axi_debug_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_AWREADY\" :  \"" << m_axi_debug_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWADDR\" :  \"" << m_axi_debug_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWID\" :  \"" << m_axi_debug_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWLEN\" :  \"" << m_axi_debug_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWSIZE\" :  \"" << m_axi_debug_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWBURST\" :  \"" << m_axi_debug_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWLOCK\" :  \"" << m_axi_debug_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWCACHE\" :  \"" << m_axi_debug_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWPROT\" :  \"" << m_axi_debug_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWQOS\" :  \"" << m_axi_debug_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWREGION\" :  \"" << m_axi_debug_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_AWUSER\" :  \"" << m_axi_debug_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_WVALID\" :  \"" << m_axi_debug_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_WREADY\" :  \"" << m_axi_debug_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_WDATA\" :  \"" << m_axi_debug_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_WSTRB\" :  \"" << m_axi_debug_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_WLAST\" :  \"" << m_axi_debug_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_WID\" :  \"" << m_axi_debug_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_WUSER\" :  \"" << m_axi_debug_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARVALID\" :  \"" << m_axi_debug_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_ARREADY\" :  \"" << m_axi_debug_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARADDR\" :  \"" << m_axi_debug_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARID\" :  \"" << m_axi_debug_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARLEN\" :  \"" << m_axi_debug_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARSIZE\" :  \"" << m_axi_debug_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARBURST\" :  \"" << m_axi_debug_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARLOCK\" :  \"" << m_axi_debug_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARCACHE\" :  \"" << m_axi_debug_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARPROT\" :  \"" << m_axi_debug_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARQOS\" :  \"" << m_axi_debug_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARREGION\" :  \"" << m_axi_debug_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_ARUSER\" :  \"" << m_axi_debug_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_RVALID\" :  \"" << m_axi_debug_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_RREADY\" :  \"" << m_axi_debug_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_RDATA\" :  \"" << m_axi_debug_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_RLAST\" :  \"" << m_axi_debug_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_RID\" :  \"" << m_axi_debug_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_RUSER\" :  \"" << m_axi_debug_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_RRESP\" :  \"" << m_axi_debug_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_BVALID\" :  \"" << m_axi_debug_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_debug_BREADY\" :  \"" << m_axi_debug_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_BRESP\" :  \"" << m_axi_debug_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_BID\" :  \"" << m_axi_debug_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_debug_BUSER\" :  \"" << m_axi_debug_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_ctrl_AWVALID\" :  \"" << s_axi_ctrl_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_ctrl_AWREADY\" :  \"" << s_axi_ctrl_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_ctrl_AWADDR\" :  \"" << s_axi_ctrl_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_ctrl_WVALID\" :  \"" << s_axi_ctrl_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_ctrl_WREADY\" :  \"" << s_axi_ctrl_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_ctrl_WDATA\" :  \"" << s_axi_ctrl_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_ctrl_WSTRB\" :  \"" << s_axi_ctrl_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_ctrl_ARVALID\" :  \"" << s_axi_ctrl_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_ctrl_ARREADY\" :  \"" << s_axi_ctrl_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_ctrl_ARADDR\" :  \"" << s_axi_ctrl_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_ctrl_RVALID\" :  \"" << s_axi_ctrl_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_ctrl_RREADY\" :  \"" << s_axi_ctrl_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_ctrl_RDATA\" :  \"" << s_axi_ctrl_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_ctrl_RRESP\" :  \"" << s_axi_ctrl_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_ctrl_BVALID\" :  \"" << s_axi_ctrl_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_ctrl_BREADY\" :  \"" << s_axi_ctrl_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_ctrl_BRESP\" :  \"" << s_axi_ctrl_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_param_AWVALID\" :  \"" << s_axi_param_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_param_AWREADY\" :  \"" << s_axi_param_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_param_AWADDR\" :  \"" << s_axi_param_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_param_WVALID\" :  \"" << s_axi_param_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_param_WREADY\" :  \"" << s_axi_param_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_param_WDATA\" :  \"" << s_axi_param_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_param_WSTRB\" :  \"" << s_axi_param_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_param_ARVALID\" :  \"" << s_axi_param_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_param_ARREADY\" :  \"" << s_axi_param_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_param_ARADDR\" :  \"" << s_axi_param_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_param_RVALID\" :  \"" << s_axi_param_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_param_RREADY\" :  \"" << s_axi_param_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_param_RDATA\" :  \"" << s_axi_param_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_param_RRESP\" :  \"" << s_axi_param_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_param_BVALID\" :  \"" << s_axi_param_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_param_BREADY\" :  \"" << s_axi_param_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_param_BRESP\" :  \"" << s_axi_param_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

