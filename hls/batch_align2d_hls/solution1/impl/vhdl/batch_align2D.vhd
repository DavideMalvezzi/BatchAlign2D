-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity batch_align2D is
generic (
    C_M_AXI_PYR_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_PYR_ID_WIDTH : INTEGER := 1;
    C_M_AXI_PYR_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PYR_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_PYR_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PYR_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PYR_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PYR_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PATCHES_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_PATCHES_ID_WIDTH : INTEGER := 1;
    C_M_AXI_PATCHES_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PATCHES_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_PATCHES_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PATCHES_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PATCHES_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PATCHES_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_POS_R_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_POS_R_ID_WIDTH : INTEGER := 1;
    C_M_AXI_POS_R_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_POS_R_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_POS_R_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_POS_R_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_POS_R_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_POS_R_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DEBUG_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_DEBUG_ID_WIDTH : INTEGER := 1;
    C_M_AXI_DEBUG_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DEBUG_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_DEBUG_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DEBUG_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DEBUG_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_DEBUG_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_PARAM_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_PARAM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_PYR_USER_VALUE : INTEGER := 0;
    C_M_AXI_PYR_PROT_VALUE : INTEGER := 0;
    C_M_AXI_PYR_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_PATCHES_USER_VALUE : INTEGER := 0;
    C_M_AXI_PATCHES_PROT_VALUE : INTEGER := 0;
    C_M_AXI_PATCHES_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_POS_R_USER_VALUE : INTEGER := 0;
    C_M_AXI_POS_R_PROT_VALUE : INTEGER := 0;
    C_M_AXI_POS_R_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_DEBUG_USER_VALUE : INTEGER := 0;
    C_M_AXI_DEBUG_PROT_VALUE : INTEGER := 0;
    C_M_AXI_DEBUG_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_pyr_AWVALID : OUT STD_LOGIC;
    m_axi_pyr_AWREADY : IN STD_LOGIC;
    m_axi_pyr_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_ADDR_WIDTH-1 downto 0);
    m_axi_pyr_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_ID_WIDTH-1 downto 0);
    m_axi_pyr_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_pyr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pyr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pyr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pyr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pyr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pyr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pyr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pyr_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_AWUSER_WIDTH-1 downto 0);
    m_axi_pyr_WVALID : OUT STD_LOGIC;
    m_axi_pyr_WREADY : IN STD_LOGIC;
    m_axi_pyr_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_DATA_WIDTH-1 downto 0);
    m_axi_pyr_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_DATA_WIDTH/8-1 downto 0);
    m_axi_pyr_WLAST : OUT STD_LOGIC;
    m_axi_pyr_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_ID_WIDTH-1 downto 0);
    m_axi_pyr_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_WUSER_WIDTH-1 downto 0);
    m_axi_pyr_ARVALID : OUT STD_LOGIC;
    m_axi_pyr_ARREADY : IN STD_LOGIC;
    m_axi_pyr_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_ADDR_WIDTH-1 downto 0);
    m_axi_pyr_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_ID_WIDTH-1 downto 0);
    m_axi_pyr_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_pyr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pyr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pyr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pyr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pyr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pyr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pyr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pyr_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_PYR_ARUSER_WIDTH-1 downto 0);
    m_axi_pyr_RVALID : IN STD_LOGIC;
    m_axi_pyr_RREADY : OUT STD_LOGIC;
    m_axi_pyr_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_PYR_DATA_WIDTH-1 downto 0);
    m_axi_pyr_RLAST : IN STD_LOGIC;
    m_axi_pyr_RID : IN STD_LOGIC_VECTOR (C_M_AXI_PYR_ID_WIDTH-1 downto 0);
    m_axi_pyr_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_PYR_RUSER_WIDTH-1 downto 0);
    m_axi_pyr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pyr_BVALID : IN STD_LOGIC;
    m_axi_pyr_BREADY : OUT STD_LOGIC;
    m_axi_pyr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pyr_BID : IN STD_LOGIC_VECTOR (C_M_AXI_PYR_ID_WIDTH-1 downto 0);
    m_axi_pyr_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_PYR_BUSER_WIDTH-1 downto 0);
    m_axi_patches_AWVALID : OUT STD_LOGIC;
    m_axi_patches_AWREADY : IN STD_LOGIC;
    m_axi_patches_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_ADDR_WIDTH-1 downto 0);
    m_axi_patches_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_ID_WIDTH-1 downto 0);
    m_axi_patches_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_patches_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_patches_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_patches_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_patches_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_patches_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_patches_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_patches_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_patches_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_AWUSER_WIDTH-1 downto 0);
    m_axi_patches_WVALID : OUT STD_LOGIC;
    m_axi_patches_WREADY : IN STD_LOGIC;
    m_axi_patches_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_DATA_WIDTH-1 downto 0);
    m_axi_patches_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_DATA_WIDTH/8-1 downto 0);
    m_axi_patches_WLAST : OUT STD_LOGIC;
    m_axi_patches_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_ID_WIDTH-1 downto 0);
    m_axi_patches_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_WUSER_WIDTH-1 downto 0);
    m_axi_patches_ARVALID : OUT STD_LOGIC;
    m_axi_patches_ARREADY : IN STD_LOGIC;
    m_axi_patches_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_ADDR_WIDTH-1 downto 0);
    m_axi_patches_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_ID_WIDTH-1 downto 0);
    m_axi_patches_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_patches_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_patches_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_patches_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_patches_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_patches_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_patches_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_patches_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_patches_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_PATCHES_ARUSER_WIDTH-1 downto 0);
    m_axi_patches_RVALID : IN STD_LOGIC;
    m_axi_patches_RREADY : OUT STD_LOGIC;
    m_axi_patches_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_PATCHES_DATA_WIDTH-1 downto 0);
    m_axi_patches_RLAST : IN STD_LOGIC;
    m_axi_patches_RID : IN STD_LOGIC_VECTOR (C_M_AXI_PATCHES_ID_WIDTH-1 downto 0);
    m_axi_patches_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_PATCHES_RUSER_WIDTH-1 downto 0);
    m_axi_patches_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_patches_BVALID : IN STD_LOGIC;
    m_axi_patches_BREADY : OUT STD_LOGIC;
    m_axi_patches_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_patches_BID : IN STD_LOGIC_VECTOR (C_M_AXI_PATCHES_ID_WIDTH-1 downto 0);
    m_axi_patches_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_PATCHES_BUSER_WIDTH-1 downto 0);
    m_axi_pos_r_AWVALID : OUT STD_LOGIC;
    m_axi_pos_r_AWREADY : IN STD_LOGIC;
    m_axi_pos_r_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_ADDR_WIDTH-1 downto 0);
    m_axi_pos_r_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_ID_WIDTH-1 downto 0);
    m_axi_pos_r_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_pos_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pos_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pos_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pos_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pos_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pos_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pos_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pos_r_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_AWUSER_WIDTH-1 downto 0);
    m_axi_pos_r_WVALID : OUT STD_LOGIC;
    m_axi_pos_r_WREADY : IN STD_LOGIC;
    m_axi_pos_r_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_DATA_WIDTH-1 downto 0);
    m_axi_pos_r_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_DATA_WIDTH/8-1 downto 0);
    m_axi_pos_r_WLAST : OUT STD_LOGIC;
    m_axi_pos_r_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_ID_WIDTH-1 downto 0);
    m_axi_pos_r_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_WUSER_WIDTH-1 downto 0);
    m_axi_pos_r_ARVALID : OUT STD_LOGIC;
    m_axi_pos_r_ARREADY : IN STD_LOGIC;
    m_axi_pos_r_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_ADDR_WIDTH-1 downto 0);
    m_axi_pos_r_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_ID_WIDTH-1 downto 0);
    m_axi_pos_r_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_pos_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pos_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pos_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pos_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pos_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pos_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pos_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pos_r_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_POS_R_ARUSER_WIDTH-1 downto 0);
    m_axi_pos_r_RVALID : IN STD_LOGIC;
    m_axi_pos_r_RREADY : OUT STD_LOGIC;
    m_axi_pos_r_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_POS_R_DATA_WIDTH-1 downto 0);
    m_axi_pos_r_RLAST : IN STD_LOGIC;
    m_axi_pos_r_RID : IN STD_LOGIC_VECTOR (C_M_AXI_POS_R_ID_WIDTH-1 downto 0);
    m_axi_pos_r_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_POS_R_RUSER_WIDTH-1 downto 0);
    m_axi_pos_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pos_r_BVALID : IN STD_LOGIC;
    m_axi_pos_r_BREADY : OUT STD_LOGIC;
    m_axi_pos_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pos_r_BID : IN STD_LOGIC_VECTOR (C_M_AXI_POS_R_ID_WIDTH-1 downto 0);
    m_axi_pos_r_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_POS_R_BUSER_WIDTH-1 downto 0);
    m_axi_debug_AWVALID : OUT STD_LOGIC;
    m_axi_debug_AWREADY : IN STD_LOGIC;
    m_axi_debug_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_ADDR_WIDTH-1 downto 0);
    m_axi_debug_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_ID_WIDTH-1 downto 0);
    m_axi_debug_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_debug_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_debug_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_debug_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_debug_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_debug_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_debug_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_debug_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_debug_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_AWUSER_WIDTH-1 downto 0);
    m_axi_debug_WVALID : OUT STD_LOGIC;
    m_axi_debug_WREADY : IN STD_LOGIC;
    m_axi_debug_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_DATA_WIDTH-1 downto 0);
    m_axi_debug_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_DATA_WIDTH/8-1 downto 0);
    m_axi_debug_WLAST : OUT STD_LOGIC;
    m_axi_debug_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_ID_WIDTH-1 downto 0);
    m_axi_debug_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_WUSER_WIDTH-1 downto 0);
    m_axi_debug_ARVALID : OUT STD_LOGIC;
    m_axi_debug_ARREADY : IN STD_LOGIC;
    m_axi_debug_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_ADDR_WIDTH-1 downto 0);
    m_axi_debug_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_ID_WIDTH-1 downto 0);
    m_axi_debug_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_debug_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_debug_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_debug_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_debug_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_debug_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_debug_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_debug_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_debug_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_DEBUG_ARUSER_WIDTH-1 downto 0);
    m_axi_debug_RVALID : IN STD_LOGIC;
    m_axi_debug_RREADY : OUT STD_LOGIC;
    m_axi_debug_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DEBUG_DATA_WIDTH-1 downto 0);
    m_axi_debug_RLAST : IN STD_LOGIC;
    m_axi_debug_RID : IN STD_LOGIC_VECTOR (C_M_AXI_DEBUG_ID_WIDTH-1 downto 0);
    m_axi_debug_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_DEBUG_RUSER_WIDTH-1 downto 0);
    m_axi_debug_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_debug_BVALID : IN STD_LOGIC;
    m_axi_debug_BREADY : OUT STD_LOGIC;
    m_axi_debug_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_debug_BID : IN STD_LOGIC_VECTOR (C_M_AXI_DEBUG_ID_WIDTH-1 downto 0);
    m_axi_debug_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_DEBUG_BUSER_WIDTH-1 downto 0);
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_param_AWVALID : IN STD_LOGIC;
    s_axi_param_AWREADY : OUT STD_LOGIC;
    s_axi_param_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_PARAM_ADDR_WIDTH-1 downto 0);
    s_axi_param_WVALID : IN STD_LOGIC;
    s_axi_param_WREADY : OUT STD_LOGIC;
    s_axi_param_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_PARAM_DATA_WIDTH-1 downto 0);
    s_axi_param_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_PARAM_DATA_WIDTH/8-1 downto 0);
    s_axi_param_ARVALID : IN STD_LOGIC;
    s_axi_param_ARREADY : OUT STD_LOGIC;
    s_axi_param_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_PARAM_ADDR_WIDTH-1 downto 0);
    s_axi_param_RVALID : OUT STD_LOGIC;
    s_axi_param_RREADY : IN STD_LOGIC;
    s_axi_param_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_PARAM_DATA_WIDTH-1 downto 0);
    s_axi_param_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_param_BVALID : OUT STD_LOGIC;
    s_axi_param_BREADY : IN STD_LOGIC;
    s_axi_param_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of batch_align2D is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "batch_align2D,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.228900,HLS_SYN_LAT=238598,HLS_SYN_TPT=none,HLS_SYN_MEM=240,HLS_SYN_DSP=26,HLS_SYN_FF=16565,HLS_SYN_LUT=18144,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp3_stage1 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage2 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage3 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage1 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage2 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage3 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage1 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage2 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage3 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state155 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state156 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state157 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state158 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state159 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state160 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state161 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state162 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state163 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state164 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state165 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state166 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state167 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state168 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state169 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state170 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state171 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state172 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state173 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state174 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state175 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state176 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state177 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state178 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state179 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state180 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state181 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state182 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state183 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state184 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state185 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state186 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state187 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state188 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state189 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state190 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state191 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state192 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state193 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state194 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state195 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state196 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state197 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state198 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp6_stage0 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp6_stage1 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp6_stage2 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp6_stage3 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state211 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state212 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state213 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state214 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state215 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state216 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state217 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state218 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state219 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state220 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state221 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state222 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state223 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state224 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state225 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state226 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state227 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state228 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state229 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state230 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state231 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state232 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state233 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state234 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state235 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state236 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state237 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state238 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state239 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state240 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state241 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state242 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state243 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state244 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state245 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state246 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state247 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state248 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state249 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state250 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state251 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state252 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state253 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state254 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp7_stage0 : STD_LOGIC_VECTOR (229 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state257 : STD_LOGIC_VECTOR (229 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state258 : STD_LOGIC_VECTOR (229 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state259 : STD_LOGIC_VECTOR (229 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state260 : STD_LOGIC_VECTOR (229 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state261 : STD_LOGIC_VECTOR (229 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp8_stage0 : STD_LOGIC_VECTOR (229 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state264 : STD_LOGIC_VECTOR (229 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state265 : STD_LOGIC_VECTOR (229 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state266 : STD_LOGIC_VECTOR (229 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state267 : STD_LOGIC_VECTOR (229 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state268 : STD_LOGIC_VECTOR (229 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_DB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011011";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100101";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv32_A3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100011";
    constant ap_const_lv32_A4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100100";
    constant ap_const_lv32_A9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101001";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv32_D4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010100";
    constant ap_const_lv32_D9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011001";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_DA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_AD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101101";
    constant ap_const_lv32_CF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_7A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111010";
    constant ap_const_lv32_AA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_8D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001101";
    constant ap_const_lv32_AB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101011";
    constant ap_const_lv32_BD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_AC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101100";
    constant ap_const_lv32_B1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110001";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv32_8B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001011";
    constant ap_const_lv32_93 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010011";
    constant ap_const_lv32_97 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010111";
    constant ap_const_lv32_B7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110111";
    constant ap_const_lv32_BB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111011";
    constant ap_const_lv32_C3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000011";
    constant ap_const_lv32_C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000111";
    constant ap_const_lv32_D3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_B3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110011";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_91 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010001";
    constant ap_const_lv32_C1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_85 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000101";
    constant ap_const_lv32_B5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_89 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001001";
    constant ap_const_lv32_B9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_9C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011100";
    constant ap_const_lv32_CC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_9D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011101";
    constant ap_const_lv32_A2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100010";
    constant ap_const_lv32_AE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101110";
    constant ap_const_lv32_C8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001000";
    constant ap_const_lv32_CD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_11 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_const_lv7_12 : STD_LOGIC_VECTOR (6 downto 0) := "0010010";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv7_15 : STD_LOGIC_VECTOR (6 downto 0) := "0010101";
    constant ap_const_lv7_16 : STD_LOGIC_VECTOR (6 downto 0) := "0010110";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_18 : STD_LOGIC_VECTOR (6 downto 0) := "0011000";
    constant ap_const_lv7_19 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";
    constant ap_const_lv7_1A : STD_LOGIC_VECTOR (6 downto 0) := "0011010";
    constant ap_const_lv7_1B : STD_LOGIC_VECTOR (6 downto 0) := "0011011";
    constant ap_const_lv7_1C : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_const_lv7_1D : STD_LOGIC_VECTOR (6 downto 0) := "0011101";
    constant ap_const_lv7_1E : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_21 : STD_LOGIC_VECTOR (6 downto 0) := "0100001";
    constant ap_const_lv7_22 : STD_LOGIC_VECTOR (6 downto 0) := "0100010";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_24 : STD_LOGIC_VECTOR (6 downto 0) := "0100100";
    constant ap_const_lv7_25 : STD_LOGIC_VECTOR (6 downto 0) := "0100101";
    constant ap_const_lv7_26 : STD_LOGIC_VECTOR (6 downto 0) := "0100110";
    constant ap_const_lv7_27 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_const_lv7_28 : STD_LOGIC_VECTOR (6 downto 0) := "0101000";
    constant ap_const_lv7_29 : STD_LOGIC_VECTOR (6 downto 0) := "0101001";
    constant ap_const_lv7_2A : STD_LOGIC_VECTOR (6 downto 0) := "0101010";
    constant ap_const_lv7_2B : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_const_lv7_2C : STD_LOGIC_VECTOR (6 downto 0) := "0101100";
    constant ap_const_lv7_2D : STD_LOGIC_VECTOR (6 downto 0) := "0101101";
    constant ap_const_lv7_2E : STD_LOGIC_VECTOR (6 downto 0) := "0101110";
    constant ap_const_lv7_2F : STD_LOGIC_VECTOR (6 downto 0) := "0101111";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_31 : STD_LOGIC_VECTOR (6 downto 0) := "0110001";
    constant ap_const_lv7_32 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv7_35 : STD_LOGIC_VECTOR (6 downto 0) := "0110101";
    constant ap_const_lv7_36 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv7_39 : STD_LOGIC_VECTOR (6 downto 0) := "0111001";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv7_3B : STD_LOGIC_VECTOR (6 downto 0) := "0111011";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_3D : STD_LOGIC_VECTOR (6 downto 0) := "0111101";
    constant ap_const_lv7_3E : STD_LOGIC_VECTOR (6 downto 0) := "0111110";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv7_42 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_const_lv7_43 : STD_LOGIC_VECTOR (6 downto 0) := "1000011";
    constant ap_const_lv7_44 : STD_LOGIC_VECTOR (6 downto 0) := "1000100";
    constant ap_const_lv7_45 : STD_LOGIC_VECTOR (6 downto 0) := "1000101";
    constant ap_const_lv7_46 : STD_LOGIC_VECTOR (6 downto 0) := "1000110";
    constant ap_const_lv7_47 : STD_LOGIC_VECTOR (6 downto 0) := "1000111";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv7_49 : STD_LOGIC_VECTOR (6 downto 0) := "1001001";
    constant ap_const_lv7_4A : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_const_lv7_4B : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_const_lv7_4C : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_const_lv7_4D : STD_LOGIC_VECTOR (6 downto 0) := "1001101";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv7_4F : STD_LOGIC_VECTOR (6 downto 0) := "1001111";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_51 : STD_LOGIC_VECTOR (6 downto 0) := "1010001";
    constant ap_const_lv7_52 : STD_LOGIC_VECTOR (6 downto 0) := "1010010";
    constant ap_const_lv7_53 : STD_LOGIC_VECTOR (6 downto 0) := "1010011";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv7_55 : STD_LOGIC_VECTOR (6 downto 0) := "1010101";
    constant ap_const_lv7_56 : STD_LOGIC_VECTOR (6 downto 0) := "1010110";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv7_58 : STD_LOGIC_VECTOR (6 downto 0) := "1011000";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_73AA0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000001110011101010100000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_190 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110010000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv7_59 : STD_LOGIC_VECTOR (6 downto 0) := "1011001";
    constant ap_const_lv7_62 : STD_LOGIC_VECTOR (6 downto 0) := "1100010";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv7_5B : STD_LOGIC_VECTOR (6 downto 0) := "1011011";
    constant ap_const_lv7_5C : STD_LOGIC_VECTOR (6 downto 0) := "1011100";
    constant ap_const_lv7_5D : STD_LOGIC_VECTOR (6 downto 0) := "1011101";
    constant ap_const_lv7_5E : STD_LOGIC_VECTOR (6 downto 0) := "1011110";
    constant ap_const_lv7_5F : STD_LOGIC_VECTOR (6 downto 0) := "1011111";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_61 : STD_LOGIC_VECTOR (6 downto 0) := "1100001";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv7_7E : STD_LOGIC_VECTOR (6 downto 0) := "1111110";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv7_7C : STD_LOGIC_VECTOR (6 downto 0) := "1111100";
    constant ap_const_lv7_7B : STD_LOGIC_VECTOR (6 downto 0) := "1111011";
    constant ap_const_lv7_7A : STD_LOGIC_VECTOR (6 downto 0) := "1111010";
    constant ap_const_lv7_79 : STD_LOGIC_VECTOR (6 downto 0) := "1111001";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_77 : STD_LOGIC_VECTOR (6 downto 0) := "1110111";
    constant ap_const_lv7_76 : STD_LOGIC_VECTOR (6 downto 0) := "1110110";
    constant ap_const_lv7_75 : STD_LOGIC_VECTOR (6 downto 0) := "1110101";
    constant ap_const_lv7_74 : STD_LOGIC_VECTOR (6 downto 0) := "1110100";
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv7_72 : STD_LOGIC_VECTOR (6 downto 0) := "1110010";
    constant ap_const_lv7_71 : STD_LOGIC_VECTOR (6 downto 0) := "1110001";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv7_6E : STD_LOGIC_VECTOR (6 downto 0) := "1101110";
    constant ap_const_lv7_6D : STD_LOGIC_VECTOR (6 downto 0) := "1101101";
    constant ap_const_lv7_6C : STD_LOGIC_VECTOR (6 downto 0) := "1101100";
    constant ap_const_lv7_6B : STD_LOGIC_VECTOR (6 downto 0) := "1101011";
    constant ap_const_lv7_6A : STD_LOGIC_VECTOR (6 downto 0) := "1101010";
    constant ap_const_lv7_69 : STD_LOGIC_VECTOR (6 downto 0) := "1101001";
    constant ap_const_lv7_68 : STD_LOGIC_VECTOR (6 downto 0) := "1101000";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_66 : STD_LOGIC_VECTOR (6 downto 0) := "1100110";
    constant ap_const_lv7_65 : STD_LOGIC_VECTOR (6 downto 0) := "1100101";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv32_9B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011011";
    constant ap_const_lv19_2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_const_lv32_CB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011001011";
    constant ap_const_lv19_3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000011";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011010";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv32_88 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001000";
    constant ap_const_lv32_8A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001010";
    constant ap_const_lv32_8C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001100";
    constant ap_const_lv32_8E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001110";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_B4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110100";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_BA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111010";
    constant ap_const_lv32_BC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111100";
    constant ap_const_lv32_BE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111110";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_C4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000100";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_3E800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111110100000000000000000000000";
    constant ap_const_lv32_42800000 : STD_LOGIC_VECTOR (31 downto 0) := "01000010100000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_7E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111110";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000010";
    constant ap_const_lv32_86 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000110";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_B2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110010";
    constant ap_const_lv32_B6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110110";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv19_73AA0 : STD_LOGIC_VECTOR (18 downto 0) := "1110011101010100000";
    constant ap_const_lv9_190 : STD_LOGIC_VECTOR (8 downto 0) := "110010000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv19_290 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001010010000";
    constant ap_const_lv9_64 : STD_LOGIC_VECTOR (8 downto 0) := "001100100";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv63_2 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv63_4 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv63_6 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100110";
    constant ap_const_lv32_71 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110001";
    constant ap_const_lv32_92 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010010";
    constant ap_const_lv32_95 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010101";
    constant ap_const_lv32_96 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010110";
    constant ap_const_lv32_A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100001";
    constant ap_const_lv32_C2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000010";
    constant ap_const_lv32_C5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000101";
    constant ap_const_lv32_C6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000110";
    constant ap_const_lv32_D1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010001";
    constant ap_const_lv32_D2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (229 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal pyr_data_ptr : STD_LOGIC_VECTOR (63 downto 0);
    signal img_w : STD_LOGIC_VECTOR (15 downto 0);
    signal img_h : STD_LOGIC_VECTOR (15 downto 0);
    signal ref_patch_with_border_ptr : STD_LOGIC_VECTOR (63 downto 0);
    signal cur_px_estimate_ptr : STD_LOGIC_VECTOR (63 downto 0);
    signal levels : STD_LOGIC_VECTOR (127 downto 0);
    signal converged_ap_vld : STD_LOGIC;
    signal n_iter : STD_LOGIC_VECTOR (31 downto 0);
    signal transfer_pyr : STD_LOGIC_VECTOR (0 downto 0);
    signal inv_out : STD_LOGIC_VECTOR (63 downto 0);
    signal pyr_data_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal pyr_data_ce0 : STD_LOGIC;
    signal pyr_data_we0 : STD_LOGIC;
    signal pyr_data_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_487 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_485 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_497 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_413 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_414 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_415 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_416 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_417 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_418 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_419 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_420 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_421 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_423 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_424 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_425 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_426 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_427 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_428 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_429 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_430 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_431 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_432 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_434 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_435 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_436 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_437 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_438 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_439 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_440 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_441 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_442 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_443 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_445 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_446 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_447 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_448 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_449 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_450 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_451 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_452 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_453 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_454 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_456 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_457 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_458 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_459 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_460 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_461 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_462 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_463 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_464 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_465 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_467 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_468 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_469 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_470 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_471 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_472 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_473 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_474 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_475 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_476 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_478 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_479 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_480 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_481 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_482 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_483 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_484 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_486 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_489 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_490 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_491 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_492 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_493 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_494 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_495 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_496 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_401 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_402 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_403 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_404 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_405 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_406 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_407 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_408 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_409 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_410 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_412 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_587 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_585 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_597 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_513 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_514 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_515 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_516 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_517 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_518 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_519 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_520 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_521 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_523 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_524 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_525 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_526 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_527 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_528 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_529 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_530 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_531 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_532 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_534 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_535 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_536 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_537 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_538 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_539 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_540 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_541 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_542 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_543 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_545 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_546 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_547 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_548 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_549 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_550 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_551 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_552 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_553 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_554 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_556 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_557 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_558 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_559 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_560 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_561 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_562 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_563 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_564 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_565 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_567 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_568 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_569 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_570 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_571 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_572 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_573 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_574 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_575 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_576 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_578 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_579 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_580 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_581 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_582 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_583 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_584 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_586 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_589 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_590 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_591 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_592 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_593 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_594 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_595 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_596 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_501 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_502 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_503 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_504 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_505 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_506 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_507 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_508 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_509 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_510 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_512 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_399 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_400 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_411 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_422 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_433 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_444 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_455 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_466 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_477 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_488 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_498 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_687 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_685 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_697 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_613 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_614 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_615 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_616 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_617 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_618 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_619 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_620 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_621 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_623 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_624 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_625 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_626 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_627 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_628 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_629 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_630 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_631 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_632 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_634 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_635 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_636 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_637 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_638 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_639 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_640 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_641 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_642 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_643 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_645 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_646 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_647 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_648 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_649 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_650 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_651 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_652 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_653 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_654 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_656 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_657 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_658 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_659 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_660 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_661 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_662 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_663 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_664 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_665 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_667 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_668 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_669 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_670 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_671 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_672 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_673 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_674 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_675 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_676 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_678 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_679 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_680 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_681 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_682 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_683 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_684 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_686 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_689 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_690 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_691 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_692 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_693 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_694 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_695 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_696 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_601 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_602 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_603 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_604 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_605 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_606 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_607 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_608 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_609 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_610 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_612 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_499 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_500 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_511 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_522 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_533 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_544 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_555 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_566 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_577 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_588 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_598 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_11 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_13 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_85 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_84 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_83 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_82 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_81 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_80 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_79 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_78 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_77 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_75 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_74 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_73 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_72 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_71 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_70 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_69 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_68 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_67 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_66 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_64 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_63 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_62 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_61 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_60 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_59 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_58 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_57 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_56 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_55 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_53 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_52 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_51 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_50 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_49 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_48 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_47 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_46 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_45 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_44 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_42 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_41 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_40 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_39 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_38 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_37 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_36 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_35 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_34 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_33 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_31 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_30 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_29 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_28 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_27 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_26 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_25 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_24 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_23 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_22 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_20 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_19 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_18 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_17 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_16 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_15 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_14 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_12 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_9 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_8 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_97 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_96 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_95 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_94 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_93 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_92 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_91 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_90 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_89 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_88 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_86 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_599 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_600 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_611 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_622 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_633 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_644 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_655 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_666 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_677 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_688 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_698 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_99 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_98 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_87 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_76 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_65 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_54 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_43 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_32 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_21 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde_10 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ref_patch_with_borde : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal cur_px_estimate_3_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_px_estimate_0_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_px_estimate_0_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_px_estimate_1_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_px_estimate_1_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_px_estimate_2_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_px_estimate_2_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cur_px_estimate_3_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pyr_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal pyr_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond3_reg_9916 : STD_LOGIC_VECTOR (0 downto 0);
    signal patches_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal patches_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond1_reg_9930 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos_r_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal pos_r_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal pos_r_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal pos_r_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal pos_r_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal ap_CS_fsm_state257 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state257 : signal is "none";
    signal ap_CS_fsm_pp8_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp8_stage0 : signal is "none";
    signal ap_enable_reg_pp8_iter1 : STD_LOGIC := '0';
    signal ap_block_pp8_stage0 : BOOLEAN;
    signal exitcond5_reg_13094 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state268 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state268 : signal is "none";
    signal ap_CS_fsm_state136 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state136 : signal is "none";
    signal ap_CS_fsm_state137 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state137 : signal is "none";
    signal ap_CS_fsm_state142 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state142 : signal is "none";
    signal ap_CS_fsm_state192 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state192 : signal is "none";
    signal ap_CS_fsm_state193 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state193 : signal is "none";
    signal ap_CS_fsm_state198 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state198 : signal is "none";
    signal ap_CS_fsm_state212 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state212 : signal is "none";
    signal ap_CS_fsm_state249 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state249 : signal is "none";
    signal ap_CS_fsm_state254 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state254 : signal is "none";
    signal debug_blk_n_AW : STD_LOGIC;
    signal debug_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state261 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state261 : signal is "none";
    signal debug_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp7_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp7_stage0 : signal is "none";
    signal ap_enable_reg_pp7_iter1 : STD_LOGIC := '0';
    signal ap_block_pp7_stage0 : BOOLEAN;
    signal exitcond4_reg_13080 : STD_LOGIC_VECTOR (0 downto 0);
    signal pyr_AWREADY : STD_LOGIC;
    signal pyr_WREADY : STD_LOGIC;
    signal pyr_ARVALID : STD_LOGIC;
    signal pyr_ARREADY : STD_LOGIC;
    signal pyr_RVALID : STD_LOGIC;
    signal pyr_RREADY : STD_LOGIC;
    signal pyr_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal pyr_RLAST : STD_LOGIC;
    signal pyr_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal pyr_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pyr_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal pyr_BVALID : STD_LOGIC;
    signal pyr_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal pyr_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal pyr_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal patches_AWREADY : STD_LOGIC;
    signal patches_WREADY : STD_LOGIC;
    signal patches_ARVALID : STD_LOGIC;
    signal patches_ARREADY : STD_LOGIC;
    signal patches_RVALID : STD_LOGIC;
    signal patches_RREADY : STD_LOGIC;
    signal patches_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal patches_RLAST : STD_LOGIC;
    signal patches_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal patches_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal patches_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal patches_BVALID : STD_LOGIC;
    signal patches_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal patches_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal patches_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pos_r_AWVALID : STD_LOGIC;
    signal pos_r_AWREADY : STD_LOGIC;
    signal pos_r_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal pos_r_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_r_WVALID : STD_LOGIC;
    signal pos_r_WREADY : STD_LOGIC;
    signal pos_r_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_r_ARVALID : STD_LOGIC;
    signal pos_r_ARREADY : STD_LOGIC;
    signal pos_r_RVALID : STD_LOGIC;
    signal pos_r_RREADY : STD_LOGIC;
    signal pos_r_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_r_RLAST : STD_LOGIC;
    signal pos_r_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal pos_r_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal pos_r_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal pos_r_BVALID : STD_LOGIC;
    signal pos_r_BREADY : STD_LOGIC;
    signal pos_r_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal pos_r_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal pos_r_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal debug_AWVALID : STD_LOGIC;
    signal debug_AWREADY : STD_LOGIC;
    signal debug_WVALID : STD_LOGIC;
    signal debug_WREADY : STD_LOGIC;
    signal debug_ARREADY : STD_LOGIC;
    signal debug_RVALID : STD_LOGIC;
    signal debug_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal debug_RLAST : STD_LOGIC;
    signal debug_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal debug_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal debug_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal debug_BVALID : STD_LOGIC;
    signal debug_BREADY : STD_LOGIC;
    signal debug_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal debug_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal debug_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_reg_1452 : STD_LOGIC_VECTOR (18 downto 0);
    signal indvar_reg_1452_pp0_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_block_state9_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar1_reg_1464 : STD_LOGIC_VECTOR (8 downto 0);
    signal phi_mul_reg_1475 : STD_LOGIC_VECTOR (18 downto 0);
    signal phi_urem_reg_1486 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvar3_reg_1497 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_reg_1508 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1520 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1532 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1544 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1556 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_reg_1568 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_16_reg_1740 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_1752 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_reg_1764 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_1_reg_1776 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_1_reg_1788 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_1_reg_1800 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_20_reg_1972 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_1984 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_1996 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_2_reg_2008 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_2_reg_2020 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_2_reg_2032 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_24_reg_2204 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_3_reg_2216 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_reg_2228 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_3_reg_2240 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_3_reg_2252 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_3_reg_2264 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar6_reg_2436 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar8_reg_2447 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_2569_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3996 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage3 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal ap_block_state34_pp3_stage3_iter0 : BOOLEAN;
    signal ap_block_state38_pp3_stage3_iter1 : BOOLEAN;
    signal ap_block_state42_pp3_stage3_iter2 : BOOLEAN;
    signal ap_block_pp3_stage3_11001 : BOOLEAN;
    signal exitcond_i_reg_10664 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_pp4_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage3 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal ap_block_state90_pp4_stage3_iter0 : BOOLEAN;
    signal ap_block_state94_pp4_stage3_iter1 : BOOLEAN;
    signal ap_block_state98_pp4_stage3_iter2 : BOOLEAN;
    signal ap_block_pp4_stage3_11001 : BOOLEAN;
    signal exitcond_i_1_reg_11436 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state132 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state132 : signal is "none";
    signal ap_CS_fsm_pp5_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage3 : signal is "none";
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal ap_block_state146_pp5_stage3_iter0 : BOOLEAN;
    signal ap_block_state150_pp5_stage3_iter1 : BOOLEAN;
    signal ap_block_state154_pp5_stage3_iter2 : BOOLEAN;
    signal ap_block_pp5_stage3_11001 : BOOLEAN;
    signal exitcond_i_2_reg_12214 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state188 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state188 : signal is "none";
    signal ap_CS_fsm_pp6_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage3 : signal is "none";
    signal ap_enable_reg_pp6_iter0 : STD_LOGIC := '0';
    signal ap_block_state202_pp6_stage3_iter0 : BOOLEAN;
    signal ap_block_state206_pp6_stage3_iter1 : BOOLEAN;
    signal ap_block_state210_pp6_stage3_iter2 : BOOLEAN;
    signal ap_block_pp6_stage3_11001 : BOOLEAN;
    signal exitcond_i_3_reg_12992 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state244 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state244 : signal is "none";
    signal reg_4004 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_state31_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state35_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state39_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_state87_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state91_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state95_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_block_state143_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state147_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_state151_pp5_stage0_iter2 : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp6_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage0 : signal is "none";
    signal ap_enable_reg_pp6_iter1 : STD_LOGIC := '0';
    signal ap_block_state199_pp6_stage0_iter0 : BOOLEAN;
    signal ap_block_state203_pp6_stage0_iter1 : BOOLEAN;
    signal ap_block_state207_pp6_stage0_iter2 : BOOLEAN;
    signal ap_block_pp6_stage0_11001 : BOOLEAN;
    signal grp_fu_2494_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4011 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage1 : signal is "none";
    signal ap_block_state32_pp3_stage1_iter0 : BOOLEAN;
    signal ap_block_state36_pp3_stage1_iter1 : BOOLEAN;
    signal ap_block_state40_pp3_stage1_iter2 : BOOLEAN;
    signal ap_block_pp3_stage1_11001 : BOOLEAN;
    signal exitcond_i_reg_10664_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_pp4_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage1 : signal is "none";
    signal ap_block_state88_pp4_stage1_iter0 : BOOLEAN;
    signal ap_block_state92_pp4_stage1_iter1 : BOOLEAN;
    signal ap_block_state96_pp4_stage1_iter2 : BOOLEAN;
    signal ap_block_pp4_stage1_11001 : BOOLEAN;
    signal exitcond_i_1_reg_11436_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal ap_CS_fsm_state114 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state114 : signal is "none";
    signal ap_CS_fsm_pp5_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage1 : signal is "none";
    signal ap_block_state144_pp5_stage1_iter0 : BOOLEAN;
    signal ap_block_state148_pp5_stage1_iter1 : BOOLEAN;
    signal ap_block_state152_pp5_stage1_iter2 : BOOLEAN;
    signal ap_block_pp5_stage1_11001 : BOOLEAN;
    signal exitcond_i_2_reg_12214_pp5_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state156 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state156 : signal is "none";
    signal ap_CS_fsm_state170 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state170 : signal is "none";
    signal ap_CS_fsm_pp6_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage1 : signal is "none";
    signal ap_block_state200_pp6_stage1_iter0 : BOOLEAN;
    signal ap_block_state204_pp6_stage1_iter1 : BOOLEAN;
    signal ap_block_state208_pp6_stage1_iter2 : BOOLEAN;
    signal ap_block_pp6_stage1_11001 : BOOLEAN;
    signal exitcond_i_3_reg_12992_pp6_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_pos_r_AWREADY : STD_LOGIC;
    signal ap_sig_ioackin_debug_AWREADY : STD_LOGIC;
    signal ap_block_state212_io : BOOLEAN;
    signal ap_CS_fsm_state226 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state226 : signal is "none";
    signal reg_4021 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp3_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage2 : signal is "none";
    signal ap_block_state33_pp3_stage2_iter0 : BOOLEAN;
    signal ap_block_state37_pp3_stage2_iter1 : BOOLEAN;
    signal ap_block_state41_pp3_stage2_iter2 : BOOLEAN;
    signal ap_block_pp3_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_pp4_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage2 : signal is "none";
    signal ap_block_state89_pp4_stage2_iter0 : BOOLEAN;
    signal ap_block_state93_pp4_stage2_iter1 : BOOLEAN;
    signal ap_block_state97_pp4_stage2_iter2 : BOOLEAN;
    signal ap_block_pp4_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_CS_fsm_state116 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state116 : signal is "none";
    signal ap_CS_fsm_pp5_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage2 : signal is "none";
    signal ap_block_state145_pp5_stage2_iter0 : BOOLEAN;
    signal ap_block_state149_pp5_stage2_iter1 : BOOLEAN;
    signal ap_block_state153_pp5_stage2_iter2 : BOOLEAN;
    signal ap_block_pp5_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_state158 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state158 : signal is "none";
    signal ap_CS_fsm_state172 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state172 : signal is "none";
    signal ap_CS_fsm_pp6_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage2 : signal is "none";
    signal ap_block_state201_pp6_stage2_iter0 : BOOLEAN;
    signal ap_block_state205_pp6_stage2_iter1 : BOOLEAN;
    signal ap_block_state209_pp6_stage2_iter2 : BOOLEAN;
    signal ap_block_pp6_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_state214 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state214 : signal is "none";
    signal ap_CS_fsm_state228 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state228 : signal is "none";
    signal grp_fu_2458_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4028 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal ap_CS_fsm_state108 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state108 : signal is "none";
    signal ap_CS_fsm_state112 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state112 : signal is "none";
    signal ap_CS_fsm_state120 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state120 : signal is "none";
    signal ap_CS_fsm_state124 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state124 : signal is "none";
    signal ap_CS_fsm_state164 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state164 : signal is "none";
    signal ap_CS_fsm_state168 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state168 : signal is "none";
    signal ap_CS_fsm_state176 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state176 : signal is "none";
    signal ap_CS_fsm_state180 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state180 : signal is "none";
    signal ap_CS_fsm_state220 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state220 : signal is "none";
    signal ap_CS_fsm_state224 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state224 : signal is "none";
    signal ap_CS_fsm_state232 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state232 : signal is "none";
    signal ap_CS_fsm_state236 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state236 : signal is "none";
    signal ap_CS_fsm_state248 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state248 : signal is "none";
    signal reg_4047 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state104 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state104 : signal is "none";
    signal ap_CS_fsm_state160 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state160 : signal is "none";
    signal ap_CS_fsm_state216 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state216 : signal is "none";
    signal reg_4055 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter2 : STD_LOGIC := '0';
    signal reg_4064 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i_reg_10664_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal exitcond_i_1_reg_11436_pp4_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state118 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state118 : signal is "none";
    signal exitcond_i_2_reg_12214_pp5_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state174 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state174 : signal is "none";
    signal exitcond_i_3_reg_12992_pp6_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state230 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state230 : signal is "none";
    signal reg_4072 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4080 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2500_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4089 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4101 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4110 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4116 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4123 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2515_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4128 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4133 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state106 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state106 : signal is "none";
    signal ap_CS_fsm_state162 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state162 : signal is "none";
    signal ap_CS_fsm_state218 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state218 : signal is "none";
    signal reg_4139 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4144 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal ap_CS_fsm_state166 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state166 : signal is "none";
    signal ap_CS_fsm_state222 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state222 : signal is "none";
    signal grp_fu_2521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4150 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4155 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4160 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4165 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4169 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4174 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_4179 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal ap_CS_fsm_state129 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state129 : signal is "none";
    signal ap_CS_fsm_state185 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state185 : signal is "none";
    signal ap_CS_fsm_state241 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state241 : signal is "none";
    signal transfer_pyr_read_read_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal debug_addr_reg_9883 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_cast_fu_4217_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_84_cast_reg_9889 : STD_LOGIC_VECTOR (62 downto 0);
    signal pos_addr_reg_9896 : STD_LOGIC_VECTOR (63 downto 0);
    signal patches_addr_reg_9904 : STD_LOGIC_VECTOR (63 downto 0);
    signal pyr_addr_reg_9910 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond3_fu_4239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_9916_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next_fu_4245_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal indvar_next_reg_9920 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal pyr_addr_read_reg_9925 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond1_fu_4256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state19_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal indvar_next1_fu_4262_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal next_mul_fu_4268_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal div_t_reg_9944 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_4284_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_reg_9948 : STD_LOGIC_VECTOR (6 downto 0);
    signal idx_urem_fu_4300_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond2_fu_6708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state28_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal indvar_next2_fu_6714_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal p_t2_reg_9966 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_85_fu_6730_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_reg_9970 : STD_LOGIC_VECTOR (0 downto 0);
    signal ref_patch_with_borde_700_reg_9974 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ref_patch_with_borde_701_reg_9980 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_702_reg_10037 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_703_reg_10092 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_704_reg_10099 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_705_reg_10106 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_706_reg_10113 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_707_reg_10120 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_708_reg_10127 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_709_reg_10134 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_710_reg_10141 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_711_reg_10148 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_712_reg_10155 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_713_reg_10162 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_714_reg_10169 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_715_reg_10176 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_716_reg_10183 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_717_reg_10190 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_718_reg_10197 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_719_reg_10204 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_720_reg_10211 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_721_reg_10218 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_722_reg_10225 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_723_reg_10232 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_724_reg_10239 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_725_reg_10246 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_726_reg_10253 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_727_reg_10260 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_728_reg_10267 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_729_reg_10274 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_730_reg_10281 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_731_reg_10288 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_732_reg_10295 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_733_reg_10302 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_734_reg_10309 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_735_reg_10316 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_736_reg_10323 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_737_reg_10330 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_738_reg_10337 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_739_reg_10344 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_740_reg_10351 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_741_reg_10358 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_742_reg_10365 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_743_reg_10372 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_744_reg_10379 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_745_reg_10386 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_746_reg_10393 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_747_reg_10400 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_748_reg_10407 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_749_reg_10414 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_750_reg_10421 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_751_reg_10428 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_752_reg_10435 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_753_reg_10442 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_754_reg_10449 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_755_reg_10456 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_756_reg_10463 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_757_reg_10470 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_758_reg_10477 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_759_reg_10484 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_760_reg_10491 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_761_reg_10498 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_762_reg_10505 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_763_reg_10512 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_764_reg_10519 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_765_reg_10526 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_766_reg_10533 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_767_reg_10540 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_768_reg_10547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_769_reg_10554 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_770_reg_10560 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_771_reg_10565 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_772_reg_10570 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_773_reg_10575 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_774_reg_10580 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_775_reg_10585 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_776_reg_10590 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_777_reg_10595 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_778_reg_10600 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_779_reg_10605 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_780_reg_10610 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_781_reg_10616 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_782_reg_10622 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_783_reg_10628 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_784_reg_10634 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_785_reg_10640 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_786_reg_10646 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_787_reg_10652 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_788_reg_10658 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_i_fu_6782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_6788_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_reg_10668 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_58_0_t_fu_6856_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_879_fu_6878_p130 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_879_reg_10677 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_7432_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_58_reg_10682 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_93_fu_7451_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_fu_7456_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_7470_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal tmp_41_fu_7485_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_7490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal grp_fu_2545_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_0_0_reg_10712 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2549_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_0_1_reg_10718 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2553_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_0_2_reg_10724 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2557_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_0_4_reg_10730 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_0_5_reg_10735 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2565_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_0_8_reg_10741 : STD_LOGIC_VECTOR (31 downto 0);
    signal ref_patch_with_borde_789_reg_10746 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_790_reg_10752 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_791_reg_10809 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_792_reg_10864 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_793_reg_10871 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_794_reg_10878 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_795_reg_10885 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_796_reg_10892 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_797_reg_10899 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_798_reg_10906 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_799_reg_10913 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_800_reg_10920 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_801_reg_10927 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_802_reg_10934 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_803_reg_10941 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_804_reg_10948 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_805_reg_10955 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_806_reg_10962 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_807_reg_10969 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_808_reg_10976 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_809_reg_10983 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_810_reg_10990 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_811_reg_10997 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_812_reg_11004 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_813_reg_11011 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_814_reg_11018 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_815_reg_11025 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_816_reg_11032 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_817_reg_11039 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_818_reg_11046 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_819_reg_11053 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_820_reg_11060 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_821_reg_11067 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_822_reg_11074 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_823_reg_11081 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_824_reg_11088 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_825_reg_11095 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_826_reg_11102 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_827_reg_11109 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_828_reg_11116 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_829_reg_11123 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_830_reg_11130 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_831_reg_11137 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_832_reg_11144 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_833_reg_11151 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_834_reg_11158 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_835_reg_11165 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_836_reg_11172 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_837_reg_11179 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_838_reg_11186 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_839_reg_11193 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_840_reg_11200 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_841_reg_11207 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_842_reg_11214 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_843_reg_11221 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_844_reg_11228 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_845_reg_11235 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_846_reg_11242 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_847_reg_11249 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_848_reg_11256 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_849_reg_11263 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_850_reg_11270 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_851_reg_11277 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_852_reg_11284 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_853_reg_11291 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_854_reg_11298 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_855_reg_11305 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_856_reg_11312 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_857_reg_11319 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_858_reg_11326 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_859_reg_11332 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_860_reg_11337 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_861_reg_11342 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_862_reg_11347 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_863_reg_11352 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_864_reg_11357 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_865_reg_11362 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_866_reg_11367 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_867_reg_11372 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_868_reg_11377 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_869_reg_11382 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_870_reg_11388 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_871_reg_11394 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_872_reg_11400 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_873_reg_11406 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_874_reg_11412 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_875_reg_11418 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_876_reg_11424 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_877_reg_11430 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_i_1_fu_7495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_7501_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_1_reg_11440 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_58_1_t_fu_7569_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1071_fu_7591_p130 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1071_reg_11449 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_1_fu_8145_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_1_reg_11454 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_s_fu_8164_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_s_fu_8169_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_1_fu_8183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state125 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state125 : signal is "none";
    signal tmp_49_1_fu_8198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_1_fu_8203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state130 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state130 : signal is "none";
    signal H_inv_1_0_reg_11484 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_1_1_reg_11490 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_1_2_reg_11496 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_1_4_reg_11502 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_1_5_reg_11507 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_1_8_reg_11513 : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_addr_1_reg_11518 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state135 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state135 : signal is "none";
    signal ref_patch_with_borde_981_reg_11524 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_982_reg_11530 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_983_reg_11587 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_984_reg_11642 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_985_reg_11649 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_986_reg_11656 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_987_reg_11663 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_988_reg_11670 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_989_reg_11677 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_990_reg_11684 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_991_reg_11691 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_992_reg_11698 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_993_reg_11705 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_994_reg_11712 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_995_reg_11719 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_996_reg_11726 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_997_reg_11733 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_998_reg_11740 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_999_reg_11747 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1000_reg_11754 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1001_reg_11761 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1002_reg_11768 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1003_reg_11775 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1004_reg_11782 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1005_reg_11789 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1006_reg_11796 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1007_reg_11803 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1008_reg_11810 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1009_reg_11817 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1010_reg_11824 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1011_reg_11831 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1012_reg_11838 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1013_reg_11845 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1014_reg_11852 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1015_reg_11859 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1016_reg_11866 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1017_reg_11873 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1018_reg_11880 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1019_reg_11887 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1020_reg_11894 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1021_reg_11901 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1022_reg_11908 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1023_reg_11915 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1024_reg_11922 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1025_reg_11929 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1026_reg_11936 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1027_reg_11943 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1028_reg_11950 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1029_reg_11957 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1030_reg_11964 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1031_reg_11971 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1032_reg_11978 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1033_reg_11985 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1034_reg_11992 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1035_reg_11999 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1036_reg_12006 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1037_reg_12013 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1038_reg_12020 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1039_reg_12027 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1040_reg_12034 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1041_reg_12041 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1042_reg_12048 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1043_reg_12055 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1044_reg_12062 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1045_reg_12069 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1046_reg_12076 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1047_reg_12083 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1048_reg_12090 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1049_reg_12097 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1050_reg_12104 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1051_reg_12110 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1052_reg_12115 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1053_reg_12120 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1054_reg_12125 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1055_reg_12130 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1056_reg_12135 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1057_reg_12140 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1058_reg_12145 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1059_reg_12150 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1060_reg_12155 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1061_reg_12160 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1062_reg_12166 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1063_reg_12172 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1064_reg_12178 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1065_reg_12184 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1066_reg_12190 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1067_reg_12196 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1068_reg_12202 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1069_reg_12208 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_i_2_fu_8223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_8229_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_2_reg_12218 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_58_2_t_fu_8297_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1263_fu_8319_p130 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1263_reg_12227 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_2_fu_8873_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_2_reg_12232 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_4_fu_8892_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_4_fu_8897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_2_fu_8911_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state181 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state181 : signal is "none";
    signal tmp_49_2_fu_8926_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_2_fu_8931_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state186 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state186 : signal is "none";
    signal H_inv_2_0_reg_12262 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_2_1_reg_12268 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_2_2_reg_12274 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_2_4_reg_12280 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_2_5_reg_12285 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_2_8_reg_12291 : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_addr_2_reg_12296 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state191 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state191 : signal is "none";
    signal ref_patch_with_borde_1173_reg_12302 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1174_reg_12308 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1175_reg_12365 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1176_reg_12420 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1177_reg_12427 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1178_reg_12434 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1179_reg_12441 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1180_reg_12448 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1181_reg_12455 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1182_reg_12462 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1183_reg_12469 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1184_reg_12476 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1185_reg_12483 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1186_reg_12490 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1187_reg_12497 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1188_reg_12504 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1189_reg_12511 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1190_reg_12518 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1191_reg_12525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1192_reg_12532 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1193_reg_12539 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1194_reg_12546 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1195_reg_12553 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1196_reg_12560 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1197_reg_12567 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1198_reg_12574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1199_reg_12581 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1200_reg_12588 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1201_reg_12595 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1202_reg_12602 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1203_reg_12609 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1204_reg_12616 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1205_reg_12623 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1206_reg_12630 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1207_reg_12637 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1208_reg_12644 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1209_reg_12651 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1210_reg_12658 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1211_reg_12665 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1212_reg_12672 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1213_reg_12679 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1214_reg_12686 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1215_reg_12693 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1216_reg_12700 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1217_reg_12707 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1218_reg_12714 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1219_reg_12721 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1220_reg_12728 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1221_reg_12735 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1222_reg_12742 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1223_reg_12749 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1224_reg_12756 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1225_reg_12763 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1226_reg_12770 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1227_reg_12777 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1228_reg_12784 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1229_reg_12791 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1230_reg_12798 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1231_reg_12805 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1232_reg_12812 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1233_reg_12819 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1234_reg_12826 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1235_reg_12833 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1236_reg_12840 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1237_reg_12847 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1238_reg_12854 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1239_reg_12861 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1240_reg_12868 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1241_reg_12875 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1242_reg_12882 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1243_reg_12888 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1244_reg_12893 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1245_reg_12898 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1246_reg_12903 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1247_reg_12908 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1248_reg_12913 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1249_reg_12918 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1250_reg_12923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1251_reg_12928 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1252_reg_12933 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1253_reg_12938 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1254_reg_12944 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1255_reg_12950 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1256_reg_12956 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1257_reg_12962 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1258_reg_12968 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1259_reg_12974 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1260_reg_12980 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1261_reg_12986 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_i_3_fu_8951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_8957_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_3_reg_12996 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_58_3_t_fu_9025_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1366_fu_9047_p130 : STD_LOGIC_VECTOR (7 downto 0);
    signal ref_patch_with_borde_1366_reg_13005 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_3_fu_9601_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_3_reg_13010 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_66_5_fu_9620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_5_fu_9625_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_addr_3_reg_13025 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state211 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state211 : signal is "none";
    signal tmp_40_3_fu_9654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state237 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state237 : signal is "none";
    signal tmp_49_3_fu_9669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_3_fu_9674_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state242 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state242 : signal is "none";
    signal H_inv_3_0_reg_13046 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_3_1_reg_13052 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_3_2_reg_13058 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_3_4_reg_13064 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_3_5_reg_13069 : STD_LOGIC_VECTOR (31 downto 0);
    signal H_inv_3_8_reg_13075 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4_fu_9679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state255_pp7_stage0_iter0 : BOOLEAN;
    signal ap_block_state256_pp7_stage0_iter1 : BOOLEAN;
    signal ap_sig_ioackin_debug_WREADY : STD_LOGIC;
    signal ap_block_state256_io : BOOLEAN;
    signal ap_block_pp7_stage0_11001 : BOOLEAN;
    signal indvar_next3_fu_9685_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp7_iter0 : STD_LOGIC := '0';
    signal tmp_81_fu_9691_p38 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_reg_13089 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond5_fu_9733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state262_pp8_stage0_iter0 : BOOLEAN;
    signal ap_block_state263_pp8_stage0_iter1 : BOOLEAN;
    signal ap_sig_ioackin_pos_r_WREADY : STD_LOGIC;
    signal ap_block_state263_io : BOOLEAN;
    signal ap_block_pp8_stage0_11001 : BOOLEAN;
    signal indvar_next4_fu_9739_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp8_iter0 : STD_LOGIC := '0';
    signal UnifiedRetVal_i_fu_9871_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal UnifiedRetVal_i_reg_13103 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state9 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state19 : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state28 : STD_LOGIC;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state31 : STD_LOGIC;
    signal ap_block_pp3_stage3_subdone : BOOLEAN;
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state87 : STD_LOGIC;
    signal ap_block_pp4_stage3_subdone : BOOLEAN;
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state143 : STD_LOGIC;
    signal ap_block_pp5_stage3_subdone : BOOLEAN;
    signal ap_block_pp6_stage0_subdone : BOOLEAN;
    signal ap_condition_pp6_exit_iter0_state199 : STD_LOGIC;
    signal ap_block_pp6_stage3_subdone : BOOLEAN;
    signal ap_block_pp7_stage0_subdone : BOOLEAN;
    signal ap_condition_pp7_exit_iter0_state255 : STD_LOGIC;
    signal ap_block_pp8_stage0_subdone : BOOLEAN;
    signal ap_condition_pp8_exit_iter0_state262 : STD_LOGIC;
    signal ap_phi_mux_indvar_phi_fu_1456_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_phi_mux_tmp_s_phi_fu_1512_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage1 : BOOLEAN;
    signal ap_phi_mux_tmp_8_phi_fu_1536_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_phi_mux_tmp_9_phi_fu_1548_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage3 : BOOLEAN;
    signal ap_phi_mux_tmp_5_phi_fu_1560_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage2 : BOOLEAN;
    signal ap_phi_mux_i_0_i_phi_fu_1572_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_tmp_1_16_phi_fu_1744_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp4_stage1 : BOOLEAN;
    signal ap_phi_mux_tmp_2_1_phi_fu_1768_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal ap_phi_mux_tmp_10_1_phi_fu_1780_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp4_stage3 : BOOLEAN;
    signal ap_phi_mux_tmp_11_1_phi_fu_1792_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp4_stage2 : BOOLEAN;
    signal ap_phi_mux_i_0_i_1_phi_fu_1804_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_tmp_2_20_phi_fu_1976_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp5_stage1 : BOOLEAN;
    signal ap_phi_mux_tmp_2_2_phi_fu_2000_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal ap_phi_mux_tmp_10_2_phi_fu_2012_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp5_stage3 : BOOLEAN;
    signal ap_phi_mux_tmp_11_2_phi_fu_2024_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp5_stage2 : BOOLEAN;
    signal ap_phi_mux_i_0_i_2_phi_fu_2036_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_tmp_3_24_phi_fu_2208_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp6_stage1 : BOOLEAN;
    signal ap_phi_mux_tmp_2_3_phi_fu_2232_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp6_stage0 : BOOLEAN;
    signal ap_phi_mux_tmp_10_3_phi_fu_2244_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp6_stage3 : BOOLEAN;
    signal ap_phi_mux_tmp_11_3_phi_fu_2256_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp6_stage2 : BOOLEAN;
    signal ap_phi_mux_i_0_i_3_phi_fu_2268_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar4_fu_4251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_4193_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_84_fu_4213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cur_px_estimate_ptr6_fu_8213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cur_px_estimate_ptr6_4_fu_8941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cur_px_estimate_ptr6_5_fu_9634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_pyr_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_pyr_ARREADY : STD_LOGIC;
    signal ap_reg_ioackin_patches_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_patches_ARREADY : STD_LOGIC;
    signal ap_reg_ioackin_pos_r_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_pos_r_ARREADY : STD_LOGIC;
    signal ap_reg_ioackin_pos_r_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_pos_r_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_debug_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_debug_WREADY : STD_LOGIC := '0';
    signal ap_block_pp7_stage0_01001 : BOOLEAN;
    signal ap_block_pp8_stage0_01001 : BOOLEAN;
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal ap_CS_fsm_state128 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state128 : signal is "none";
    signal ap_CS_fsm_state184 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state184 : signal is "none";
    signal ap_CS_fsm_state240 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state240 : signal is "none";
    signal grp_fu_2458_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_CS_fsm_state105 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state105 : signal is "none";
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal ap_CS_fsm_state113 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state113 : signal is "none";
    signal ap_CS_fsm_state115 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state115 : signal is "none";
    signal ap_CS_fsm_state117 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state117 : signal is "none";
    signal ap_CS_fsm_state121 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state121 : signal is "none";
    signal ap_CS_fsm_state133 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state133 : signal is "none";
    signal ap_CS_fsm_state161 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state161 : signal is "none";
    signal ap_CS_fsm_state165 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state165 : signal is "none";
    signal ap_CS_fsm_state167 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state167 : signal is "none";
    signal ap_CS_fsm_state169 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state169 : signal is "none";
    signal ap_CS_fsm_state171 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state171 : signal is "none";
    signal ap_CS_fsm_state173 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state173 : signal is "none";
    signal ap_CS_fsm_state177 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state177 : signal is "none";
    signal ap_CS_fsm_state189 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state189 : signal is "none";
    signal ap_CS_fsm_state217 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state217 : signal is "none";
    signal ap_CS_fsm_state221 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state221 : signal is "none";
    signal ap_CS_fsm_state223 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state223 : signal is "none";
    signal ap_CS_fsm_state225 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state225 : signal is "none";
    signal ap_CS_fsm_state227 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state227 : signal is "none";
    signal ap_CS_fsm_state229 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state229 : signal is "none";
    signal ap_CS_fsm_state233 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state233 : signal is "none";
    signal ap_CS_fsm_state245 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state245 : signal is "none";
    signal grp_fu_2466_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2494_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal ap_CS_fsm_state107 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state107 : signal is "none";
    signal ap_CS_fsm_state155 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state155 : signal is "none";
    signal ap_CS_fsm_state157 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state157 : signal is "none";
    signal ap_CS_fsm_state159 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state159 : signal is "none";
    signal ap_CS_fsm_state163 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state163 : signal is "none";
    signal ap_CS_fsm_state213 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state213 : signal is "none";
    signal ap_CS_fsm_state215 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state215 : signal is "none";
    signal ap_CS_fsm_state219 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state219 : signal is "none";
    signal grp_fu_2500_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2500_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2506_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2515_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2549_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2561_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2569_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal inv_out7_fu_4183_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal cur_px_estimate_ptr5_fu_4203_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal next_urem_fu_4288_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_89_fu_4294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_6798_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_46_fu_6808_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_47_fu_6820_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_50_cast_fu_6828_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_47_cast_fu_6816_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_87_fu_6794_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_54_cast_fu_6842_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp2_fu_6846_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_48_fu_6832_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp2_cast_fu_6852_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp3_fu_6862_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp3_cast_fu_6868_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_879_fu_6878_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp4_fu_7012_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp4_cast_fu_7018_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_880_fu_7028_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_880_fu_7028_p130 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_fu_7166_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_54_cast1_fu_6838_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_57_fu_7222_p101 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_57_fu_7222_p102 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_93_cast_fu_7162_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_96_cast_fu_7428_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_65_cast_fu_7438_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_78_cast_fu_7442_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_54_fu_7445_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_to_int_fu_7460_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_neg_fu_7464_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_to_int_fu_7475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_neg_fu_7479_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_7511_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_51_fu_7521_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_52_fu_7533_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_61_cast_fu_7541_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_60_cast_fu_7529_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_91_fu_7507_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_64_cast_fu_7555_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp6_fu_7559_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_53_fu_7545_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp6_cast_fu_7565_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp7_fu_7575_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp7_cast_fu_7581_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1071_fu_7591_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp8_fu_7725_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp8_cast_fu_7731_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1072_fu_7741_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1072_fu_7741_p130 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_fu_7879_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_64_cast1_fu_7551_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_74_fu_7935_p101 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_74_fu_7935_p102 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_1_cast_fu_7875_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_74_1_cast_fu_8141_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_60_1_cast_fu_8151_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_64_1_cast_fu_8155_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_65_1_fu_8158_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_to_int_1_fu_8173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_neg_1_fu_8177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_to_int_1_fu_8188_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_neg_1_fu_8192_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_px_estimate_ptr6_1_fu_8208_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_90_fu_8239_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_70_fu_8249_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_71_fu_8261_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_73_cast_fu_8269_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_72_cast_fu_8257_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_95_fu_8235_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_76_cast_fu_8283_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp10_fu_8287_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_72_fu_8273_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp10_cast_fu_8293_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp11_fu_8303_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp11_cast_fu_8309_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1263_fu_8319_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp12_fu_8453_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp12_cast_fu_8459_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1264_fu_8469_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1264_fu_8469_p130 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_fu_8607_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_76_cast1_fu_8279_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_80_fu_8663_p101 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_80_fu_8663_p102 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_2_cast_fu_8603_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_74_2_cast_fu_8869_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_60_2_cast_fu_8879_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_64_2_cast_fu_8883_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_65_2_fu_8886_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_to_int_2_fu_8901_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_neg_2_fu_8905_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_to_int_2_fu_8916_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_neg_2_fu_8920_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal cur_px_estimate_ptr6_2_fu_8936_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_92_fu_8967_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_76_fu_8977_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_77_fu_8989_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_87_cast_fu_8997_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_86_cast_fu_8985_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_96_fu_8963_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_90_cast_fu_9011_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp14_fu_9015_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_78_fu_9001_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp14_cast_fu_9021_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp15_fu_9031_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp15_cast_fu_9037_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1366_fu_9047_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp16_fu_9181_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp16_cast_fu_9187_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1367_fu_9197_p129 : STD_LOGIC_VECTOR (6 downto 0);
    signal ref_patch_with_borde_1367_fu_9197_p130 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_82_fu_9335_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_90_cast1_fu_9007_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_83_fu_9391_p101 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_83_fu_9391_p102 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_3_cast_fu_9331_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_74_3_cast_fu_9597_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_60_3_cast_fu_9607_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_64_3_cast_fu_9611_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_65_3_fu_9614_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal cur_px_estimate_ptr6_3_fu_9629_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_40_to_int_3_fu_9644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_neg_3_fu_9648_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_to_int_3_fu_9659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_neg_3_fu_9663_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_97_fu_9745_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_tmp_i_fu_9781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_9795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_9787_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_i_fu_9809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_fu_9801_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_i_fu_9823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_i_fu_9815_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp8_i_fu_9837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_i_fu_9829_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp10_i_fu_9851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_i_fu_9843_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp12_i_fu_9865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_i_fu_9857_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2458_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp3_stage0_00001 : BOOLEAN;
    signal ap_block_pp3_stage1_00001 : BOOLEAN;
    signal ap_block_pp3_stage2_00001 : BOOLEAN;
    signal ap_block_pp3_stage3_00001 : BOOLEAN;
    signal ap_block_pp4_stage0_00001 : BOOLEAN;
    signal ap_block_pp4_stage1_00001 : BOOLEAN;
    signal ap_block_pp4_stage2_00001 : BOOLEAN;
    signal ap_block_pp4_stage3_00001 : BOOLEAN;
    signal ap_block_pp5_stage0_00001 : BOOLEAN;
    signal ap_block_pp5_stage1_00001 : BOOLEAN;
    signal ap_block_pp5_stage2_00001 : BOOLEAN;
    signal ap_block_pp5_stage3_00001 : BOOLEAN;
    signal ap_block_pp6_stage0_00001 : BOOLEAN;
    signal ap_block_pp6_stage1_00001 : BOOLEAN;
    signal ap_block_pp6_stage2_00001 : BOOLEAN;
    signal ap_block_pp6_stage3_00001 : BOOLEAN;
    signal grp_fu_2458_ce : STD_LOGIC;
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal ap_CS_fsm_state119 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state119 : signal is "none";
    signal ap_CS_fsm_state122 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state122 : signal is "none";
    signal ap_CS_fsm_state123 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state123 : signal is "none";
    signal ap_CS_fsm_state134 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state134 : signal is "none";
    signal ap_CS_fsm_state175 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state175 : signal is "none";
    signal ap_CS_fsm_state178 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state178 : signal is "none";
    signal ap_CS_fsm_state179 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state179 : signal is "none";
    signal ap_CS_fsm_state190 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state190 : signal is "none";
    signal ap_CS_fsm_state231 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state231 : signal is "none";
    signal ap_CS_fsm_state234 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state234 : signal is "none";
    signal ap_CS_fsm_state235 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state235 : signal is "none";
    signal ap_CS_fsm_state246 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state246 : signal is "none";
    signal ap_CS_fsm_state247 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state247 : signal is "none";
    signal grp_fu_2466_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2494_ce : STD_LOGIC;
    signal grp_fu_2500_ce : STD_LOGIC;
    signal grp_fu_2506_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (229 downto 0);
    signal ap_block_pp3_stage1_subdone : BOOLEAN;
    signal ap_block_pp3_stage2_subdone : BOOLEAN;
    signal ap_block_pp4_stage1_subdone : BOOLEAN;
    signal ap_block_pp4_stage2_subdone : BOOLEAN;
    signal ap_block_pp5_stage1_subdone : BOOLEAN;
    signal ap_block_pp5_stage2_subdone : BOOLEAN;
    signal ap_block_pp6_stage1_subdone : BOOLEAN;
    signal ap_block_pp6_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal ap_idle_pp6 : STD_LOGIC;
    signal ap_enable_pp6 : STD_LOGIC;
    signal ap_idle_pp7 : STD_LOGIC;
    signal ap_enable_pp7 : STD_LOGIC;
    signal ap_idle_pp8 : STD_LOGIC;
    signal ap_enable_pp8 : STD_LOGIC;
    signal ap_condition_11384 : BOOLEAN;
    signal ap_condition_11308 : BOOLEAN;
    signal ap_condition_11465 : BOOLEAN;
    signal ap_condition_11389 : BOOLEAN;
    signal ap_condition_11546 : BOOLEAN;
    signal ap_condition_11470 : BOOLEAN;
    signal ap_condition_11627 : BOOLEAN;
    signal ap_condition_11551 : BOOLEAN;
    signal ap_condition_11632 : BOOLEAN;

    component batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component batch_align2D_fsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component batch_align2D_fdiv_32ns_32ns_32_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component batch_align2D_sitofp_32s_32_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component batch_align2D_mux_1287_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        din65_WIDTH : INTEGER;
        din66_WIDTH : INTEGER;
        din67_WIDTH : INTEGER;
        din68_WIDTH : INTEGER;
        din69_WIDTH : INTEGER;
        din70_WIDTH : INTEGER;
        din71_WIDTH : INTEGER;
        din72_WIDTH : INTEGER;
        din73_WIDTH : INTEGER;
        din74_WIDTH : INTEGER;
        din75_WIDTH : INTEGER;
        din76_WIDTH : INTEGER;
        din77_WIDTH : INTEGER;
        din78_WIDTH : INTEGER;
        din79_WIDTH : INTEGER;
        din80_WIDTH : INTEGER;
        din81_WIDTH : INTEGER;
        din82_WIDTH : INTEGER;
        din83_WIDTH : INTEGER;
        din84_WIDTH : INTEGER;
        din85_WIDTH : INTEGER;
        din86_WIDTH : INTEGER;
        din87_WIDTH : INTEGER;
        din88_WIDTH : INTEGER;
        din89_WIDTH : INTEGER;
        din90_WIDTH : INTEGER;
        din91_WIDTH : INTEGER;
        din92_WIDTH : INTEGER;
        din93_WIDTH : INTEGER;
        din94_WIDTH : INTEGER;
        din95_WIDTH : INTEGER;
        din96_WIDTH : INTEGER;
        din97_WIDTH : INTEGER;
        din98_WIDTH : INTEGER;
        din99_WIDTH : INTEGER;
        din100_WIDTH : INTEGER;
        din101_WIDTH : INTEGER;
        din102_WIDTH : INTEGER;
        din103_WIDTH : INTEGER;
        din104_WIDTH : INTEGER;
        din105_WIDTH : INTEGER;
        din106_WIDTH : INTEGER;
        din107_WIDTH : INTEGER;
        din108_WIDTH : INTEGER;
        din109_WIDTH : INTEGER;
        din110_WIDTH : INTEGER;
        din111_WIDTH : INTEGER;
        din112_WIDTH : INTEGER;
        din113_WIDTH : INTEGER;
        din114_WIDTH : INTEGER;
        din115_WIDTH : INTEGER;
        din116_WIDTH : INTEGER;
        din117_WIDTH : INTEGER;
        din118_WIDTH : INTEGER;
        din119_WIDTH : INTEGER;
        din120_WIDTH : INTEGER;
        din121_WIDTH : INTEGER;
        din122_WIDTH : INTEGER;
        din123_WIDTH : INTEGER;
        din124_WIDTH : INTEGER;
        din125_WIDTH : INTEGER;
        din126_WIDTH : INTEGER;
        din127_WIDTH : INTEGER;
        din128_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        din10 : IN STD_LOGIC_VECTOR (7 downto 0);
        din11 : IN STD_LOGIC_VECTOR (7 downto 0);
        din12 : IN STD_LOGIC_VECTOR (7 downto 0);
        din13 : IN STD_LOGIC_VECTOR (7 downto 0);
        din14 : IN STD_LOGIC_VECTOR (7 downto 0);
        din15 : IN STD_LOGIC_VECTOR (7 downto 0);
        din16 : IN STD_LOGIC_VECTOR (7 downto 0);
        din17 : IN STD_LOGIC_VECTOR (7 downto 0);
        din18 : IN STD_LOGIC_VECTOR (7 downto 0);
        din19 : IN STD_LOGIC_VECTOR (7 downto 0);
        din20 : IN STD_LOGIC_VECTOR (7 downto 0);
        din21 : IN STD_LOGIC_VECTOR (7 downto 0);
        din22 : IN STD_LOGIC_VECTOR (7 downto 0);
        din23 : IN STD_LOGIC_VECTOR (7 downto 0);
        din24 : IN STD_LOGIC_VECTOR (7 downto 0);
        din25 : IN STD_LOGIC_VECTOR (7 downto 0);
        din26 : IN STD_LOGIC_VECTOR (7 downto 0);
        din27 : IN STD_LOGIC_VECTOR (7 downto 0);
        din28 : IN STD_LOGIC_VECTOR (7 downto 0);
        din29 : IN STD_LOGIC_VECTOR (7 downto 0);
        din30 : IN STD_LOGIC_VECTOR (7 downto 0);
        din31 : IN STD_LOGIC_VECTOR (7 downto 0);
        din32 : IN STD_LOGIC_VECTOR (7 downto 0);
        din33 : IN STD_LOGIC_VECTOR (7 downto 0);
        din34 : IN STD_LOGIC_VECTOR (7 downto 0);
        din35 : IN STD_LOGIC_VECTOR (7 downto 0);
        din36 : IN STD_LOGIC_VECTOR (7 downto 0);
        din37 : IN STD_LOGIC_VECTOR (7 downto 0);
        din38 : IN STD_LOGIC_VECTOR (7 downto 0);
        din39 : IN STD_LOGIC_VECTOR (7 downto 0);
        din40 : IN STD_LOGIC_VECTOR (7 downto 0);
        din41 : IN STD_LOGIC_VECTOR (7 downto 0);
        din42 : IN STD_LOGIC_VECTOR (7 downto 0);
        din43 : IN STD_LOGIC_VECTOR (7 downto 0);
        din44 : IN STD_LOGIC_VECTOR (7 downto 0);
        din45 : IN STD_LOGIC_VECTOR (7 downto 0);
        din46 : IN STD_LOGIC_VECTOR (7 downto 0);
        din47 : IN STD_LOGIC_VECTOR (7 downto 0);
        din48 : IN STD_LOGIC_VECTOR (7 downto 0);
        din49 : IN STD_LOGIC_VECTOR (7 downto 0);
        din50 : IN STD_LOGIC_VECTOR (7 downto 0);
        din51 : IN STD_LOGIC_VECTOR (7 downto 0);
        din52 : IN STD_LOGIC_VECTOR (7 downto 0);
        din53 : IN STD_LOGIC_VECTOR (7 downto 0);
        din54 : IN STD_LOGIC_VECTOR (7 downto 0);
        din55 : IN STD_LOGIC_VECTOR (7 downto 0);
        din56 : IN STD_LOGIC_VECTOR (7 downto 0);
        din57 : IN STD_LOGIC_VECTOR (7 downto 0);
        din58 : IN STD_LOGIC_VECTOR (7 downto 0);
        din59 : IN STD_LOGIC_VECTOR (7 downto 0);
        din60 : IN STD_LOGIC_VECTOR (7 downto 0);
        din61 : IN STD_LOGIC_VECTOR (7 downto 0);
        din62 : IN STD_LOGIC_VECTOR (7 downto 0);
        din63 : IN STD_LOGIC_VECTOR (7 downto 0);
        din64 : IN STD_LOGIC_VECTOR (7 downto 0);
        din65 : IN STD_LOGIC_VECTOR (7 downto 0);
        din66 : IN STD_LOGIC_VECTOR (7 downto 0);
        din67 : IN STD_LOGIC_VECTOR (7 downto 0);
        din68 : IN STD_LOGIC_VECTOR (7 downto 0);
        din69 : IN STD_LOGIC_VECTOR (7 downto 0);
        din70 : IN STD_LOGIC_VECTOR (7 downto 0);
        din71 : IN STD_LOGIC_VECTOR (7 downto 0);
        din72 : IN STD_LOGIC_VECTOR (7 downto 0);
        din73 : IN STD_LOGIC_VECTOR (7 downto 0);
        din74 : IN STD_LOGIC_VECTOR (7 downto 0);
        din75 : IN STD_LOGIC_VECTOR (7 downto 0);
        din76 : IN STD_LOGIC_VECTOR (7 downto 0);
        din77 : IN STD_LOGIC_VECTOR (7 downto 0);
        din78 : IN STD_LOGIC_VECTOR (7 downto 0);
        din79 : IN STD_LOGIC_VECTOR (7 downto 0);
        din80 : IN STD_LOGIC_VECTOR (7 downto 0);
        din81 : IN STD_LOGIC_VECTOR (7 downto 0);
        din82 : IN STD_LOGIC_VECTOR (7 downto 0);
        din83 : IN STD_LOGIC_VECTOR (7 downto 0);
        din84 : IN STD_LOGIC_VECTOR (7 downto 0);
        din85 : IN STD_LOGIC_VECTOR (7 downto 0);
        din86 : IN STD_LOGIC_VECTOR (7 downto 0);
        din87 : IN STD_LOGIC_VECTOR (7 downto 0);
        din88 : IN STD_LOGIC_VECTOR (7 downto 0);
        din89 : IN STD_LOGIC_VECTOR (7 downto 0);
        din90 : IN STD_LOGIC_VECTOR (7 downto 0);
        din91 : IN STD_LOGIC_VECTOR (7 downto 0);
        din92 : IN STD_LOGIC_VECTOR (7 downto 0);
        din93 : IN STD_LOGIC_VECTOR (7 downto 0);
        din94 : IN STD_LOGIC_VECTOR (7 downto 0);
        din95 : IN STD_LOGIC_VECTOR (7 downto 0);
        din96 : IN STD_LOGIC_VECTOR (7 downto 0);
        din97 : IN STD_LOGIC_VECTOR (7 downto 0);
        din98 : IN STD_LOGIC_VECTOR (7 downto 0);
        din99 : IN STD_LOGIC_VECTOR (7 downto 0);
        din100 : IN STD_LOGIC_VECTOR (7 downto 0);
        din101 : IN STD_LOGIC_VECTOR (7 downto 0);
        din102 : IN STD_LOGIC_VECTOR (7 downto 0);
        din103 : IN STD_LOGIC_VECTOR (7 downto 0);
        din104 : IN STD_LOGIC_VECTOR (7 downto 0);
        din105 : IN STD_LOGIC_VECTOR (7 downto 0);
        din106 : IN STD_LOGIC_VECTOR (7 downto 0);
        din107 : IN STD_LOGIC_VECTOR (7 downto 0);
        din108 : IN STD_LOGIC_VECTOR (7 downto 0);
        din109 : IN STD_LOGIC_VECTOR (7 downto 0);
        din110 : IN STD_LOGIC_VECTOR (7 downto 0);
        din111 : IN STD_LOGIC_VECTOR (7 downto 0);
        din112 : IN STD_LOGIC_VECTOR (7 downto 0);
        din113 : IN STD_LOGIC_VECTOR (7 downto 0);
        din114 : IN STD_LOGIC_VECTOR (7 downto 0);
        din115 : IN STD_LOGIC_VECTOR (7 downto 0);
        din116 : IN STD_LOGIC_VECTOR (7 downto 0);
        din117 : IN STD_LOGIC_VECTOR (7 downto 0);
        din118 : IN STD_LOGIC_VECTOR (7 downto 0);
        din119 : IN STD_LOGIC_VECTOR (7 downto 0);
        din120 : IN STD_LOGIC_VECTOR (7 downto 0);
        din121 : IN STD_LOGIC_VECTOR (7 downto 0);
        din122 : IN STD_LOGIC_VECTOR (7 downto 0);
        din123 : IN STD_LOGIC_VECTOR (7 downto 0);
        din124 : IN STD_LOGIC_VECTOR (7 downto 0);
        din125 : IN STD_LOGIC_VECTOR (7 downto 0);
        din126 : IN STD_LOGIC_VECTOR (7 downto 0);
        din127 : IN STD_LOGIC_VECTOR (7 downto 0);
        din128 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component batch_align2D_mux_1007_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        din65_WIDTH : INTEGER;
        din66_WIDTH : INTEGER;
        din67_WIDTH : INTEGER;
        din68_WIDTH : INTEGER;
        din69_WIDTH : INTEGER;
        din70_WIDTH : INTEGER;
        din71_WIDTH : INTEGER;
        din72_WIDTH : INTEGER;
        din73_WIDTH : INTEGER;
        din74_WIDTH : INTEGER;
        din75_WIDTH : INTEGER;
        din76_WIDTH : INTEGER;
        din77_WIDTH : INTEGER;
        din78_WIDTH : INTEGER;
        din79_WIDTH : INTEGER;
        din80_WIDTH : INTEGER;
        din81_WIDTH : INTEGER;
        din82_WIDTH : INTEGER;
        din83_WIDTH : INTEGER;
        din84_WIDTH : INTEGER;
        din85_WIDTH : INTEGER;
        din86_WIDTH : INTEGER;
        din87_WIDTH : INTEGER;
        din88_WIDTH : INTEGER;
        din89_WIDTH : INTEGER;
        din90_WIDTH : INTEGER;
        din91_WIDTH : INTEGER;
        din92_WIDTH : INTEGER;
        din93_WIDTH : INTEGER;
        din94_WIDTH : INTEGER;
        din95_WIDTH : INTEGER;
        din96_WIDTH : INTEGER;
        din97_WIDTH : INTEGER;
        din98_WIDTH : INTEGER;
        din99_WIDTH : INTEGER;
        din100_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (7 downto 0);
        din5 : IN STD_LOGIC_VECTOR (7 downto 0);
        din6 : IN STD_LOGIC_VECTOR (7 downto 0);
        din7 : IN STD_LOGIC_VECTOR (7 downto 0);
        din8 : IN STD_LOGIC_VECTOR (7 downto 0);
        din9 : IN STD_LOGIC_VECTOR (7 downto 0);
        din10 : IN STD_LOGIC_VECTOR (7 downto 0);
        din11 : IN STD_LOGIC_VECTOR (7 downto 0);
        din12 : IN STD_LOGIC_VECTOR (7 downto 0);
        din13 : IN STD_LOGIC_VECTOR (7 downto 0);
        din14 : IN STD_LOGIC_VECTOR (7 downto 0);
        din15 : IN STD_LOGIC_VECTOR (7 downto 0);
        din16 : IN STD_LOGIC_VECTOR (7 downto 0);
        din17 : IN STD_LOGIC_VECTOR (7 downto 0);
        din18 : IN STD_LOGIC_VECTOR (7 downto 0);
        din19 : IN STD_LOGIC_VECTOR (7 downto 0);
        din20 : IN STD_LOGIC_VECTOR (7 downto 0);
        din21 : IN STD_LOGIC_VECTOR (7 downto 0);
        din22 : IN STD_LOGIC_VECTOR (7 downto 0);
        din23 : IN STD_LOGIC_VECTOR (7 downto 0);
        din24 : IN STD_LOGIC_VECTOR (7 downto 0);
        din25 : IN STD_LOGIC_VECTOR (7 downto 0);
        din26 : IN STD_LOGIC_VECTOR (7 downto 0);
        din27 : IN STD_LOGIC_VECTOR (7 downto 0);
        din28 : IN STD_LOGIC_VECTOR (7 downto 0);
        din29 : IN STD_LOGIC_VECTOR (7 downto 0);
        din30 : IN STD_LOGIC_VECTOR (7 downto 0);
        din31 : IN STD_LOGIC_VECTOR (7 downto 0);
        din32 : IN STD_LOGIC_VECTOR (7 downto 0);
        din33 : IN STD_LOGIC_VECTOR (7 downto 0);
        din34 : IN STD_LOGIC_VECTOR (7 downto 0);
        din35 : IN STD_LOGIC_VECTOR (7 downto 0);
        din36 : IN STD_LOGIC_VECTOR (7 downto 0);
        din37 : IN STD_LOGIC_VECTOR (7 downto 0);
        din38 : IN STD_LOGIC_VECTOR (7 downto 0);
        din39 : IN STD_LOGIC_VECTOR (7 downto 0);
        din40 : IN STD_LOGIC_VECTOR (7 downto 0);
        din41 : IN STD_LOGIC_VECTOR (7 downto 0);
        din42 : IN STD_LOGIC_VECTOR (7 downto 0);
        din43 : IN STD_LOGIC_VECTOR (7 downto 0);
        din44 : IN STD_LOGIC_VECTOR (7 downto 0);
        din45 : IN STD_LOGIC_VECTOR (7 downto 0);
        din46 : IN STD_LOGIC_VECTOR (7 downto 0);
        din47 : IN STD_LOGIC_VECTOR (7 downto 0);
        din48 : IN STD_LOGIC_VECTOR (7 downto 0);
        din49 : IN STD_LOGIC_VECTOR (7 downto 0);
        din50 : IN STD_LOGIC_VECTOR (7 downto 0);
        din51 : IN STD_LOGIC_VECTOR (7 downto 0);
        din52 : IN STD_LOGIC_VECTOR (7 downto 0);
        din53 : IN STD_LOGIC_VECTOR (7 downto 0);
        din54 : IN STD_LOGIC_VECTOR (7 downto 0);
        din55 : IN STD_LOGIC_VECTOR (7 downto 0);
        din56 : IN STD_LOGIC_VECTOR (7 downto 0);
        din57 : IN STD_LOGIC_VECTOR (7 downto 0);
        din58 : IN STD_LOGIC_VECTOR (7 downto 0);
        din59 : IN STD_LOGIC_VECTOR (7 downto 0);
        din60 : IN STD_LOGIC_VECTOR (7 downto 0);
        din61 : IN STD_LOGIC_VECTOR (7 downto 0);
        din62 : IN STD_LOGIC_VECTOR (7 downto 0);
        din63 : IN STD_LOGIC_VECTOR (7 downto 0);
        din64 : IN STD_LOGIC_VECTOR (7 downto 0);
        din65 : IN STD_LOGIC_VECTOR (7 downto 0);
        din66 : IN STD_LOGIC_VECTOR (7 downto 0);
        din67 : IN STD_LOGIC_VECTOR (7 downto 0);
        din68 : IN STD_LOGIC_VECTOR (7 downto 0);
        din69 : IN STD_LOGIC_VECTOR (7 downto 0);
        din70 : IN STD_LOGIC_VECTOR (7 downto 0);
        din71 : IN STD_LOGIC_VECTOR (7 downto 0);
        din72 : IN STD_LOGIC_VECTOR (7 downto 0);
        din73 : IN STD_LOGIC_VECTOR (7 downto 0);
        din74 : IN STD_LOGIC_VECTOR (7 downto 0);
        din75 : IN STD_LOGIC_VECTOR (7 downto 0);
        din76 : IN STD_LOGIC_VECTOR (7 downto 0);
        din77 : IN STD_LOGIC_VECTOR (7 downto 0);
        din78 : IN STD_LOGIC_VECTOR (7 downto 0);
        din79 : IN STD_LOGIC_VECTOR (7 downto 0);
        din80 : IN STD_LOGIC_VECTOR (7 downto 0);
        din81 : IN STD_LOGIC_VECTOR (7 downto 0);
        din82 : IN STD_LOGIC_VECTOR (7 downto 0);
        din83 : IN STD_LOGIC_VECTOR (7 downto 0);
        din84 : IN STD_LOGIC_VECTOR (7 downto 0);
        din85 : IN STD_LOGIC_VECTOR (7 downto 0);
        din86 : IN STD_LOGIC_VECTOR (7 downto 0);
        din87 : IN STD_LOGIC_VECTOR (7 downto 0);
        din88 : IN STD_LOGIC_VECTOR (7 downto 0);
        din89 : IN STD_LOGIC_VECTOR (7 downto 0);
        din90 : IN STD_LOGIC_VECTOR (7 downto 0);
        din91 : IN STD_LOGIC_VECTOR (7 downto 0);
        din92 : IN STD_LOGIC_VECTOR (7 downto 0);
        din93 : IN STD_LOGIC_VECTOR (7 downto 0);
        din94 : IN STD_LOGIC_VECTOR (7 downto 0);
        din95 : IN STD_LOGIC_VECTOR (7 downto 0);
        din96 : IN STD_LOGIC_VECTOR (7 downto 0);
        din97 : IN STD_LOGIC_VECTOR (7 downto 0);
        din98 : IN STD_LOGIC_VECTOR (7 downto 0);
        din99 : IN STD_LOGIC_VECTOR (7 downto 0);
        din100 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component batch_align2D_mux_366_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component batch_align2D_pyr_data IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component batch_align2D_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        pyr_data_ptr : OUT STD_LOGIC_VECTOR (63 downto 0);
        ref_patch_with_border_ptr : OUT STD_LOGIC_VECTOR (63 downto 0);
        cur_px_estimate_ptr : OUT STD_LOGIC_VECTOR (63 downto 0);
        inv_out : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component batch_align2D_param_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        img_w : OUT STD_LOGIC_VECTOR (15 downto 0);
        img_h : OUT STD_LOGIC_VECTOR (15 downto 0);
        levels : OUT STD_LOGIC_VECTOR (127 downto 0);
        converged : IN STD_LOGIC_VECTOR (63 downto 0);
        converged_ap_vld : IN STD_LOGIC;
        n_iter : OUT STD_LOGIC_VECTOR (31 downto 0);
        transfer_pyr : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component batch_align2D_pyr_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component batch_align2D_patches_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component batch_align2D_pos_r_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component batch_align2D_debug_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    pyr_data_U : component batch_align2D_pyr_data
    generic map (
        DataWidth => 8,
        AddressRange => 473760,
        AddressWidth => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => pyr_data_address0,
        ce0 => pyr_data_ce0,
        we0 => pyr_data_we0,
        d0 => pyr_addr_read_reg_9925,
        q0 => pyr_data_q0);

    batch_align2D_ctrl_s_axi_U : component batch_align2D_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        pyr_data_ptr => pyr_data_ptr,
        ref_patch_with_border_ptr => ref_patch_with_border_ptr,
        cur_px_estimate_ptr => cur_px_estimate_ptr,
        inv_out => inv_out);

    batch_align2D_param_s_axi_U : component batch_align2D_param_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_PARAM_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_PARAM_DATA_WIDTH)
    port map (
        AWVALID => s_axi_param_AWVALID,
        AWREADY => s_axi_param_AWREADY,
        AWADDR => s_axi_param_AWADDR,
        WVALID => s_axi_param_WVALID,
        WREADY => s_axi_param_WREADY,
        WDATA => s_axi_param_WDATA,
        WSTRB => s_axi_param_WSTRB,
        ARVALID => s_axi_param_ARVALID,
        ARREADY => s_axi_param_ARREADY,
        ARADDR => s_axi_param_ARADDR,
        RVALID => s_axi_param_RVALID,
        RREADY => s_axi_param_RREADY,
        RDATA => s_axi_param_RDATA,
        RRESP => s_axi_param_RRESP,
        BVALID => s_axi_param_BVALID,
        BREADY => s_axi_param_BREADY,
        BRESP => s_axi_param_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        img_w => img_w,
        img_h => img_h,
        levels => levels,
        converged => ap_const_lv64_0,
        converged_ap_vld => converged_ap_vld,
        n_iter => n_iter,
        transfer_pyr => transfer_pyr);

    batch_align2D_pyr_m_axi_U : component batch_align2D_pyr_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 8,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_PYR_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_PYR_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_PYR_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_PYR_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_PYR_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_PYR_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_PYR_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_PYR_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_PYR_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_PYR_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_PYR_CACHE_VALUE)
    port map (
        AWVALID => m_axi_pyr_AWVALID,
        AWREADY => m_axi_pyr_AWREADY,
        AWADDR => m_axi_pyr_AWADDR,
        AWID => m_axi_pyr_AWID,
        AWLEN => m_axi_pyr_AWLEN,
        AWSIZE => m_axi_pyr_AWSIZE,
        AWBURST => m_axi_pyr_AWBURST,
        AWLOCK => m_axi_pyr_AWLOCK,
        AWCACHE => m_axi_pyr_AWCACHE,
        AWPROT => m_axi_pyr_AWPROT,
        AWQOS => m_axi_pyr_AWQOS,
        AWREGION => m_axi_pyr_AWREGION,
        AWUSER => m_axi_pyr_AWUSER,
        WVALID => m_axi_pyr_WVALID,
        WREADY => m_axi_pyr_WREADY,
        WDATA => m_axi_pyr_WDATA,
        WSTRB => m_axi_pyr_WSTRB,
        WLAST => m_axi_pyr_WLAST,
        WID => m_axi_pyr_WID,
        WUSER => m_axi_pyr_WUSER,
        ARVALID => m_axi_pyr_ARVALID,
        ARREADY => m_axi_pyr_ARREADY,
        ARADDR => m_axi_pyr_ARADDR,
        ARID => m_axi_pyr_ARID,
        ARLEN => m_axi_pyr_ARLEN,
        ARSIZE => m_axi_pyr_ARSIZE,
        ARBURST => m_axi_pyr_ARBURST,
        ARLOCK => m_axi_pyr_ARLOCK,
        ARCACHE => m_axi_pyr_ARCACHE,
        ARPROT => m_axi_pyr_ARPROT,
        ARQOS => m_axi_pyr_ARQOS,
        ARREGION => m_axi_pyr_ARREGION,
        ARUSER => m_axi_pyr_ARUSER,
        RVALID => m_axi_pyr_RVALID,
        RREADY => m_axi_pyr_RREADY,
        RDATA => m_axi_pyr_RDATA,
        RLAST => m_axi_pyr_RLAST,
        RID => m_axi_pyr_RID,
        RUSER => m_axi_pyr_RUSER,
        RRESP => m_axi_pyr_RRESP,
        BVALID => m_axi_pyr_BVALID,
        BREADY => m_axi_pyr_BREADY,
        BRESP => m_axi_pyr_BRESP,
        BID => m_axi_pyr_BID,
        BUSER => m_axi_pyr_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => pyr_ARVALID,
        I_ARREADY => pyr_ARREADY,
        I_ARADDR => pyr_addr_reg_9910,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_73AA0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => pyr_RVALID,
        I_RREADY => pyr_RREADY,
        I_RDATA => pyr_RDATA,
        I_RID => pyr_RID,
        I_RUSER => pyr_RUSER,
        I_RRESP => pyr_RRESP,
        I_RLAST => pyr_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => pyr_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => pyr_WREADY,
        I_WDATA => ap_const_lv8_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_0,
        I_BVALID => pyr_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => pyr_BRESP,
        I_BID => pyr_BID,
        I_BUSER => pyr_BUSER);

    batch_align2D_patches_m_axi_U : component batch_align2D_patches_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 8,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_PATCHES_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_PATCHES_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_PATCHES_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_PATCHES_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_PATCHES_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_PATCHES_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_PATCHES_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_PATCHES_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_PATCHES_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_PATCHES_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_PATCHES_CACHE_VALUE)
    port map (
        AWVALID => m_axi_patches_AWVALID,
        AWREADY => m_axi_patches_AWREADY,
        AWADDR => m_axi_patches_AWADDR,
        AWID => m_axi_patches_AWID,
        AWLEN => m_axi_patches_AWLEN,
        AWSIZE => m_axi_patches_AWSIZE,
        AWBURST => m_axi_patches_AWBURST,
        AWLOCK => m_axi_patches_AWLOCK,
        AWCACHE => m_axi_patches_AWCACHE,
        AWPROT => m_axi_patches_AWPROT,
        AWQOS => m_axi_patches_AWQOS,
        AWREGION => m_axi_patches_AWREGION,
        AWUSER => m_axi_patches_AWUSER,
        WVALID => m_axi_patches_WVALID,
        WREADY => m_axi_patches_WREADY,
        WDATA => m_axi_patches_WDATA,
        WSTRB => m_axi_patches_WSTRB,
        WLAST => m_axi_patches_WLAST,
        WID => m_axi_patches_WID,
        WUSER => m_axi_patches_WUSER,
        ARVALID => m_axi_patches_ARVALID,
        ARREADY => m_axi_patches_ARREADY,
        ARADDR => m_axi_patches_ARADDR,
        ARID => m_axi_patches_ARID,
        ARLEN => m_axi_patches_ARLEN,
        ARSIZE => m_axi_patches_ARSIZE,
        ARBURST => m_axi_patches_ARBURST,
        ARLOCK => m_axi_patches_ARLOCK,
        ARCACHE => m_axi_patches_ARCACHE,
        ARPROT => m_axi_patches_ARPROT,
        ARQOS => m_axi_patches_ARQOS,
        ARREGION => m_axi_patches_ARREGION,
        ARUSER => m_axi_patches_ARUSER,
        RVALID => m_axi_patches_RVALID,
        RREADY => m_axi_patches_RREADY,
        RDATA => m_axi_patches_RDATA,
        RLAST => m_axi_patches_RLAST,
        RID => m_axi_patches_RID,
        RUSER => m_axi_patches_RUSER,
        RRESP => m_axi_patches_RRESP,
        BVALID => m_axi_patches_BVALID,
        BREADY => m_axi_patches_BREADY,
        BRESP => m_axi_patches_BRESP,
        BID => m_axi_patches_BID,
        BUSER => m_axi_patches_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => patches_ARVALID,
        I_ARREADY => patches_ARREADY,
        I_ARADDR => patches_addr_reg_9904,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_190,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => patches_RVALID,
        I_RREADY => patches_RREADY,
        I_RDATA => patches_RDATA,
        I_RID => patches_RID,
        I_RUSER => patches_RUSER,
        I_RRESP => patches_RRESP,
        I_RLAST => patches_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => patches_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => patches_WREADY,
        I_WDATA => ap_const_lv8_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_0,
        I_BVALID => patches_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => patches_BRESP,
        I_BID => patches_BID,
        I_BUSER => patches_BUSER);

    batch_align2D_pos_r_m_axi_U : component batch_align2D_pos_r_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_POS_R_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_POS_R_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_POS_R_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_POS_R_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_POS_R_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_POS_R_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_POS_R_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_POS_R_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_POS_R_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_POS_R_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_POS_R_CACHE_VALUE)
    port map (
        AWVALID => m_axi_pos_r_AWVALID,
        AWREADY => m_axi_pos_r_AWREADY,
        AWADDR => m_axi_pos_r_AWADDR,
        AWID => m_axi_pos_r_AWID,
        AWLEN => m_axi_pos_r_AWLEN,
        AWSIZE => m_axi_pos_r_AWSIZE,
        AWBURST => m_axi_pos_r_AWBURST,
        AWLOCK => m_axi_pos_r_AWLOCK,
        AWCACHE => m_axi_pos_r_AWCACHE,
        AWPROT => m_axi_pos_r_AWPROT,
        AWQOS => m_axi_pos_r_AWQOS,
        AWREGION => m_axi_pos_r_AWREGION,
        AWUSER => m_axi_pos_r_AWUSER,
        WVALID => m_axi_pos_r_WVALID,
        WREADY => m_axi_pos_r_WREADY,
        WDATA => m_axi_pos_r_WDATA,
        WSTRB => m_axi_pos_r_WSTRB,
        WLAST => m_axi_pos_r_WLAST,
        WID => m_axi_pos_r_WID,
        WUSER => m_axi_pos_r_WUSER,
        ARVALID => m_axi_pos_r_ARVALID,
        ARREADY => m_axi_pos_r_ARREADY,
        ARADDR => m_axi_pos_r_ARADDR,
        ARID => m_axi_pos_r_ARID,
        ARLEN => m_axi_pos_r_ARLEN,
        ARSIZE => m_axi_pos_r_ARSIZE,
        ARBURST => m_axi_pos_r_ARBURST,
        ARLOCK => m_axi_pos_r_ARLOCK,
        ARCACHE => m_axi_pos_r_ARCACHE,
        ARPROT => m_axi_pos_r_ARPROT,
        ARQOS => m_axi_pos_r_ARQOS,
        ARREGION => m_axi_pos_r_ARREGION,
        ARUSER => m_axi_pos_r_ARUSER,
        RVALID => m_axi_pos_r_RVALID,
        RREADY => m_axi_pos_r_RREADY,
        RDATA => m_axi_pos_r_RDATA,
        RLAST => m_axi_pos_r_RLAST,
        RID => m_axi_pos_r_RID,
        RUSER => m_axi_pos_r_RUSER,
        RRESP => m_axi_pos_r_RRESP,
        BVALID => m_axi_pos_r_BVALID,
        BREADY => m_axi_pos_r_BREADY,
        BRESP => m_axi_pos_r_BRESP,
        BID => m_axi_pos_r_BID,
        BUSER => m_axi_pos_r_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => pos_r_ARVALID,
        I_ARREADY => pos_r_ARREADY,
        I_ARADDR => pos_addr_reg_9896,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_8,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => pos_r_RVALID,
        I_RREADY => pos_r_RREADY,
        I_RDATA => pos_r_RDATA,
        I_RID => pos_r_RID,
        I_RUSER => pos_r_RUSER,
        I_RRESP => pos_r_RRESP,
        I_RLAST => pos_r_RLAST,
        I_AWVALID => pos_r_AWVALID,
        I_AWREADY => pos_r_AWREADY,
        I_AWADDR => pos_r_AWADDR,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => pos_r_AWLEN,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => pos_r_WVALID,
        I_WREADY => pos_r_WREADY,
        I_WDATA => pos_r_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => pos_r_BVALID,
        I_BREADY => pos_r_BREADY,
        I_BRESP => pos_r_BRESP,
        I_BID => pos_r_BID,
        I_BUSER => pos_r_BUSER);

    batch_align2D_debug_m_axi_U : component batch_align2D_debug_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_DEBUG_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_DEBUG_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_DEBUG_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_DEBUG_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_DEBUG_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_DEBUG_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_DEBUG_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_DEBUG_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_DEBUG_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_DEBUG_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_DEBUG_CACHE_VALUE)
    port map (
        AWVALID => m_axi_debug_AWVALID,
        AWREADY => m_axi_debug_AWREADY,
        AWADDR => m_axi_debug_AWADDR,
        AWID => m_axi_debug_AWID,
        AWLEN => m_axi_debug_AWLEN,
        AWSIZE => m_axi_debug_AWSIZE,
        AWBURST => m_axi_debug_AWBURST,
        AWLOCK => m_axi_debug_AWLOCK,
        AWCACHE => m_axi_debug_AWCACHE,
        AWPROT => m_axi_debug_AWPROT,
        AWQOS => m_axi_debug_AWQOS,
        AWREGION => m_axi_debug_AWREGION,
        AWUSER => m_axi_debug_AWUSER,
        WVALID => m_axi_debug_WVALID,
        WREADY => m_axi_debug_WREADY,
        WDATA => m_axi_debug_WDATA,
        WSTRB => m_axi_debug_WSTRB,
        WLAST => m_axi_debug_WLAST,
        WID => m_axi_debug_WID,
        WUSER => m_axi_debug_WUSER,
        ARVALID => m_axi_debug_ARVALID,
        ARREADY => m_axi_debug_ARREADY,
        ARADDR => m_axi_debug_ARADDR,
        ARID => m_axi_debug_ARID,
        ARLEN => m_axi_debug_ARLEN,
        ARSIZE => m_axi_debug_ARSIZE,
        ARBURST => m_axi_debug_ARBURST,
        ARLOCK => m_axi_debug_ARLOCK,
        ARCACHE => m_axi_debug_ARCACHE,
        ARPROT => m_axi_debug_ARPROT,
        ARQOS => m_axi_debug_ARQOS,
        ARREGION => m_axi_debug_ARREGION,
        ARUSER => m_axi_debug_ARUSER,
        RVALID => m_axi_debug_RVALID,
        RREADY => m_axi_debug_RREADY,
        RDATA => m_axi_debug_RDATA,
        RLAST => m_axi_debug_RLAST,
        RID => m_axi_debug_RID,
        RUSER => m_axi_debug_RUSER,
        RRESP => m_axi_debug_RRESP,
        BVALID => m_axi_debug_BVALID,
        BREADY => m_axi_debug_BREADY,
        BRESP => m_axi_debug_BRESP,
        BID => m_axi_debug_BID,
        BUSER => m_axi_debug_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => debug_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => debug_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => debug_RDATA,
        I_RID => debug_RID,
        I_RUSER => debug_RUSER,
        I_RRESP => debug_RRESP,
        I_RLAST => debug_RLAST,
        I_AWVALID => debug_AWVALID,
        I_AWREADY => debug_AWREADY,
        I_AWADDR => debug_addr_reg_9883,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_24,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => debug_WVALID,
        I_WREADY => debug_WREADY,
        I_WDATA => tmp_81_reg_13089,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => debug_BVALID,
        I_BREADY => debug_BREADY,
        I_BRESP => debug_BRESP,
        I_BID => debug_BID,
        I_BUSER => debug_BUSER);

    batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1_U1 : component batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2458_p0,
        din1 => grp_fu_2458_p1,
        opcode => grp_fu_2458_opcode,
        ce => grp_fu_2458_ce,
        dout => grp_fu_2458_p2);

    batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1_U2 : component batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2466_p0,
        din1 => grp_fu_2466_p1,
        opcode => grp_fu_2466_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_2466_p2);

    batch_align2D_fsub_32ns_32ns_32_4_full_dsp_1_U3 : component batch_align2D_fsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_4089,
        din1 => reg_4110,
        ce => ap_const_logic_1,
        dout => grp_fu_2471_p2);

    batch_align2D_fsub_32ns_32ns_32_4_full_dsp_1_U4 : component batch_align2D_fsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_4133,
        din1 => reg_4011,
        ce => ap_const_logic_1,
        dout => grp_fu_2475_p2);

    batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U5 : component batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2494_p0,
        din1 => grp_fu_2494_p1,
        ce => grp_fu_2494_ce,
        dout => grp_fu_2494_p2);

    batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U6 : component batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2500_p0,
        din1 => grp_fu_2500_p1,
        ce => grp_fu_2500_ce,
        dout => grp_fu_2500_p2);

    batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U7 : component batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2506_p0,
        din1 => grp_fu_2506_p1,
        ce => grp_fu_2506_ce,
        dout => grp_fu_2506_p2);

    batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U8 : component batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2515_p0,
        din1 => grp_fu_2515_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2515_p2);

    batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U9 : component batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_4047,
        din1 => ap_const_lv32_42800000,
        ce => ap_const_logic_1,
        dout => grp_fu_2521_p2);

    batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U10 : component batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_4089,
        din1 => reg_4089,
        ce => ap_const_logic_1,
        dout => grp_fu_2526_p2);

    batch_align2D_fdiv_32ns_32ns_32_8_1_U11 : component batch_align2D_fdiv_32ns_32ns_32_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_4174,
        din1 => reg_4028,
        ce => ap_const_logic_1,
        dout => grp_fu_2545_p2);

    batch_align2D_fdiv_32ns_32ns_32_8_1_U12 : component batch_align2D_fdiv_32ns_32ns_32_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2549_p0,
        din1 => reg_4028,
        ce => ap_const_logic_1,
        dout => grp_fu_2549_p2);

    batch_align2D_fdiv_32ns_32ns_32_8_1_U13 : component batch_align2D_fdiv_32ns_32ns_32_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_4055,
        din1 => reg_4028,
        ce => ap_const_logic_1,
        dout => grp_fu_2553_p2);

    batch_align2D_fdiv_32ns_32ns_32_8_1_U14 : component batch_align2D_fdiv_32ns_32ns_32_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_4080,
        din1 => reg_4028,
        ce => ap_const_logic_1,
        dout => grp_fu_2557_p2);

    batch_align2D_fdiv_32ns_32ns_32_8_1_U15 : component batch_align2D_fdiv_32ns_32ns_32_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2561_p0,
        din1 => reg_4028,
        ce => ap_const_logic_1,
        dout => grp_fu_2561_p2);

    batch_align2D_fdiv_32ns_32ns_32_8_1_U16 : component batch_align2D_fdiv_32ns_32ns_32_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => reg_4169,
        din1 => reg_4028,
        ce => ap_const_logic_1,
        dout => grp_fu_2565_p2);

    batch_align2D_sitofp_32s_32_3_1_U17 : component batch_align2D_sitofp_32s_32_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2569_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_2569_p1);

    batch_align2D_mux_1287_8_1_1_U18 : component batch_align2D_mux_1287_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_701_reg_9980,
        din1 => ref_patch_with_borde_701_reg_9980,
        din2 => ref_patch_with_borde_701_reg_9980,
        din3 => ref_patch_with_borde_701_reg_9980,
        din4 => ref_patch_with_borde_701_reg_9980,
        din5 => ref_patch_with_borde_701_reg_9980,
        din6 => ref_patch_with_borde_701_reg_9980,
        din7 => ref_patch_with_borde_701_reg_9980,
        din8 => ref_patch_with_borde_701_reg_9980,
        din9 => ref_patch_with_borde_701_reg_9980,
        din10 => ref_patch_with_borde_778_reg_10600,
        din11 => ref_patch_with_borde_779_reg_10605,
        din12 => ref_patch_with_borde_780_reg_10610,
        din13 => ref_patch_with_borde_781_reg_10616,
        din14 => ref_patch_with_borde_782_reg_10622,
        din15 => ref_patch_with_borde_783_reg_10628,
        din16 => ref_patch_with_borde_784_reg_10634,
        din17 => ref_patch_with_borde_785_reg_10640,
        din18 => ref_patch_with_borde_786_reg_10646,
        din19 => ref_patch_with_borde_787_reg_10652,
        din20 => ref_patch_with_borde_788_reg_10658,
        din21 => ref_patch_with_borde_703_reg_10092,
        din22 => ref_patch_with_borde_704_reg_10099,
        din23 => ref_patch_with_borde_705_reg_10106,
        din24 => ref_patch_with_borde_706_reg_10113,
        din25 => ref_patch_with_borde_707_reg_10120,
        din26 => ref_patch_with_borde_708_reg_10127,
        din27 => ref_patch_with_borde_709_reg_10134,
        din28 => ref_patch_with_borde_710_reg_10141,
        din29 => ref_patch_with_borde_711_reg_10148,
        din30 => ref_patch_with_borde_712_reg_10155,
        din31 => ref_patch_with_borde_713_reg_10162,
        din32 => ref_patch_with_borde_714_reg_10169,
        din33 => ref_patch_with_borde_715_reg_10176,
        din34 => ref_patch_with_borde_716_reg_10183,
        din35 => ref_patch_with_borde_717_reg_10190,
        din36 => ref_patch_with_borde_718_reg_10197,
        din37 => ref_patch_with_borde_719_reg_10204,
        din38 => ref_patch_with_borde_720_reg_10211,
        din39 => ref_patch_with_borde_721_reg_10218,
        din40 => ref_patch_with_borde_722_reg_10225,
        din41 => ref_patch_with_borde_723_reg_10232,
        din42 => ref_patch_with_borde_724_reg_10239,
        din43 => ref_patch_with_borde_725_reg_10246,
        din44 => ref_patch_with_borde_726_reg_10253,
        din45 => ref_patch_with_borde_727_reg_10260,
        din46 => ref_patch_with_borde_728_reg_10267,
        din47 => ref_patch_with_borde_729_reg_10274,
        din48 => ref_patch_with_borde_730_reg_10281,
        din49 => ref_patch_with_borde_731_reg_10288,
        din50 => ref_patch_with_borde_732_reg_10295,
        din51 => ref_patch_with_borde_733_reg_10302,
        din52 => ref_patch_with_borde_734_reg_10309,
        din53 => ref_patch_with_borde_735_reg_10316,
        din54 => ref_patch_with_borde_736_reg_10323,
        din55 => ref_patch_with_borde_737_reg_10330,
        din56 => ref_patch_with_borde_738_reg_10337,
        din57 => ref_patch_with_borde_739_reg_10344,
        din58 => ref_patch_with_borde_740_reg_10351,
        din59 => ref_patch_with_borde_741_reg_10358,
        din60 => ref_patch_with_borde_742_reg_10365,
        din61 => ref_patch_with_borde_743_reg_10372,
        din62 => ref_patch_with_borde_744_reg_10379,
        din63 => ref_patch_with_borde_745_reg_10386,
        din64 => ref_patch_with_borde_746_reg_10393,
        din65 => ref_patch_with_borde_747_reg_10400,
        din66 => ref_patch_with_borde_748_reg_10407,
        din67 => ref_patch_with_borde_749_reg_10414,
        din68 => ref_patch_with_borde_750_reg_10421,
        din69 => ref_patch_with_borde_751_reg_10428,
        din70 => ref_patch_with_borde_752_reg_10435,
        din71 => ref_patch_with_borde_753_reg_10442,
        din72 => ref_patch_with_borde_754_reg_10449,
        din73 => ref_patch_with_borde_755_reg_10456,
        din74 => ref_patch_with_borde_756_reg_10463,
        din75 => ref_patch_with_borde_757_reg_10470,
        din76 => ref_patch_with_borde_758_reg_10477,
        din77 => ref_patch_with_borde_759_reg_10484,
        din78 => ref_patch_with_borde_760_reg_10491,
        din79 => ref_patch_with_borde_761_reg_10498,
        din80 => ref_patch_with_borde_762_reg_10505,
        din81 => ref_patch_with_borde_763_reg_10512,
        din82 => ref_patch_with_borde_764_reg_10519,
        din83 => ref_patch_with_borde_765_reg_10526,
        din84 => ref_patch_with_borde_766_reg_10533,
        din85 => ref_patch_with_borde_767_reg_10540,
        din86 => ref_patch_with_borde_768_reg_10547,
        din87 => ref_patch_with_borde_701_reg_9980,
        din88 => ref_patch_with_borde_701_reg_9980,
        din89 => ref_patch_with_borde_701_reg_9980,
        din90 => ref_patch_with_borde_701_reg_9980,
        din91 => ref_patch_with_borde_701_reg_9980,
        din92 => ref_patch_with_borde_701_reg_9980,
        din93 => ref_patch_with_borde_701_reg_9980,
        din94 => ref_patch_with_borde_701_reg_9980,
        din95 => ref_patch_with_borde_701_reg_9980,
        din96 => ref_patch_with_borde_701_reg_9980,
        din97 => ref_patch_with_borde_701_reg_9980,
        din98 => ref_patch_with_borde_701_reg_9980,
        din99 => ref_patch_with_borde_701_reg_9980,
        din100 => ref_patch_with_borde_701_reg_9980,
        din101 => ref_patch_with_borde_701_reg_9980,
        din102 => ref_patch_with_borde_701_reg_9980,
        din103 => ref_patch_with_borde_701_reg_9980,
        din104 => ref_patch_with_borde_701_reg_9980,
        din105 => ref_patch_with_borde_701_reg_9980,
        din106 => ref_patch_with_borde_701_reg_9980,
        din107 => ref_patch_with_borde_701_reg_9980,
        din108 => ref_patch_with_borde_701_reg_9980,
        din109 => ref_patch_with_borde_701_reg_9980,
        din110 => ref_patch_with_borde_701_reg_9980,
        din111 => ref_patch_with_borde_701_reg_9980,
        din112 => ref_patch_with_borde_701_reg_9980,
        din113 => ref_patch_with_borde_701_reg_9980,
        din114 => ref_patch_with_borde_701_reg_9980,
        din115 => ref_patch_with_borde_701_reg_9980,
        din116 => ref_patch_with_borde_701_reg_9980,
        din117 => ref_patch_with_borde_701_reg_9980,
        din118 => ref_patch_with_borde_701_reg_9980,
        din119 => ref_patch_with_borde_701_reg_9980,
        din120 => ref_patch_with_borde_701_reg_9980,
        din121 => ref_patch_with_borde_701_reg_9980,
        din122 => ref_patch_with_borde_701_reg_9980,
        din123 => ref_patch_with_borde_701_reg_9980,
        din124 => ref_patch_with_borde_701_reg_9980,
        din125 => ref_patch_with_borde_701_reg_9980,
        din126 => ref_patch_with_borde_701_reg_9980,
        din127 => ref_patch_with_borde_701_reg_9980,
        din128 => ref_patch_with_borde_879_fu_6878_p129,
        dout => ref_patch_with_borde_879_fu_6878_p130);

    batch_align2D_mux_1287_8_1_1_U19 : component batch_align2D_mux_1287_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_702_reg_10037,
        din1 => ref_patch_with_borde_702_reg_10037,
        din2 => ref_patch_with_borde_702_reg_10037,
        din3 => ref_patch_with_borde_702_reg_10037,
        din4 => ref_patch_with_borde_702_reg_10037,
        din5 => ref_patch_with_borde_702_reg_10037,
        din6 => ref_patch_with_borde_702_reg_10037,
        din7 => ref_patch_with_borde_702_reg_10037,
        din8 => ref_patch_with_borde_702_reg_10037,
        din9 => ref_patch_with_borde_702_reg_10037,
        din10 => ref_patch_with_borde_702_reg_10037,
        din11 => ref_patch_with_borde_702_reg_10037,
        din12 => ref_patch_with_borde_702_reg_10037,
        din13 => ref_patch_with_borde_702_reg_10037,
        din14 => ref_patch_with_borde_702_reg_10037,
        din15 => ref_patch_with_borde_702_reg_10037,
        din16 => ref_patch_with_borde_702_reg_10037,
        din17 => ref_patch_with_borde_702_reg_10037,
        din18 => ref_patch_with_borde_702_reg_10037,
        din19 => ref_patch_with_borde_702_reg_10037,
        din20 => ref_patch_with_borde_702_reg_10037,
        din21 => ref_patch_with_borde_703_reg_10092,
        din22 => ref_patch_with_borde_704_reg_10099,
        din23 => ref_patch_with_borde_705_reg_10106,
        din24 => ref_patch_with_borde_706_reg_10113,
        din25 => ref_patch_with_borde_707_reg_10120,
        din26 => ref_patch_with_borde_708_reg_10127,
        din27 => ref_patch_with_borde_709_reg_10134,
        din28 => ref_patch_with_borde_710_reg_10141,
        din29 => ref_patch_with_borde_711_reg_10148,
        din30 => ref_patch_with_borde_712_reg_10155,
        din31 => ref_patch_with_borde_713_reg_10162,
        din32 => ref_patch_with_borde_714_reg_10169,
        din33 => ref_patch_with_borde_715_reg_10176,
        din34 => ref_patch_with_borde_716_reg_10183,
        din35 => ref_patch_with_borde_717_reg_10190,
        din36 => ref_patch_with_borde_718_reg_10197,
        din37 => ref_patch_with_borde_719_reg_10204,
        din38 => ref_patch_with_borde_720_reg_10211,
        din39 => ref_patch_with_borde_721_reg_10218,
        din40 => ref_patch_with_borde_722_reg_10225,
        din41 => ref_patch_with_borde_723_reg_10232,
        din42 => ref_patch_with_borde_724_reg_10239,
        din43 => ref_patch_with_borde_725_reg_10246,
        din44 => ref_patch_with_borde_726_reg_10253,
        din45 => ref_patch_with_borde_727_reg_10260,
        din46 => ref_patch_with_borde_728_reg_10267,
        din47 => ref_patch_with_borde_729_reg_10274,
        din48 => ref_patch_with_borde_730_reg_10281,
        din49 => ref_patch_with_borde_731_reg_10288,
        din50 => ref_patch_with_borde_732_reg_10295,
        din51 => ref_patch_with_borde_733_reg_10302,
        din52 => ref_patch_with_borde_734_reg_10309,
        din53 => ref_patch_with_borde_735_reg_10316,
        din54 => ref_patch_with_borde_736_reg_10323,
        din55 => ref_patch_with_borde_737_reg_10330,
        din56 => ref_patch_with_borde_738_reg_10337,
        din57 => ref_patch_with_borde_739_reg_10344,
        din58 => ref_patch_with_borde_740_reg_10351,
        din59 => ref_patch_with_borde_741_reg_10358,
        din60 => ref_patch_with_borde_742_reg_10365,
        din61 => ref_patch_with_borde_743_reg_10372,
        din62 => ref_patch_with_borde_744_reg_10379,
        din63 => ref_patch_with_borde_745_reg_10386,
        din64 => ref_patch_with_borde_746_reg_10393,
        din65 => ref_patch_with_borde_747_reg_10400,
        din66 => ref_patch_with_borde_748_reg_10407,
        din67 => ref_patch_with_borde_749_reg_10414,
        din68 => ref_patch_with_borde_750_reg_10421,
        din69 => ref_patch_with_borde_751_reg_10428,
        din70 => ref_patch_with_borde_752_reg_10435,
        din71 => ref_patch_with_borde_753_reg_10442,
        din72 => ref_patch_with_borde_754_reg_10449,
        din73 => ref_patch_with_borde_755_reg_10456,
        din74 => ref_patch_with_borde_756_reg_10463,
        din75 => ref_patch_with_borde_757_reg_10470,
        din76 => ref_patch_with_borde_758_reg_10477,
        din77 => ref_patch_with_borde_759_reg_10484,
        din78 => ref_patch_with_borde_760_reg_10491,
        din79 => ref_patch_with_borde_761_reg_10498,
        din80 => ref_patch_with_borde_762_reg_10505,
        din81 => ref_patch_with_borde_763_reg_10512,
        din82 => ref_patch_with_borde_764_reg_10519,
        din83 => ref_patch_with_borde_765_reg_10526,
        din84 => ref_patch_with_borde_766_reg_10533,
        din85 => ref_patch_with_borde_767_reg_10540,
        din86 => ref_patch_with_borde_768_reg_10547,
        din87 => ref_patch_with_borde_701_reg_9980,
        din88 => ref_patch_with_borde_769_reg_10554,
        din89 => ref_patch_with_borde_700_reg_9974,
        din90 => ref_patch_with_borde_770_reg_10560,
        din91 => ref_patch_with_borde_771_reg_10565,
        din92 => ref_patch_with_borde_772_reg_10570,
        din93 => ref_patch_with_borde_773_reg_10575,
        din94 => ref_patch_with_borde_774_reg_10580,
        din95 => ref_patch_with_borde_775_reg_10585,
        din96 => ref_patch_with_borde_776_reg_10590,
        din97 => ref_patch_with_borde_777_reg_10595,
        din98 => ref_patch_with_borde_702_reg_10037,
        din99 => ref_patch_with_borde_702_reg_10037,
        din100 => ref_patch_with_borde_702_reg_10037,
        din101 => ref_patch_with_borde_702_reg_10037,
        din102 => ref_patch_with_borde_702_reg_10037,
        din103 => ref_patch_with_borde_702_reg_10037,
        din104 => ref_patch_with_borde_702_reg_10037,
        din105 => ref_patch_with_borde_702_reg_10037,
        din106 => ref_patch_with_borde_702_reg_10037,
        din107 => ref_patch_with_borde_702_reg_10037,
        din108 => ref_patch_with_borde_702_reg_10037,
        din109 => ref_patch_with_borde_702_reg_10037,
        din110 => ref_patch_with_borde_702_reg_10037,
        din111 => ref_patch_with_borde_702_reg_10037,
        din112 => ref_patch_with_borde_702_reg_10037,
        din113 => ref_patch_with_borde_702_reg_10037,
        din114 => ref_patch_with_borde_702_reg_10037,
        din115 => ref_patch_with_borde_702_reg_10037,
        din116 => ref_patch_with_borde_702_reg_10037,
        din117 => ref_patch_with_borde_702_reg_10037,
        din118 => ref_patch_with_borde_702_reg_10037,
        din119 => ref_patch_with_borde_702_reg_10037,
        din120 => ref_patch_with_borde_702_reg_10037,
        din121 => ref_patch_with_borde_702_reg_10037,
        din122 => ref_patch_with_borde_702_reg_10037,
        din123 => ref_patch_with_borde_702_reg_10037,
        din124 => ref_patch_with_borde_702_reg_10037,
        din125 => ref_patch_with_borde_702_reg_10037,
        din126 => ref_patch_with_borde_702_reg_10037,
        din127 => ref_patch_with_borde_702_reg_10037,
        din128 => ref_patch_with_borde_880_fu_7028_p129,
        dout => ref_patch_with_borde_880_fu_7028_p130);

    batch_align2D_mux_1007_8_1_1_U20 : component batch_align2D_mux_1007_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_399,
        din1 => ref_patch_with_borde_400,
        din2 => ref_patch_with_borde_411,
        din3 => ref_patch_with_borde_422,
        din4 => ref_patch_with_borde_433,
        din5 => ref_patch_with_borde_444,
        din6 => ref_patch_with_borde_455,
        din7 => ref_patch_with_borde_466,
        din8 => ref_patch_with_borde_477,
        din9 => ref_patch_with_borde_488,
        din10 => ref_patch_with_borde_401,
        din11 => ref_patch_with_borde_402,
        din12 => ref_patch_with_borde_403,
        din13 => ref_patch_with_borde_404,
        din14 => ref_patch_with_borde_405,
        din15 => ref_patch_with_borde_406,
        din16 => ref_patch_with_borde_407,
        din17 => ref_patch_with_borde_408,
        din18 => ref_patch_with_borde_409,
        din19 => ref_patch_with_borde_410,
        din20 => ref_patch_with_borde_412,
        din21 => ref_patch_with_borde_413,
        din22 => ref_patch_with_borde_414,
        din23 => ref_patch_with_borde_415,
        din24 => ref_patch_with_borde_416,
        din25 => ref_patch_with_borde_417,
        din26 => ref_patch_with_borde_418,
        din27 => ref_patch_with_borde_419,
        din28 => ref_patch_with_borde_420,
        din29 => ref_patch_with_borde_421,
        din30 => ref_patch_with_borde_423,
        din31 => ref_patch_with_borde_424,
        din32 => ref_patch_with_borde_425,
        din33 => ref_patch_with_borde_426,
        din34 => ref_patch_with_borde_427,
        din35 => ref_patch_with_borde_428,
        din36 => ref_patch_with_borde_429,
        din37 => ref_patch_with_borde_430,
        din38 => ref_patch_with_borde_431,
        din39 => ref_patch_with_borde_432,
        din40 => ref_patch_with_borde_434,
        din41 => ref_patch_with_borde_435,
        din42 => ref_patch_with_borde_436,
        din43 => ref_patch_with_borde_437,
        din44 => ref_patch_with_borde_438,
        din45 => ref_patch_with_borde_439,
        din46 => ref_patch_with_borde_440,
        din47 => ref_patch_with_borde_441,
        din48 => ref_patch_with_borde_442,
        din49 => ref_patch_with_borde_443,
        din50 => ref_patch_with_borde_445,
        din51 => ref_patch_with_borde_446,
        din52 => ref_patch_with_borde_447,
        din53 => ref_patch_with_borde_448,
        din54 => ref_patch_with_borde_449,
        din55 => ref_patch_with_borde_450,
        din56 => ref_patch_with_borde_451,
        din57 => ref_patch_with_borde_452,
        din58 => ref_patch_with_borde_453,
        din59 => ref_patch_with_borde_454,
        din60 => ref_patch_with_borde_456,
        din61 => ref_patch_with_borde_457,
        din62 => ref_patch_with_borde_458,
        din63 => ref_patch_with_borde_459,
        din64 => ref_patch_with_borde_460,
        din65 => ref_patch_with_borde_461,
        din66 => ref_patch_with_borde_462,
        din67 => ref_patch_with_borde_463,
        din68 => ref_patch_with_borde_464,
        din69 => ref_patch_with_borde_465,
        din70 => ref_patch_with_borde_467,
        din71 => ref_patch_with_borde_468,
        din72 => ref_patch_with_borde_469,
        din73 => ref_patch_with_borde_470,
        din74 => ref_patch_with_borde_471,
        din75 => ref_patch_with_borde_472,
        din76 => ref_patch_with_borde_473,
        din77 => ref_patch_with_borde_474,
        din78 => ref_patch_with_borde_475,
        din79 => ref_patch_with_borde_476,
        din80 => ref_patch_with_borde_478,
        din81 => ref_patch_with_borde_479,
        din82 => ref_patch_with_borde_480,
        din83 => ref_patch_with_borde_481,
        din84 => ref_patch_with_borde_482,
        din85 => ref_patch_with_borde_483,
        din86 => ref_patch_with_borde_484,
        din87 => ref_patch_with_borde_485,
        din88 => ref_patch_with_borde_486,
        din89 => ref_patch_with_borde_487,
        din90 => ref_patch_with_borde_489,
        din91 => ref_patch_with_borde_490,
        din92 => ref_patch_with_borde_491,
        din93 => ref_patch_with_borde_492,
        din94 => ref_patch_with_borde_493,
        din95 => ref_patch_with_borde_494,
        din96 => ref_patch_with_borde_495,
        din97 => ref_patch_with_borde_496,
        din98 => ref_patch_with_borde_497,
        din99 => ref_patch_with_borde_498,
        din100 => tmp_57_fu_7222_p101,
        dout => tmp_57_fu_7222_p102);

    batch_align2D_mux_1287_8_1_1_U21 : component batch_align2D_mux_1287_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_790_reg_10752,
        din1 => ref_patch_with_borde_790_reg_10752,
        din2 => ref_patch_with_borde_790_reg_10752,
        din3 => ref_patch_with_borde_790_reg_10752,
        din4 => ref_patch_with_borde_790_reg_10752,
        din5 => ref_patch_with_borde_790_reg_10752,
        din6 => ref_patch_with_borde_790_reg_10752,
        din7 => ref_patch_with_borde_790_reg_10752,
        din8 => ref_patch_with_borde_790_reg_10752,
        din9 => ref_patch_with_borde_790_reg_10752,
        din10 => ref_patch_with_borde_867_reg_11372,
        din11 => ref_patch_with_borde_868_reg_11377,
        din12 => ref_patch_with_borde_869_reg_11382,
        din13 => ref_patch_with_borde_870_reg_11388,
        din14 => ref_patch_with_borde_871_reg_11394,
        din15 => ref_patch_with_borde_872_reg_11400,
        din16 => ref_patch_with_borde_873_reg_11406,
        din17 => ref_patch_with_borde_874_reg_11412,
        din18 => ref_patch_with_borde_875_reg_11418,
        din19 => ref_patch_with_borde_876_reg_11424,
        din20 => ref_patch_with_borde_877_reg_11430,
        din21 => ref_patch_with_borde_792_reg_10864,
        din22 => ref_patch_with_borde_793_reg_10871,
        din23 => ref_patch_with_borde_794_reg_10878,
        din24 => ref_patch_with_borde_795_reg_10885,
        din25 => ref_patch_with_borde_796_reg_10892,
        din26 => ref_patch_with_borde_797_reg_10899,
        din27 => ref_patch_with_borde_798_reg_10906,
        din28 => ref_patch_with_borde_799_reg_10913,
        din29 => ref_patch_with_borde_800_reg_10920,
        din30 => ref_patch_with_borde_801_reg_10927,
        din31 => ref_patch_with_borde_802_reg_10934,
        din32 => ref_patch_with_borde_803_reg_10941,
        din33 => ref_patch_with_borde_804_reg_10948,
        din34 => ref_patch_with_borde_805_reg_10955,
        din35 => ref_patch_with_borde_806_reg_10962,
        din36 => ref_patch_with_borde_807_reg_10969,
        din37 => ref_patch_with_borde_808_reg_10976,
        din38 => ref_patch_with_borde_809_reg_10983,
        din39 => ref_patch_with_borde_810_reg_10990,
        din40 => ref_patch_with_borde_811_reg_10997,
        din41 => ref_patch_with_borde_812_reg_11004,
        din42 => ref_patch_with_borde_813_reg_11011,
        din43 => ref_patch_with_borde_814_reg_11018,
        din44 => ref_patch_with_borde_815_reg_11025,
        din45 => ref_patch_with_borde_816_reg_11032,
        din46 => ref_patch_with_borde_817_reg_11039,
        din47 => ref_patch_with_borde_818_reg_11046,
        din48 => ref_patch_with_borde_819_reg_11053,
        din49 => ref_patch_with_borde_820_reg_11060,
        din50 => ref_patch_with_borde_821_reg_11067,
        din51 => ref_patch_with_borde_822_reg_11074,
        din52 => ref_patch_with_borde_823_reg_11081,
        din53 => ref_patch_with_borde_824_reg_11088,
        din54 => ref_patch_with_borde_825_reg_11095,
        din55 => ref_patch_with_borde_826_reg_11102,
        din56 => ref_patch_with_borde_827_reg_11109,
        din57 => ref_patch_with_borde_828_reg_11116,
        din58 => ref_patch_with_borde_829_reg_11123,
        din59 => ref_patch_with_borde_830_reg_11130,
        din60 => ref_patch_with_borde_831_reg_11137,
        din61 => ref_patch_with_borde_832_reg_11144,
        din62 => ref_patch_with_borde_833_reg_11151,
        din63 => ref_patch_with_borde_834_reg_11158,
        din64 => ref_patch_with_borde_835_reg_11165,
        din65 => ref_patch_with_borde_836_reg_11172,
        din66 => ref_patch_with_borde_837_reg_11179,
        din67 => ref_patch_with_borde_838_reg_11186,
        din68 => ref_patch_with_borde_839_reg_11193,
        din69 => ref_patch_with_borde_840_reg_11200,
        din70 => ref_patch_with_borde_841_reg_11207,
        din71 => ref_patch_with_borde_842_reg_11214,
        din72 => ref_patch_with_borde_843_reg_11221,
        din73 => ref_patch_with_borde_844_reg_11228,
        din74 => ref_patch_with_borde_845_reg_11235,
        din75 => ref_patch_with_borde_846_reg_11242,
        din76 => ref_patch_with_borde_847_reg_11249,
        din77 => ref_patch_with_borde_848_reg_11256,
        din78 => ref_patch_with_borde_849_reg_11263,
        din79 => ref_patch_with_borde_850_reg_11270,
        din80 => ref_patch_with_borde_851_reg_11277,
        din81 => ref_patch_with_borde_852_reg_11284,
        din82 => ref_patch_with_borde_853_reg_11291,
        din83 => ref_patch_with_borde_854_reg_11298,
        din84 => ref_patch_with_borde_855_reg_11305,
        din85 => ref_patch_with_borde_856_reg_11312,
        din86 => ref_patch_with_borde_857_reg_11319,
        din87 => ref_patch_with_borde_790_reg_10752,
        din88 => ref_patch_with_borde_790_reg_10752,
        din89 => ref_patch_with_borde_790_reg_10752,
        din90 => ref_patch_with_borde_790_reg_10752,
        din91 => ref_patch_with_borde_790_reg_10752,
        din92 => ref_patch_with_borde_790_reg_10752,
        din93 => ref_patch_with_borde_790_reg_10752,
        din94 => ref_patch_with_borde_790_reg_10752,
        din95 => ref_patch_with_borde_790_reg_10752,
        din96 => ref_patch_with_borde_790_reg_10752,
        din97 => ref_patch_with_borde_790_reg_10752,
        din98 => ref_patch_with_borde_790_reg_10752,
        din99 => ref_patch_with_borde_790_reg_10752,
        din100 => ref_patch_with_borde_790_reg_10752,
        din101 => ref_patch_with_borde_790_reg_10752,
        din102 => ref_patch_with_borde_790_reg_10752,
        din103 => ref_patch_with_borde_790_reg_10752,
        din104 => ref_patch_with_borde_790_reg_10752,
        din105 => ref_patch_with_borde_790_reg_10752,
        din106 => ref_patch_with_borde_790_reg_10752,
        din107 => ref_patch_with_borde_790_reg_10752,
        din108 => ref_patch_with_borde_790_reg_10752,
        din109 => ref_patch_with_borde_790_reg_10752,
        din110 => ref_patch_with_borde_790_reg_10752,
        din111 => ref_patch_with_borde_790_reg_10752,
        din112 => ref_patch_with_borde_790_reg_10752,
        din113 => ref_patch_with_borde_790_reg_10752,
        din114 => ref_patch_with_borde_790_reg_10752,
        din115 => ref_patch_with_borde_790_reg_10752,
        din116 => ref_patch_with_borde_790_reg_10752,
        din117 => ref_patch_with_borde_790_reg_10752,
        din118 => ref_patch_with_borde_790_reg_10752,
        din119 => ref_patch_with_borde_790_reg_10752,
        din120 => ref_patch_with_borde_790_reg_10752,
        din121 => ref_patch_with_borde_790_reg_10752,
        din122 => ref_patch_with_borde_790_reg_10752,
        din123 => ref_patch_with_borde_790_reg_10752,
        din124 => ref_patch_with_borde_790_reg_10752,
        din125 => ref_patch_with_borde_790_reg_10752,
        din126 => ref_patch_with_borde_790_reg_10752,
        din127 => ref_patch_with_borde_790_reg_10752,
        din128 => ref_patch_with_borde_1071_fu_7591_p129,
        dout => ref_patch_with_borde_1071_fu_7591_p130);

    batch_align2D_mux_1287_8_1_1_U22 : component batch_align2D_mux_1287_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_791_reg_10809,
        din1 => ref_patch_with_borde_791_reg_10809,
        din2 => ref_patch_with_borde_791_reg_10809,
        din3 => ref_patch_with_borde_791_reg_10809,
        din4 => ref_patch_with_borde_791_reg_10809,
        din5 => ref_patch_with_borde_791_reg_10809,
        din6 => ref_patch_with_borde_791_reg_10809,
        din7 => ref_patch_with_borde_791_reg_10809,
        din8 => ref_patch_with_borde_791_reg_10809,
        din9 => ref_patch_with_borde_791_reg_10809,
        din10 => ref_patch_with_borde_791_reg_10809,
        din11 => ref_patch_with_borde_791_reg_10809,
        din12 => ref_patch_with_borde_791_reg_10809,
        din13 => ref_patch_with_borde_791_reg_10809,
        din14 => ref_patch_with_borde_791_reg_10809,
        din15 => ref_patch_with_borde_791_reg_10809,
        din16 => ref_patch_with_borde_791_reg_10809,
        din17 => ref_patch_with_borde_791_reg_10809,
        din18 => ref_patch_with_borde_791_reg_10809,
        din19 => ref_patch_with_borde_791_reg_10809,
        din20 => ref_patch_with_borde_791_reg_10809,
        din21 => ref_patch_with_borde_792_reg_10864,
        din22 => ref_patch_with_borde_793_reg_10871,
        din23 => ref_patch_with_borde_794_reg_10878,
        din24 => ref_patch_with_borde_795_reg_10885,
        din25 => ref_patch_with_borde_796_reg_10892,
        din26 => ref_patch_with_borde_797_reg_10899,
        din27 => ref_patch_with_borde_798_reg_10906,
        din28 => ref_patch_with_borde_799_reg_10913,
        din29 => ref_patch_with_borde_800_reg_10920,
        din30 => ref_patch_with_borde_801_reg_10927,
        din31 => ref_patch_with_borde_802_reg_10934,
        din32 => ref_patch_with_borde_803_reg_10941,
        din33 => ref_patch_with_borde_804_reg_10948,
        din34 => ref_patch_with_borde_805_reg_10955,
        din35 => ref_patch_with_borde_806_reg_10962,
        din36 => ref_patch_with_borde_807_reg_10969,
        din37 => ref_patch_with_borde_808_reg_10976,
        din38 => ref_patch_with_borde_809_reg_10983,
        din39 => ref_patch_with_borde_810_reg_10990,
        din40 => ref_patch_with_borde_811_reg_10997,
        din41 => ref_patch_with_borde_812_reg_11004,
        din42 => ref_patch_with_borde_813_reg_11011,
        din43 => ref_patch_with_borde_814_reg_11018,
        din44 => ref_patch_with_borde_815_reg_11025,
        din45 => ref_patch_with_borde_816_reg_11032,
        din46 => ref_patch_with_borde_817_reg_11039,
        din47 => ref_patch_with_borde_818_reg_11046,
        din48 => ref_patch_with_borde_819_reg_11053,
        din49 => ref_patch_with_borde_820_reg_11060,
        din50 => ref_patch_with_borde_821_reg_11067,
        din51 => ref_patch_with_borde_822_reg_11074,
        din52 => ref_patch_with_borde_823_reg_11081,
        din53 => ref_patch_with_borde_824_reg_11088,
        din54 => ref_patch_with_borde_825_reg_11095,
        din55 => ref_patch_with_borde_826_reg_11102,
        din56 => ref_patch_with_borde_827_reg_11109,
        din57 => ref_patch_with_borde_828_reg_11116,
        din58 => ref_patch_with_borde_829_reg_11123,
        din59 => ref_patch_with_borde_830_reg_11130,
        din60 => ref_patch_with_borde_831_reg_11137,
        din61 => ref_patch_with_borde_832_reg_11144,
        din62 => ref_patch_with_borde_833_reg_11151,
        din63 => ref_patch_with_borde_834_reg_11158,
        din64 => ref_patch_with_borde_835_reg_11165,
        din65 => ref_patch_with_borde_836_reg_11172,
        din66 => ref_patch_with_borde_837_reg_11179,
        din67 => ref_patch_with_borde_838_reg_11186,
        din68 => ref_patch_with_borde_839_reg_11193,
        din69 => ref_patch_with_borde_840_reg_11200,
        din70 => ref_patch_with_borde_841_reg_11207,
        din71 => ref_patch_with_borde_842_reg_11214,
        din72 => ref_patch_with_borde_843_reg_11221,
        din73 => ref_patch_with_borde_844_reg_11228,
        din74 => ref_patch_with_borde_845_reg_11235,
        din75 => ref_patch_with_borde_846_reg_11242,
        din76 => ref_patch_with_borde_847_reg_11249,
        din77 => ref_patch_with_borde_848_reg_11256,
        din78 => ref_patch_with_borde_849_reg_11263,
        din79 => ref_patch_with_borde_850_reg_11270,
        din80 => ref_patch_with_borde_851_reg_11277,
        din81 => ref_patch_with_borde_852_reg_11284,
        din82 => ref_patch_with_borde_853_reg_11291,
        din83 => ref_patch_with_borde_854_reg_11298,
        din84 => ref_patch_with_borde_855_reg_11305,
        din85 => ref_patch_with_borde_856_reg_11312,
        din86 => ref_patch_with_borde_857_reg_11319,
        din87 => ref_patch_with_borde_790_reg_10752,
        din88 => ref_patch_with_borde_858_reg_11326,
        din89 => ref_patch_with_borde_789_reg_10746,
        din90 => ref_patch_with_borde_859_reg_11332,
        din91 => ref_patch_with_borde_860_reg_11337,
        din92 => ref_patch_with_borde_861_reg_11342,
        din93 => ref_patch_with_borde_862_reg_11347,
        din94 => ref_patch_with_borde_863_reg_11352,
        din95 => ref_patch_with_borde_864_reg_11357,
        din96 => ref_patch_with_borde_865_reg_11362,
        din97 => ref_patch_with_borde_866_reg_11367,
        din98 => ref_patch_with_borde_791_reg_10809,
        din99 => ref_patch_with_borde_791_reg_10809,
        din100 => ref_patch_with_borde_791_reg_10809,
        din101 => ref_patch_with_borde_791_reg_10809,
        din102 => ref_patch_with_borde_791_reg_10809,
        din103 => ref_patch_with_borde_791_reg_10809,
        din104 => ref_patch_with_borde_791_reg_10809,
        din105 => ref_patch_with_borde_791_reg_10809,
        din106 => ref_patch_with_borde_791_reg_10809,
        din107 => ref_patch_with_borde_791_reg_10809,
        din108 => ref_patch_with_borde_791_reg_10809,
        din109 => ref_patch_with_borde_791_reg_10809,
        din110 => ref_patch_with_borde_791_reg_10809,
        din111 => ref_patch_with_borde_791_reg_10809,
        din112 => ref_patch_with_borde_791_reg_10809,
        din113 => ref_patch_with_borde_791_reg_10809,
        din114 => ref_patch_with_borde_791_reg_10809,
        din115 => ref_patch_with_borde_791_reg_10809,
        din116 => ref_patch_with_borde_791_reg_10809,
        din117 => ref_patch_with_borde_791_reg_10809,
        din118 => ref_patch_with_borde_791_reg_10809,
        din119 => ref_patch_with_borde_791_reg_10809,
        din120 => ref_patch_with_borde_791_reg_10809,
        din121 => ref_patch_with_borde_791_reg_10809,
        din122 => ref_patch_with_borde_791_reg_10809,
        din123 => ref_patch_with_borde_791_reg_10809,
        din124 => ref_patch_with_borde_791_reg_10809,
        din125 => ref_patch_with_borde_791_reg_10809,
        din126 => ref_patch_with_borde_791_reg_10809,
        din127 => ref_patch_with_borde_791_reg_10809,
        din128 => ref_patch_with_borde_1072_fu_7741_p129,
        dout => ref_patch_with_borde_1072_fu_7741_p130);

    batch_align2D_mux_1007_8_1_1_U23 : component batch_align2D_mux_1007_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_499,
        din1 => ref_patch_with_borde_500,
        din2 => ref_patch_with_borde_511,
        din3 => ref_patch_with_borde_522,
        din4 => ref_patch_with_borde_533,
        din5 => ref_patch_with_borde_544,
        din6 => ref_patch_with_borde_555,
        din7 => ref_patch_with_borde_566,
        din8 => ref_patch_with_borde_577,
        din9 => ref_patch_with_borde_588,
        din10 => ref_patch_with_borde_501,
        din11 => ref_patch_with_borde_502,
        din12 => ref_patch_with_borde_503,
        din13 => ref_patch_with_borde_504,
        din14 => ref_patch_with_borde_505,
        din15 => ref_patch_with_borde_506,
        din16 => ref_patch_with_borde_507,
        din17 => ref_patch_with_borde_508,
        din18 => ref_patch_with_borde_509,
        din19 => ref_patch_with_borde_510,
        din20 => ref_patch_with_borde_512,
        din21 => ref_patch_with_borde_513,
        din22 => ref_patch_with_borde_514,
        din23 => ref_patch_with_borde_515,
        din24 => ref_patch_with_borde_516,
        din25 => ref_patch_with_borde_517,
        din26 => ref_patch_with_borde_518,
        din27 => ref_patch_with_borde_519,
        din28 => ref_patch_with_borde_520,
        din29 => ref_patch_with_borde_521,
        din30 => ref_patch_with_borde_523,
        din31 => ref_patch_with_borde_524,
        din32 => ref_patch_with_borde_525,
        din33 => ref_patch_with_borde_526,
        din34 => ref_patch_with_borde_527,
        din35 => ref_patch_with_borde_528,
        din36 => ref_patch_with_borde_529,
        din37 => ref_patch_with_borde_530,
        din38 => ref_patch_with_borde_531,
        din39 => ref_patch_with_borde_532,
        din40 => ref_patch_with_borde_534,
        din41 => ref_patch_with_borde_535,
        din42 => ref_patch_with_borde_536,
        din43 => ref_patch_with_borde_537,
        din44 => ref_patch_with_borde_538,
        din45 => ref_patch_with_borde_539,
        din46 => ref_patch_with_borde_540,
        din47 => ref_patch_with_borde_541,
        din48 => ref_patch_with_borde_542,
        din49 => ref_patch_with_borde_543,
        din50 => ref_patch_with_borde_545,
        din51 => ref_patch_with_borde_546,
        din52 => ref_patch_with_borde_547,
        din53 => ref_patch_with_borde_548,
        din54 => ref_patch_with_borde_549,
        din55 => ref_patch_with_borde_550,
        din56 => ref_patch_with_borde_551,
        din57 => ref_patch_with_borde_552,
        din58 => ref_patch_with_borde_553,
        din59 => ref_patch_with_borde_554,
        din60 => ref_patch_with_borde_556,
        din61 => ref_patch_with_borde_557,
        din62 => ref_patch_with_borde_558,
        din63 => ref_patch_with_borde_559,
        din64 => ref_patch_with_borde_560,
        din65 => ref_patch_with_borde_561,
        din66 => ref_patch_with_borde_562,
        din67 => ref_patch_with_borde_563,
        din68 => ref_patch_with_borde_564,
        din69 => ref_patch_with_borde_565,
        din70 => ref_patch_with_borde_567,
        din71 => ref_patch_with_borde_568,
        din72 => ref_patch_with_borde_569,
        din73 => ref_patch_with_borde_570,
        din74 => ref_patch_with_borde_571,
        din75 => ref_patch_with_borde_572,
        din76 => ref_patch_with_borde_573,
        din77 => ref_patch_with_borde_574,
        din78 => ref_patch_with_borde_575,
        din79 => ref_patch_with_borde_576,
        din80 => ref_patch_with_borde_578,
        din81 => ref_patch_with_borde_579,
        din82 => ref_patch_with_borde_580,
        din83 => ref_patch_with_borde_581,
        din84 => ref_patch_with_borde_582,
        din85 => ref_patch_with_borde_583,
        din86 => ref_patch_with_borde_584,
        din87 => ref_patch_with_borde_585,
        din88 => ref_patch_with_borde_586,
        din89 => ref_patch_with_borde_587,
        din90 => ref_patch_with_borde_589,
        din91 => ref_patch_with_borde_590,
        din92 => ref_patch_with_borde_591,
        din93 => ref_patch_with_borde_592,
        din94 => ref_patch_with_borde_593,
        din95 => ref_patch_with_borde_594,
        din96 => ref_patch_with_borde_595,
        din97 => ref_patch_with_borde_596,
        din98 => ref_patch_with_borde_597,
        din99 => ref_patch_with_borde_598,
        din100 => tmp_74_fu_7935_p101,
        dout => tmp_74_fu_7935_p102);

    batch_align2D_mux_1287_8_1_1_U24 : component batch_align2D_mux_1287_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_982_reg_11530,
        din1 => ref_patch_with_borde_982_reg_11530,
        din2 => ref_patch_with_borde_982_reg_11530,
        din3 => ref_patch_with_borde_982_reg_11530,
        din4 => ref_patch_with_borde_982_reg_11530,
        din5 => ref_patch_with_borde_982_reg_11530,
        din6 => ref_patch_with_borde_982_reg_11530,
        din7 => ref_patch_with_borde_982_reg_11530,
        din8 => ref_patch_with_borde_982_reg_11530,
        din9 => ref_patch_with_borde_982_reg_11530,
        din10 => ref_patch_with_borde_1059_reg_12150,
        din11 => ref_patch_with_borde_1060_reg_12155,
        din12 => ref_patch_with_borde_1061_reg_12160,
        din13 => ref_patch_with_borde_1062_reg_12166,
        din14 => ref_patch_with_borde_1063_reg_12172,
        din15 => ref_patch_with_borde_1064_reg_12178,
        din16 => ref_patch_with_borde_1065_reg_12184,
        din17 => ref_patch_with_borde_1066_reg_12190,
        din18 => ref_patch_with_borde_1067_reg_12196,
        din19 => ref_patch_with_borde_1068_reg_12202,
        din20 => ref_patch_with_borde_1069_reg_12208,
        din21 => ref_patch_with_borde_984_reg_11642,
        din22 => ref_patch_with_borde_985_reg_11649,
        din23 => ref_patch_with_borde_986_reg_11656,
        din24 => ref_patch_with_borde_987_reg_11663,
        din25 => ref_patch_with_borde_988_reg_11670,
        din26 => ref_patch_with_borde_989_reg_11677,
        din27 => ref_patch_with_borde_990_reg_11684,
        din28 => ref_patch_with_borde_991_reg_11691,
        din29 => ref_patch_with_borde_992_reg_11698,
        din30 => ref_patch_with_borde_993_reg_11705,
        din31 => ref_patch_with_borde_994_reg_11712,
        din32 => ref_patch_with_borde_995_reg_11719,
        din33 => ref_patch_with_borde_996_reg_11726,
        din34 => ref_patch_with_borde_997_reg_11733,
        din35 => ref_patch_with_borde_998_reg_11740,
        din36 => ref_patch_with_borde_999_reg_11747,
        din37 => ref_patch_with_borde_1000_reg_11754,
        din38 => ref_patch_with_borde_1001_reg_11761,
        din39 => ref_patch_with_borde_1002_reg_11768,
        din40 => ref_patch_with_borde_1003_reg_11775,
        din41 => ref_patch_with_borde_1004_reg_11782,
        din42 => ref_patch_with_borde_1005_reg_11789,
        din43 => ref_patch_with_borde_1006_reg_11796,
        din44 => ref_patch_with_borde_1007_reg_11803,
        din45 => ref_patch_with_borde_1008_reg_11810,
        din46 => ref_patch_with_borde_1009_reg_11817,
        din47 => ref_patch_with_borde_1010_reg_11824,
        din48 => ref_patch_with_borde_1011_reg_11831,
        din49 => ref_patch_with_borde_1012_reg_11838,
        din50 => ref_patch_with_borde_1013_reg_11845,
        din51 => ref_patch_with_borde_1014_reg_11852,
        din52 => ref_patch_with_borde_1015_reg_11859,
        din53 => ref_patch_with_borde_1016_reg_11866,
        din54 => ref_patch_with_borde_1017_reg_11873,
        din55 => ref_patch_with_borde_1018_reg_11880,
        din56 => ref_patch_with_borde_1019_reg_11887,
        din57 => ref_patch_with_borde_1020_reg_11894,
        din58 => ref_patch_with_borde_1021_reg_11901,
        din59 => ref_patch_with_borde_1022_reg_11908,
        din60 => ref_patch_with_borde_1023_reg_11915,
        din61 => ref_patch_with_borde_1024_reg_11922,
        din62 => ref_patch_with_borde_1025_reg_11929,
        din63 => ref_patch_with_borde_1026_reg_11936,
        din64 => ref_patch_with_borde_1027_reg_11943,
        din65 => ref_patch_with_borde_1028_reg_11950,
        din66 => ref_patch_with_borde_1029_reg_11957,
        din67 => ref_patch_with_borde_1030_reg_11964,
        din68 => ref_patch_with_borde_1031_reg_11971,
        din69 => ref_patch_with_borde_1032_reg_11978,
        din70 => ref_patch_with_borde_1033_reg_11985,
        din71 => ref_patch_with_borde_1034_reg_11992,
        din72 => ref_patch_with_borde_1035_reg_11999,
        din73 => ref_patch_with_borde_1036_reg_12006,
        din74 => ref_patch_with_borde_1037_reg_12013,
        din75 => ref_patch_with_borde_1038_reg_12020,
        din76 => ref_patch_with_borde_1039_reg_12027,
        din77 => ref_patch_with_borde_1040_reg_12034,
        din78 => ref_patch_with_borde_1041_reg_12041,
        din79 => ref_patch_with_borde_1042_reg_12048,
        din80 => ref_patch_with_borde_1043_reg_12055,
        din81 => ref_patch_with_borde_1044_reg_12062,
        din82 => ref_patch_with_borde_1045_reg_12069,
        din83 => ref_patch_with_borde_1046_reg_12076,
        din84 => ref_patch_with_borde_1047_reg_12083,
        din85 => ref_patch_with_borde_1048_reg_12090,
        din86 => ref_patch_with_borde_1049_reg_12097,
        din87 => ref_patch_with_borde_982_reg_11530,
        din88 => ref_patch_with_borde_982_reg_11530,
        din89 => ref_patch_with_borde_982_reg_11530,
        din90 => ref_patch_with_borde_982_reg_11530,
        din91 => ref_patch_with_borde_982_reg_11530,
        din92 => ref_patch_with_borde_982_reg_11530,
        din93 => ref_patch_with_borde_982_reg_11530,
        din94 => ref_patch_with_borde_982_reg_11530,
        din95 => ref_patch_with_borde_982_reg_11530,
        din96 => ref_patch_with_borde_982_reg_11530,
        din97 => ref_patch_with_borde_982_reg_11530,
        din98 => ref_patch_with_borde_982_reg_11530,
        din99 => ref_patch_with_borde_982_reg_11530,
        din100 => ref_patch_with_borde_982_reg_11530,
        din101 => ref_patch_with_borde_982_reg_11530,
        din102 => ref_patch_with_borde_982_reg_11530,
        din103 => ref_patch_with_borde_982_reg_11530,
        din104 => ref_patch_with_borde_982_reg_11530,
        din105 => ref_patch_with_borde_982_reg_11530,
        din106 => ref_patch_with_borde_982_reg_11530,
        din107 => ref_patch_with_borde_982_reg_11530,
        din108 => ref_patch_with_borde_982_reg_11530,
        din109 => ref_patch_with_borde_982_reg_11530,
        din110 => ref_patch_with_borde_982_reg_11530,
        din111 => ref_patch_with_borde_982_reg_11530,
        din112 => ref_patch_with_borde_982_reg_11530,
        din113 => ref_patch_with_borde_982_reg_11530,
        din114 => ref_patch_with_borde_982_reg_11530,
        din115 => ref_patch_with_borde_982_reg_11530,
        din116 => ref_patch_with_borde_982_reg_11530,
        din117 => ref_patch_with_borde_982_reg_11530,
        din118 => ref_patch_with_borde_982_reg_11530,
        din119 => ref_patch_with_borde_982_reg_11530,
        din120 => ref_patch_with_borde_982_reg_11530,
        din121 => ref_patch_with_borde_982_reg_11530,
        din122 => ref_patch_with_borde_982_reg_11530,
        din123 => ref_patch_with_borde_982_reg_11530,
        din124 => ref_patch_with_borde_982_reg_11530,
        din125 => ref_patch_with_borde_982_reg_11530,
        din126 => ref_patch_with_borde_982_reg_11530,
        din127 => ref_patch_with_borde_982_reg_11530,
        din128 => ref_patch_with_borde_1263_fu_8319_p129,
        dout => ref_patch_with_borde_1263_fu_8319_p130);

    batch_align2D_mux_1287_8_1_1_U25 : component batch_align2D_mux_1287_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_983_reg_11587,
        din1 => ref_patch_with_borde_983_reg_11587,
        din2 => ref_patch_with_borde_983_reg_11587,
        din3 => ref_patch_with_borde_983_reg_11587,
        din4 => ref_patch_with_borde_983_reg_11587,
        din5 => ref_patch_with_borde_983_reg_11587,
        din6 => ref_patch_with_borde_983_reg_11587,
        din7 => ref_patch_with_borde_983_reg_11587,
        din8 => ref_patch_with_borde_983_reg_11587,
        din9 => ref_patch_with_borde_983_reg_11587,
        din10 => ref_patch_with_borde_983_reg_11587,
        din11 => ref_patch_with_borde_983_reg_11587,
        din12 => ref_patch_with_borde_983_reg_11587,
        din13 => ref_patch_with_borde_983_reg_11587,
        din14 => ref_patch_with_borde_983_reg_11587,
        din15 => ref_patch_with_borde_983_reg_11587,
        din16 => ref_patch_with_borde_983_reg_11587,
        din17 => ref_patch_with_borde_983_reg_11587,
        din18 => ref_patch_with_borde_983_reg_11587,
        din19 => ref_patch_with_borde_983_reg_11587,
        din20 => ref_patch_with_borde_983_reg_11587,
        din21 => ref_patch_with_borde_984_reg_11642,
        din22 => ref_patch_with_borde_985_reg_11649,
        din23 => ref_patch_with_borde_986_reg_11656,
        din24 => ref_patch_with_borde_987_reg_11663,
        din25 => ref_patch_with_borde_988_reg_11670,
        din26 => ref_patch_with_borde_989_reg_11677,
        din27 => ref_patch_with_borde_990_reg_11684,
        din28 => ref_patch_with_borde_991_reg_11691,
        din29 => ref_patch_with_borde_992_reg_11698,
        din30 => ref_patch_with_borde_993_reg_11705,
        din31 => ref_patch_with_borde_994_reg_11712,
        din32 => ref_patch_with_borde_995_reg_11719,
        din33 => ref_patch_with_borde_996_reg_11726,
        din34 => ref_patch_with_borde_997_reg_11733,
        din35 => ref_patch_with_borde_998_reg_11740,
        din36 => ref_patch_with_borde_999_reg_11747,
        din37 => ref_patch_with_borde_1000_reg_11754,
        din38 => ref_patch_with_borde_1001_reg_11761,
        din39 => ref_patch_with_borde_1002_reg_11768,
        din40 => ref_patch_with_borde_1003_reg_11775,
        din41 => ref_patch_with_borde_1004_reg_11782,
        din42 => ref_patch_with_borde_1005_reg_11789,
        din43 => ref_patch_with_borde_1006_reg_11796,
        din44 => ref_patch_with_borde_1007_reg_11803,
        din45 => ref_patch_with_borde_1008_reg_11810,
        din46 => ref_patch_with_borde_1009_reg_11817,
        din47 => ref_patch_with_borde_1010_reg_11824,
        din48 => ref_patch_with_borde_1011_reg_11831,
        din49 => ref_patch_with_borde_1012_reg_11838,
        din50 => ref_patch_with_borde_1013_reg_11845,
        din51 => ref_patch_with_borde_1014_reg_11852,
        din52 => ref_patch_with_borde_1015_reg_11859,
        din53 => ref_patch_with_borde_1016_reg_11866,
        din54 => ref_patch_with_borde_1017_reg_11873,
        din55 => ref_patch_with_borde_1018_reg_11880,
        din56 => ref_patch_with_borde_1019_reg_11887,
        din57 => ref_patch_with_borde_1020_reg_11894,
        din58 => ref_patch_with_borde_1021_reg_11901,
        din59 => ref_patch_with_borde_1022_reg_11908,
        din60 => ref_patch_with_borde_1023_reg_11915,
        din61 => ref_patch_with_borde_1024_reg_11922,
        din62 => ref_patch_with_borde_1025_reg_11929,
        din63 => ref_patch_with_borde_1026_reg_11936,
        din64 => ref_patch_with_borde_1027_reg_11943,
        din65 => ref_patch_with_borde_1028_reg_11950,
        din66 => ref_patch_with_borde_1029_reg_11957,
        din67 => ref_patch_with_borde_1030_reg_11964,
        din68 => ref_patch_with_borde_1031_reg_11971,
        din69 => ref_patch_with_borde_1032_reg_11978,
        din70 => ref_patch_with_borde_1033_reg_11985,
        din71 => ref_patch_with_borde_1034_reg_11992,
        din72 => ref_patch_with_borde_1035_reg_11999,
        din73 => ref_patch_with_borde_1036_reg_12006,
        din74 => ref_patch_with_borde_1037_reg_12013,
        din75 => ref_patch_with_borde_1038_reg_12020,
        din76 => ref_patch_with_borde_1039_reg_12027,
        din77 => ref_patch_with_borde_1040_reg_12034,
        din78 => ref_patch_with_borde_1041_reg_12041,
        din79 => ref_patch_with_borde_1042_reg_12048,
        din80 => ref_patch_with_borde_1043_reg_12055,
        din81 => ref_patch_with_borde_1044_reg_12062,
        din82 => ref_patch_with_borde_1045_reg_12069,
        din83 => ref_patch_with_borde_1046_reg_12076,
        din84 => ref_patch_with_borde_1047_reg_12083,
        din85 => ref_patch_with_borde_1048_reg_12090,
        din86 => ref_patch_with_borde_1049_reg_12097,
        din87 => ref_patch_with_borde_982_reg_11530,
        din88 => ref_patch_with_borde_1050_reg_12104,
        din89 => ref_patch_with_borde_981_reg_11524,
        din90 => ref_patch_with_borde_1051_reg_12110,
        din91 => ref_patch_with_borde_1052_reg_12115,
        din92 => ref_patch_with_borde_1053_reg_12120,
        din93 => ref_patch_with_borde_1054_reg_12125,
        din94 => ref_patch_with_borde_1055_reg_12130,
        din95 => ref_patch_with_borde_1056_reg_12135,
        din96 => ref_patch_with_borde_1057_reg_12140,
        din97 => ref_patch_with_borde_1058_reg_12145,
        din98 => ref_patch_with_borde_983_reg_11587,
        din99 => ref_patch_with_borde_983_reg_11587,
        din100 => ref_patch_with_borde_983_reg_11587,
        din101 => ref_patch_with_borde_983_reg_11587,
        din102 => ref_patch_with_borde_983_reg_11587,
        din103 => ref_patch_with_borde_983_reg_11587,
        din104 => ref_patch_with_borde_983_reg_11587,
        din105 => ref_patch_with_borde_983_reg_11587,
        din106 => ref_patch_with_borde_983_reg_11587,
        din107 => ref_patch_with_borde_983_reg_11587,
        din108 => ref_patch_with_borde_983_reg_11587,
        din109 => ref_patch_with_borde_983_reg_11587,
        din110 => ref_patch_with_borde_983_reg_11587,
        din111 => ref_patch_with_borde_983_reg_11587,
        din112 => ref_patch_with_borde_983_reg_11587,
        din113 => ref_patch_with_borde_983_reg_11587,
        din114 => ref_patch_with_borde_983_reg_11587,
        din115 => ref_patch_with_borde_983_reg_11587,
        din116 => ref_patch_with_borde_983_reg_11587,
        din117 => ref_patch_with_borde_983_reg_11587,
        din118 => ref_patch_with_borde_983_reg_11587,
        din119 => ref_patch_with_borde_983_reg_11587,
        din120 => ref_patch_with_borde_983_reg_11587,
        din121 => ref_patch_with_borde_983_reg_11587,
        din122 => ref_patch_with_borde_983_reg_11587,
        din123 => ref_patch_with_borde_983_reg_11587,
        din124 => ref_patch_with_borde_983_reg_11587,
        din125 => ref_patch_with_borde_983_reg_11587,
        din126 => ref_patch_with_borde_983_reg_11587,
        din127 => ref_patch_with_borde_983_reg_11587,
        din128 => ref_patch_with_borde_1264_fu_8469_p129,
        dout => ref_patch_with_borde_1264_fu_8469_p130);

    batch_align2D_mux_1007_8_1_1_U26 : component batch_align2D_mux_1007_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_599,
        din1 => ref_patch_with_borde_600,
        din2 => ref_patch_with_borde_611,
        din3 => ref_patch_with_borde_622,
        din4 => ref_patch_with_borde_633,
        din5 => ref_patch_with_borde_644,
        din6 => ref_patch_with_borde_655,
        din7 => ref_patch_with_borde_666,
        din8 => ref_patch_with_borde_677,
        din9 => ref_patch_with_borde_688,
        din10 => ref_patch_with_borde_601,
        din11 => ref_patch_with_borde_602,
        din12 => ref_patch_with_borde_603,
        din13 => ref_patch_with_borde_604,
        din14 => ref_patch_with_borde_605,
        din15 => ref_patch_with_borde_606,
        din16 => ref_patch_with_borde_607,
        din17 => ref_patch_with_borde_608,
        din18 => ref_patch_with_borde_609,
        din19 => ref_patch_with_borde_610,
        din20 => ref_patch_with_borde_612,
        din21 => ref_patch_with_borde_613,
        din22 => ref_patch_with_borde_614,
        din23 => ref_patch_with_borde_615,
        din24 => ref_patch_with_borde_616,
        din25 => ref_patch_with_borde_617,
        din26 => ref_patch_with_borde_618,
        din27 => ref_patch_with_borde_619,
        din28 => ref_patch_with_borde_620,
        din29 => ref_patch_with_borde_621,
        din30 => ref_patch_with_borde_623,
        din31 => ref_patch_with_borde_624,
        din32 => ref_patch_with_borde_625,
        din33 => ref_patch_with_borde_626,
        din34 => ref_patch_with_borde_627,
        din35 => ref_patch_with_borde_628,
        din36 => ref_patch_with_borde_629,
        din37 => ref_patch_with_borde_630,
        din38 => ref_patch_with_borde_631,
        din39 => ref_patch_with_borde_632,
        din40 => ref_patch_with_borde_634,
        din41 => ref_patch_with_borde_635,
        din42 => ref_patch_with_borde_636,
        din43 => ref_patch_with_borde_637,
        din44 => ref_patch_with_borde_638,
        din45 => ref_patch_with_borde_639,
        din46 => ref_patch_with_borde_640,
        din47 => ref_patch_with_borde_641,
        din48 => ref_patch_with_borde_642,
        din49 => ref_patch_with_borde_643,
        din50 => ref_patch_with_borde_645,
        din51 => ref_patch_with_borde_646,
        din52 => ref_patch_with_borde_647,
        din53 => ref_patch_with_borde_648,
        din54 => ref_patch_with_borde_649,
        din55 => ref_patch_with_borde_650,
        din56 => ref_patch_with_borde_651,
        din57 => ref_patch_with_borde_652,
        din58 => ref_patch_with_borde_653,
        din59 => ref_patch_with_borde_654,
        din60 => ref_patch_with_borde_656,
        din61 => ref_patch_with_borde_657,
        din62 => ref_patch_with_borde_658,
        din63 => ref_patch_with_borde_659,
        din64 => ref_patch_with_borde_660,
        din65 => ref_patch_with_borde_661,
        din66 => ref_patch_with_borde_662,
        din67 => ref_patch_with_borde_663,
        din68 => ref_patch_with_borde_664,
        din69 => ref_patch_with_borde_665,
        din70 => ref_patch_with_borde_667,
        din71 => ref_patch_with_borde_668,
        din72 => ref_patch_with_borde_669,
        din73 => ref_patch_with_borde_670,
        din74 => ref_patch_with_borde_671,
        din75 => ref_patch_with_borde_672,
        din76 => ref_patch_with_borde_673,
        din77 => ref_patch_with_borde_674,
        din78 => ref_patch_with_borde_675,
        din79 => ref_patch_with_borde_676,
        din80 => ref_patch_with_borde_678,
        din81 => ref_patch_with_borde_679,
        din82 => ref_patch_with_borde_680,
        din83 => ref_patch_with_borde_681,
        din84 => ref_patch_with_borde_682,
        din85 => ref_patch_with_borde_683,
        din86 => ref_patch_with_borde_684,
        din87 => ref_patch_with_borde_685,
        din88 => ref_patch_with_borde_686,
        din89 => ref_patch_with_borde_687,
        din90 => ref_patch_with_borde_689,
        din91 => ref_patch_with_borde_690,
        din92 => ref_patch_with_borde_691,
        din93 => ref_patch_with_borde_692,
        din94 => ref_patch_with_borde_693,
        din95 => ref_patch_with_borde_694,
        din96 => ref_patch_with_borde_695,
        din97 => ref_patch_with_borde_696,
        din98 => ref_patch_with_borde_697,
        din99 => ref_patch_with_borde_698,
        din100 => tmp_80_fu_8663_p101,
        dout => tmp_80_fu_8663_p102);

    batch_align2D_mux_1287_8_1_1_U27 : component batch_align2D_mux_1287_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_1174_reg_12308,
        din1 => ref_patch_with_borde_1174_reg_12308,
        din2 => ref_patch_with_borde_1174_reg_12308,
        din3 => ref_patch_with_borde_1174_reg_12308,
        din4 => ref_patch_with_borde_1174_reg_12308,
        din5 => ref_patch_with_borde_1174_reg_12308,
        din6 => ref_patch_with_borde_1174_reg_12308,
        din7 => ref_patch_with_borde_1174_reg_12308,
        din8 => ref_patch_with_borde_1174_reg_12308,
        din9 => ref_patch_with_borde_1174_reg_12308,
        din10 => ref_patch_with_borde_1251_reg_12928,
        din11 => ref_patch_with_borde_1252_reg_12933,
        din12 => ref_patch_with_borde_1253_reg_12938,
        din13 => ref_patch_with_borde_1254_reg_12944,
        din14 => ref_patch_with_borde_1255_reg_12950,
        din15 => ref_patch_with_borde_1256_reg_12956,
        din16 => ref_patch_with_borde_1257_reg_12962,
        din17 => ref_patch_with_borde_1258_reg_12968,
        din18 => ref_patch_with_borde_1259_reg_12974,
        din19 => ref_patch_with_borde_1260_reg_12980,
        din20 => ref_patch_with_borde_1261_reg_12986,
        din21 => ref_patch_with_borde_1176_reg_12420,
        din22 => ref_patch_with_borde_1177_reg_12427,
        din23 => ref_patch_with_borde_1178_reg_12434,
        din24 => ref_patch_with_borde_1179_reg_12441,
        din25 => ref_patch_with_borde_1180_reg_12448,
        din26 => ref_patch_with_borde_1181_reg_12455,
        din27 => ref_patch_with_borde_1182_reg_12462,
        din28 => ref_patch_with_borde_1183_reg_12469,
        din29 => ref_patch_with_borde_1184_reg_12476,
        din30 => ref_patch_with_borde_1185_reg_12483,
        din31 => ref_patch_with_borde_1186_reg_12490,
        din32 => ref_patch_with_borde_1187_reg_12497,
        din33 => ref_patch_with_borde_1188_reg_12504,
        din34 => ref_patch_with_borde_1189_reg_12511,
        din35 => ref_patch_with_borde_1190_reg_12518,
        din36 => ref_patch_with_borde_1191_reg_12525,
        din37 => ref_patch_with_borde_1192_reg_12532,
        din38 => ref_patch_with_borde_1193_reg_12539,
        din39 => ref_patch_with_borde_1194_reg_12546,
        din40 => ref_patch_with_borde_1195_reg_12553,
        din41 => ref_patch_with_borde_1196_reg_12560,
        din42 => ref_patch_with_borde_1197_reg_12567,
        din43 => ref_patch_with_borde_1198_reg_12574,
        din44 => ref_patch_with_borde_1199_reg_12581,
        din45 => ref_patch_with_borde_1200_reg_12588,
        din46 => ref_patch_with_borde_1201_reg_12595,
        din47 => ref_patch_with_borde_1202_reg_12602,
        din48 => ref_patch_with_borde_1203_reg_12609,
        din49 => ref_patch_with_borde_1204_reg_12616,
        din50 => ref_patch_with_borde_1205_reg_12623,
        din51 => ref_patch_with_borde_1206_reg_12630,
        din52 => ref_patch_with_borde_1207_reg_12637,
        din53 => ref_patch_with_borde_1208_reg_12644,
        din54 => ref_patch_with_borde_1209_reg_12651,
        din55 => ref_patch_with_borde_1210_reg_12658,
        din56 => ref_patch_with_borde_1211_reg_12665,
        din57 => ref_patch_with_borde_1212_reg_12672,
        din58 => ref_patch_with_borde_1213_reg_12679,
        din59 => ref_patch_with_borde_1214_reg_12686,
        din60 => ref_patch_with_borde_1215_reg_12693,
        din61 => ref_patch_with_borde_1216_reg_12700,
        din62 => ref_patch_with_borde_1217_reg_12707,
        din63 => ref_patch_with_borde_1218_reg_12714,
        din64 => ref_patch_with_borde_1219_reg_12721,
        din65 => ref_patch_with_borde_1220_reg_12728,
        din66 => ref_patch_with_borde_1221_reg_12735,
        din67 => ref_patch_with_borde_1222_reg_12742,
        din68 => ref_patch_with_borde_1223_reg_12749,
        din69 => ref_patch_with_borde_1224_reg_12756,
        din70 => ref_patch_with_borde_1225_reg_12763,
        din71 => ref_patch_with_borde_1226_reg_12770,
        din72 => ref_patch_with_borde_1227_reg_12777,
        din73 => ref_patch_with_borde_1228_reg_12784,
        din74 => ref_patch_with_borde_1229_reg_12791,
        din75 => ref_patch_with_borde_1230_reg_12798,
        din76 => ref_patch_with_borde_1231_reg_12805,
        din77 => ref_patch_with_borde_1232_reg_12812,
        din78 => ref_patch_with_borde_1233_reg_12819,
        din79 => ref_patch_with_borde_1234_reg_12826,
        din80 => ref_patch_with_borde_1235_reg_12833,
        din81 => ref_patch_with_borde_1236_reg_12840,
        din82 => ref_patch_with_borde_1237_reg_12847,
        din83 => ref_patch_with_borde_1238_reg_12854,
        din84 => ref_patch_with_borde_1239_reg_12861,
        din85 => ref_patch_with_borde_1240_reg_12868,
        din86 => ref_patch_with_borde_1241_reg_12875,
        din87 => ref_patch_with_borde_1174_reg_12308,
        din88 => ref_patch_with_borde_1174_reg_12308,
        din89 => ref_patch_with_borde_1174_reg_12308,
        din90 => ref_patch_with_borde_1174_reg_12308,
        din91 => ref_patch_with_borde_1174_reg_12308,
        din92 => ref_patch_with_borde_1174_reg_12308,
        din93 => ref_patch_with_borde_1174_reg_12308,
        din94 => ref_patch_with_borde_1174_reg_12308,
        din95 => ref_patch_with_borde_1174_reg_12308,
        din96 => ref_patch_with_borde_1174_reg_12308,
        din97 => ref_patch_with_borde_1174_reg_12308,
        din98 => ref_patch_with_borde_1174_reg_12308,
        din99 => ref_patch_with_borde_1174_reg_12308,
        din100 => ref_patch_with_borde_1174_reg_12308,
        din101 => ref_patch_with_borde_1174_reg_12308,
        din102 => ref_patch_with_borde_1174_reg_12308,
        din103 => ref_patch_with_borde_1174_reg_12308,
        din104 => ref_patch_with_borde_1174_reg_12308,
        din105 => ref_patch_with_borde_1174_reg_12308,
        din106 => ref_patch_with_borde_1174_reg_12308,
        din107 => ref_patch_with_borde_1174_reg_12308,
        din108 => ref_patch_with_borde_1174_reg_12308,
        din109 => ref_patch_with_borde_1174_reg_12308,
        din110 => ref_patch_with_borde_1174_reg_12308,
        din111 => ref_patch_with_borde_1174_reg_12308,
        din112 => ref_patch_with_borde_1174_reg_12308,
        din113 => ref_patch_with_borde_1174_reg_12308,
        din114 => ref_patch_with_borde_1174_reg_12308,
        din115 => ref_patch_with_borde_1174_reg_12308,
        din116 => ref_patch_with_borde_1174_reg_12308,
        din117 => ref_patch_with_borde_1174_reg_12308,
        din118 => ref_patch_with_borde_1174_reg_12308,
        din119 => ref_patch_with_borde_1174_reg_12308,
        din120 => ref_patch_with_borde_1174_reg_12308,
        din121 => ref_patch_with_borde_1174_reg_12308,
        din122 => ref_patch_with_borde_1174_reg_12308,
        din123 => ref_patch_with_borde_1174_reg_12308,
        din124 => ref_patch_with_borde_1174_reg_12308,
        din125 => ref_patch_with_borde_1174_reg_12308,
        din126 => ref_patch_with_borde_1174_reg_12308,
        din127 => ref_patch_with_borde_1174_reg_12308,
        din128 => ref_patch_with_borde_1366_fu_9047_p129,
        dout => ref_patch_with_borde_1366_fu_9047_p130);

    batch_align2D_mux_1287_8_1_1_U28 : component batch_align2D_mux_1287_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 8,
        din101_WIDTH => 8,
        din102_WIDTH => 8,
        din103_WIDTH => 8,
        din104_WIDTH => 8,
        din105_WIDTH => 8,
        din106_WIDTH => 8,
        din107_WIDTH => 8,
        din108_WIDTH => 8,
        din109_WIDTH => 8,
        din110_WIDTH => 8,
        din111_WIDTH => 8,
        din112_WIDTH => 8,
        din113_WIDTH => 8,
        din114_WIDTH => 8,
        din115_WIDTH => 8,
        din116_WIDTH => 8,
        din117_WIDTH => 8,
        din118_WIDTH => 8,
        din119_WIDTH => 8,
        din120_WIDTH => 8,
        din121_WIDTH => 8,
        din122_WIDTH => 8,
        din123_WIDTH => 8,
        din124_WIDTH => 8,
        din125_WIDTH => 8,
        din126_WIDTH => 8,
        din127_WIDTH => 8,
        din128_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_1175_reg_12365,
        din1 => ref_patch_with_borde_1175_reg_12365,
        din2 => ref_patch_with_borde_1175_reg_12365,
        din3 => ref_patch_with_borde_1175_reg_12365,
        din4 => ref_patch_with_borde_1175_reg_12365,
        din5 => ref_patch_with_borde_1175_reg_12365,
        din6 => ref_patch_with_borde_1175_reg_12365,
        din7 => ref_patch_with_borde_1175_reg_12365,
        din8 => ref_patch_with_borde_1175_reg_12365,
        din9 => ref_patch_with_borde_1175_reg_12365,
        din10 => ref_patch_with_borde_1175_reg_12365,
        din11 => ref_patch_with_borde_1175_reg_12365,
        din12 => ref_patch_with_borde_1175_reg_12365,
        din13 => ref_patch_with_borde_1175_reg_12365,
        din14 => ref_patch_with_borde_1175_reg_12365,
        din15 => ref_patch_with_borde_1175_reg_12365,
        din16 => ref_patch_with_borde_1175_reg_12365,
        din17 => ref_patch_with_borde_1175_reg_12365,
        din18 => ref_patch_with_borde_1175_reg_12365,
        din19 => ref_patch_with_borde_1175_reg_12365,
        din20 => ref_patch_with_borde_1175_reg_12365,
        din21 => ref_patch_with_borde_1176_reg_12420,
        din22 => ref_patch_with_borde_1177_reg_12427,
        din23 => ref_patch_with_borde_1178_reg_12434,
        din24 => ref_patch_with_borde_1179_reg_12441,
        din25 => ref_patch_with_borde_1180_reg_12448,
        din26 => ref_patch_with_borde_1181_reg_12455,
        din27 => ref_patch_with_borde_1182_reg_12462,
        din28 => ref_patch_with_borde_1183_reg_12469,
        din29 => ref_patch_with_borde_1184_reg_12476,
        din30 => ref_patch_with_borde_1185_reg_12483,
        din31 => ref_patch_with_borde_1186_reg_12490,
        din32 => ref_patch_with_borde_1187_reg_12497,
        din33 => ref_patch_with_borde_1188_reg_12504,
        din34 => ref_patch_with_borde_1189_reg_12511,
        din35 => ref_patch_with_borde_1190_reg_12518,
        din36 => ref_patch_with_borde_1191_reg_12525,
        din37 => ref_patch_with_borde_1192_reg_12532,
        din38 => ref_patch_with_borde_1193_reg_12539,
        din39 => ref_patch_with_borde_1194_reg_12546,
        din40 => ref_patch_with_borde_1195_reg_12553,
        din41 => ref_patch_with_borde_1196_reg_12560,
        din42 => ref_patch_with_borde_1197_reg_12567,
        din43 => ref_patch_with_borde_1198_reg_12574,
        din44 => ref_patch_with_borde_1199_reg_12581,
        din45 => ref_patch_with_borde_1200_reg_12588,
        din46 => ref_patch_with_borde_1201_reg_12595,
        din47 => ref_patch_with_borde_1202_reg_12602,
        din48 => ref_patch_with_borde_1203_reg_12609,
        din49 => ref_patch_with_borde_1204_reg_12616,
        din50 => ref_patch_with_borde_1205_reg_12623,
        din51 => ref_patch_with_borde_1206_reg_12630,
        din52 => ref_patch_with_borde_1207_reg_12637,
        din53 => ref_patch_with_borde_1208_reg_12644,
        din54 => ref_patch_with_borde_1209_reg_12651,
        din55 => ref_patch_with_borde_1210_reg_12658,
        din56 => ref_patch_with_borde_1211_reg_12665,
        din57 => ref_patch_with_borde_1212_reg_12672,
        din58 => ref_patch_with_borde_1213_reg_12679,
        din59 => ref_patch_with_borde_1214_reg_12686,
        din60 => ref_patch_with_borde_1215_reg_12693,
        din61 => ref_patch_with_borde_1216_reg_12700,
        din62 => ref_patch_with_borde_1217_reg_12707,
        din63 => ref_patch_with_borde_1218_reg_12714,
        din64 => ref_patch_with_borde_1219_reg_12721,
        din65 => ref_patch_with_borde_1220_reg_12728,
        din66 => ref_patch_with_borde_1221_reg_12735,
        din67 => ref_patch_with_borde_1222_reg_12742,
        din68 => ref_patch_with_borde_1223_reg_12749,
        din69 => ref_patch_with_borde_1224_reg_12756,
        din70 => ref_patch_with_borde_1225_reg_12763,
        din71 => ref_patch_with_borde_1226_reg_12770,
        din72 => ref_patch_with_borde_1227_reg_12777,
        din73 => ref_patch_with_borde_1228_reg_12784,
        din74 => ref_patch_with_borde_1229_reg_12791,
        din75 => ref_patch_with_borde_1230_reg_12798,
        din76 => ref_patch_with_borde_1231_reg_12805,
        din77 => ref_patch_with_borde_1232_reg_12812,
        din78 => ref_patch_with_borde_1233_reg_12819,
        din79 => ref_patch_with_borde_1234_reg_12826,
        din80 => ref_patch_with_borde_1235_reg_12833,
        din81 => ref_patch_with_borde_1236_reg_12840,
        din82 => ref_patch_with_borde_1237_reg_12847,
        din83 => ref_patch_with_borde_1238_reg_12854,
        din84 => ref_patch_with_borde_1239_reg_12861,
        din85 => ref_patch_with_borde_1240_reg_12868,
        din86 => ref_patch_with_borde_1241_reg_12875,
        din87 => ref_patch_with_borde_1174_reg_12308,
        din88 => ref_patch_with_borde_1242_reg_12882,
        din89 => ref_patch_with_borde_1173_reg_12302,
        din90 => ref_patch_with_borde_1243_reg_12888,
        din91 => ref_patch_with_borde_1244_reg_12893,
        din92 => ref_patch_with_borde_1245_reg_12898,
        din93 => ref_patch_with_borde_1246_reg_12903,
        din94 => ref_patch_with_borde_1247_reg_12908,
        din95 => ref_patch_with_borde_1248_reg_12913,
        din96 => ref_patch_with_borde_1249_reg_12918,
        din97 => ref_patch_with_borde_1250_reg_12923,
        din98 => ref_patch_with_borde_1175_reg_12365,
        din99 => ref_patch_with_borde_1175_reg_12365,
        din100 => ref_patch_with_borde_1175_reg_12365,
        din101 => ref_patch_with_borde_1175_reg_12365,
        din102 => ref_patch_with_borde_1175_reg_12365,
        din103 => ref_patch_with_borde_1175_reg_12365,
        din104 => ref_patch_with_borde_1175_reg_12365,
        din105 => ref_patch_with_borde_1175_reg_12365,
        din106 => ref_patch_with_borde_1175_reg_12365,
        din107 => ref_patch_with_borde_1175_reg_12365,
        din108 => ref_patch_with_borde_1175_reg_12365,
        din109 => ref_patch_with_borde_1175_reg_12365,
        din110 => ref_patch_with_borde_1175_reg_12365,
        din111 => ref_patch_with_borde_1175_reg_12365,
        din112 => ref_patch_with_borde_1175_reg_12365,
        din113 => ref_patch_with_borde_1175_reg_12365,
        din114 => ref_patch_with_borde_1175_reg_12365,
        din115 => ref_patch_with_borde_1175_reg_12365,
        din116 => ref_patch_with_borde_1175_reg_12365,
        din117 => ref_patch_with_borde_1175_reg_12365,
        din118 => ref_patch_with_borde_1175_reg_12365,
        din119 => ref_patch_with_borde_1175_reg_12365,
        din120 => ref_patch_with_borde_1175_reg_12365,
        din121 => ref_patch_with_borde_1175_reg_12365,
        din122 => ref_patch_with_borde_1175_reg_12365,
        din123 => ref_patch_with_borde_1175_reg_12365,
        din124 => ref_patch_with_borde_1175_reg_12365,
        din125 => ref_patch_with_borde_1175_reg_12365,
        din126 => ref_patch_with_borde_1175_reg_12365,
        din127 => ref_patch_with_borde_1175_reg_12365,
        din128 => ref_patch_with_borde_1367_fu_9197_p129,
        dout => ref_patch_with_borde_1367_fu_9197_p130);

    batch_align2D_mux_1007_8_1_1_U29 : component batch_align2D_mux_1007_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 8,
        din5_WIDTH => 8,
        din6_WIDTH => 8,
        din7_WIDTH => 8,
        din8_WIDTH => 8,
        din9_WIDTH => 8,
        din10_WIDTH => 8,
        din11_WIDTH => 8,
        din12_WIDTH => 8,
        din13_WIDTH => 8,
        din14_WIDTH => 8,
        din15_WIDTH => 8,
        din16_WIDTH => 8,
        din17_WIDTH => 8,
        din18_WIDTH => 8,
        din19_WIDTH => 8,
        din20_WIDTH => 8,
        din21_WIDTH => 8,
        din22_WIDTH => 8,
        din23_WIDTH => 8,
        din24_WIDTH => 8,
        din25_WIDTH => 8,
        din26_WIDTH => 8,
        din27_WIDTH => 8,
        din28_WIDTH => 8,
        din29_WIDTH => 8,
        din30_WIDTH => 8,
        din31_WIDTH => 8,
        din32_WIDTH => 8,
        din33_WIDTH => 8,
        din34_WIDTH => 8,
        din35_WIDTH => 8,
        din36_WIDTH => 8,
        din37_WIDTH => 8,
        din38_WIDTH => 8,
        din39_WIDTH => 8,
        din40_WIDTH => 8,
        din41_WIDTH => 8,
        din42_WIDTH => 8,
        din43_WIDTH => 8,
        din44_WIDTH => 8,
        din45_WIDTH => 8,
        din46_WIDTH => 8,
        din47_WIDTH => 8,
        din48_WIDTH => 8,
        din49_WIDTH => 8,
        din50_WIDTH => 8,
        din51_WIDTH => 8,
        din52_WIDTH => 8,
        din53_WIDTH => 8,
        din54_WIDTH => 8,
        din55_WIDTH => 8,
        din56_WIDTH => 8,
        din57_WIDTH => 8,
        din58_WIDTH => 8,
        din59_WIDTH => 8,
        din60_WIDTH => 8,
        din61_WIDTH => 8,
        din62_WIDTH => 8,
        din63_WIDTH => 8,
        din64_WIDTH => 8,
        din65_WIDTH => 8,
        din66_WIDTH => 8,
        din67_WIDTH => 8,
        din68_WIDTH => 8,
        din69_WIDTH => 8,
        din70_WIDTH => 8,
        din71_WIDTH => 8,
        din72_WIDTH => 8,
        din73_WIDTH => 8,
        din74_WIDTH => 8,
        din75_WIDTH => 8,
        din76_WIDTH => 8,
        din77_WIDTH => 8,
        din78_WIDTH => 8,
        din79_WIDTH => 8,
        din80_WIDTH => 8,
        din81_WIDTH => 8,
        din82_WIDTH => 8,
        din83_WIDTH => 8,
        din84_WIDTH => 8,
        din85_WIDTH => 8,
        din86_WIDTH => 8,
        din87_WIDTH => 8,
        din88_WIDTH => 8,
        din89_WIDTH => 8,
        din90_WIDTH => 8,
        din91_WIDTH => 8,
        din92_WIDTH => 8,
        din93_WIDTH => 8,
        din94_WIDTH => 8,
        din95_WIDTH => 8,
        din96_WIDTH => 8,
        din97_WIDTH => 8,
        din98_WIDTH => 8,
        din99_WIDTH => 8,
        din100_WIDTH => 7,
        dout_WIDTH => 8)
    port map (
        din0 => ref_patch_with_borde_99,
        din1 => ref_patch_with_borde_98,
        din2 => ref_patch_with_borde_87,
        din3 => ref_patch_with_borde_76,
        din4 => ref_patch_with_borde_65,
        din5 => ref_patch_with_borde_54,
        din6 => ref_patch_with_borde_43,
        din7 => ref_patch_with_borde_32,
        din8 => ref_patch_with_borde_21,
        din9 => ref_patch_with_borde_10,
        din10 => ref_patch_with_borde_97,
        din11 => ref_patch_with_borde_96,
        din12 => ref_patch_with_borde_95,
        din13 => ref_patch_with_borde_94,
        din14 => ref_patch_with_borde_93,
        din15 => ref_patch_with_borde_92,
        din16 => ref_patch_with_borde_91,
        din17 => ref_patch_with_borde_90,
        din18 => ref_patch_with_borde_89,
        din19 => ref_patch_with_borde_88,
        din20 => ref_patch_with_borde_86,
        din21 => ref_patch_with_borde_85,
        din22 => ref_patch_with_borde_84,
        din23 => ref_patch_with_borde_83,
        din24 => ref_patch_with_borde_82,
        din25 => ref_patch_with_borde_81,
        din26 => ref_patch_with_borde_80,
        din27 => ref_patch_with_borde_79,
        din28 => ref_patch_with_borde_78,
        din29 => ref_patch_with_borde_77,
        din30 => ref_patch_with_borde_75,
        din31 => ref_patch_with_borde_74,
        din32 => ref_patch_with_borde_73,
        din33 => ref_patch_with_borde_72,
        din34 => ref_patch_with_borde_71,
        din35 => ref_patch_with_borde_70,
        din36 => ref_patch_with_borde_69,
        din37 => ref_patch_with_borde_68,
        din38 => ref_patch_with_borde_67,
        din39 => ref_patch_with_borde_66,
        din40 => ref_patch_with_borde_64,
        din41 => ref_patch_with_borde_63,
        din42 => ref_patch_with_borde_62,
        din43 => ref_patch_with_borde_61,
        din44 => ref_patch_with_borde_60,
        din45 => ref_patch_with_borde_59,
        din46 => ref_patch_with_borde_58,
        din47 => ref_patch_with_borde_57,
        din48 => ref_patch_with_borde_56,
        din49 => ref_patch_with_borde_55,
        din50 => ref_patch_with_borde_53,
        din51 => ref_patch_with_borde_52,
        din52 => ref_patch_with_borde_51,
        din53 => ref_patch_with_borde_50,
        din54 => ref_patch_with_borde_49,
        din55 => ref_patch_with_borde_48,
        din56 => ref_patch_with_borde_47,
        din57 => ref_patch_with_borde_46,
        din58 => ref_patch_with_borde_45,
        din59 => ref_patch_with_borde_44,
        din60 => ref_patch_with_borde_42,
        din61 => ref_patch_with_borde_41,
        din62 => ref_patch_with_borde_40,
        din63 => ref_patch_with_borde_39,
        din64 => ref_patch_with_borde_38,
        din65 => ref_patch_with_borde_37,
        din66 => ref_patch_with_borde_36,
        din67 => ref_patch_with_borde_35,
        din68 => ref_patch_with_borde_34,
        din69 => ref_patch_with_borde_33,
        din70 => ref_patch_with_borde_31,
        din71 => ref_patch_with_borde_30,
        din72 => ref_patch_with_borde_29,
        din73 => ref_patch_with_borde_28,
        din74 => ref_patch_with_borde_27,
        din75 => ref_patch_with_borde_26,
        din76 => ref_patch_with_borde_25,
        din77 => ref_patch_with_borde_24,
        din78 => ref_patch_with_borde_23,
        din79 => ref_patch_with_borde_22,
        din80 => ref_patch_with_borde_20,
        din81 => ref_patch_with_borde_19,
        din82 => ref_patch_with_borde_18,
        din83 => ref_patch_with_borde_17,
        din84 => ref_patch_with_borde_16,
        din85 => ref_patch_with_borde_15,
        din86 => ref_patch_with_borde_14,
        din87 => ref_patch_with_borde_13,
        din88 => ref_patch_with_borde_12,
        din89 => ref_patch_with_borde_11,
        din90 => ref_patch_with_borde_9,
        din91 => ref_patch_with_borde_8,
        din92 => ref_patch_with_borde_7,
        din93 => ref_patch_with_borde_6,
        din94 => ref_patch_with_borde_5,
        din95 => ref_patch_with_borde_4,
        din96 => ref_patch_with_borde_3,
        din97 => ref_patch_with_borde_2,
        din98 => ref_patch_with_borde_1,
        din99 => ref_patch_with_borde,
        din100 => tmp_83_fu_9391_p101,
        dout => tmp_83_fu_9391_p102);

    batch_align2D_mux_366_32_1_1_U30 : component batch_align2D_mux_366_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 6,
        dout_WIDTH => 32)
    port map (
        din0 => H_inv_0_0_reg_10712,
        din1 => H_inv_0_1_reg_10718,
        din2 => H_inv_0_2_reg_10724,
        din3 => H_inv_0_1_reg_10718,
        din4 => H_inv_0_4_reg_10730,
        din5 => H_inv_0_5_reg_10735,
        din6 => H_inv_0_2_reg_10724,
        din7 => H_inv_0_5_reg_10735,
        din8 => H_inv_0_8_reg_10741,
        din9 => H_inv_1_0_reg_11484,
        din10 => H_inv_1_1_reg_11490,
        din11 => H_inv_1_2_reg_11496,
        din12 => H_inv_1_1_reg_11490,
        din13 => H_inv_1_4_reg_11502,
        din14 => H_inv_1_5_reg_11507,
        din15 => H_inv_1_2_reg_11496,
        din16 => H_inv_1_5_reg_11507,
        din17 => H_inv_1_8_reg_11513,
        din18 => H_inv_2_0_reg_12262,
        din19 => H_inv_2_1_reg_12268,
        din20 => H_inv_2_2_reg_12274,
        din21 => H_inv_2_1_reg_12268,
        din22 => H_inv_2_4_reg_12280,
        din23 => H_inv_2_5_reg_12285,
        din24 => H_inv_2_2_reg_12274,
        din25 => H_inv_2_5_reg_12285,
        din26 => H_inv_2_8_reg_12291,
        din27 => H_inv_3_0_reg_13046,
        din28 => H_inv_3_1_reg_13052,
        din29 => H_inv_3_2_reg_13058,
        din30 => H_inv_3_1_reg_13052,
        din31 => H_inv_3_4_reg_13064,
        din32 => H_inv_3_5_reg_13069,
        din33 => H_inv_3_2_reg_13058,
        din34 => H_inv_3_5_reg_13069,
        din35 => H_inv_3_8_reg_13075,
        din36 => indvar6_reg_2436,
        dout => tmp_81_fu_9691_p38);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state9)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state9);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state19))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state19))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state19);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state28))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state28))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state28);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state31) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3))) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3))) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state87) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3))) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3))) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state143) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3))) then 
                    ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3))) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp6_exit_iter0_state199) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp6_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3))) then 
                    ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp6_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp6_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3))) then 
                    ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp6_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp7_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp7_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp7_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp7_exit_iter0_state255) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
                    ap_enable_reg_pp7_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state254) and (pos_r_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp7_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp7_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp7_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp7_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp7_exit_iter0_state255))) then 
                    ap_enable_reg_pp7_iter1 <= (ap_const_logic_1 xor ap_condition_pp7_exit_iter0_state255);
                elsif ((ap_const_boolean_0 = ap_block_pp7_stage0_subdone)) then 
                    ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state254) and (pos_r_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp7_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp8_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp8_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp8_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_logic_1 = ap_condition_pp8_exit_iter0_state262))) then 
                    ap_enable_reg_pp8_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state261) and (debug_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp8_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp8_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp8_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp8_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp8_exit_iter0_state262))) then 
                    ap_enable_reg_pp8_iter1 <= (ap_const_logic_1 xor ap_condition_pp8_exit_iter0_state262);
                elsif ((ap_const_boolean_0 = ap_block_pp8_stage0_subdone)) then 
                    ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state261) and (debug_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp8_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_debug_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_debug_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state212)) then
                    if ((ap_const_boolean_0 = ap_block_state212_io)) then 
                        ap_reg_ioackin_debug_AWREADY <= ap_const_logic_0;
                    elsif ((debug_AWREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_debug_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_debug_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_debug_WREADY <= ap_const_logic_0;
            else
                if ((ap_const_boolean_1 = ap_condition_11632)) then
                    if ((ap_const_boolean_0 = ap_block_pp7_stage0_11001)) then 
                        ap_reg_ioackin_debug_WREADY <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp7_stage0_01001) and (debug_WREADY = ap_const_logic_1))) then 
                        ap_reg_ioackin_debug_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_patches_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_patches_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                    if ((ap_sig_ioackin_patches_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_patches_ARREADY <= ap_const_logic_0;
                    elsif ((patches_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_patches_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_pos_r_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_pos_r_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                    if ((ap_sig_ioackin_pos_r_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_pos_r_ARREADY <= ap_const_logic_0;
                    elsif ((pos_r_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_pos_r_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_pos_r_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_pos_r_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state257) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state212) and (ap_const_boolean_0 = ap_block_state212_io)) or ((ap_const_logic_1 = ap_CS_fsm_state192) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state136) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)))) then 
                    ap_reg_ioackin_pos_r_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state257) and (pos_r_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (pos_r_AWREADY = ap_const_logic_1)) or ((pos_r_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state212)) or ((pos_r_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state192)) or ((pos_r_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state136)))) then 
                    ap_reg_ioackin_pos_r_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_pos_r_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_pos_r_WREADY <= ap_const_logic_0;
            else
                if ((((exitcond5_reg_13094 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp8_stage0_11001) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0)) or ((ap_sig_ioackin_pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state81)) or ((ap_sig_ioackin_pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state249)) or ((ap_sig_ioackin_pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state193)) or ((ap_sig_ioackin_pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state137)))) then 
                    ap_reg_ioackin_pos_r_WREADY <= ap_const_logic_0;
                elsif ((((exitcond5_reg_13094 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp8_stage0_01001) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (pos_r_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state81) and (pos_r_WREADY = ap_const_logic_1)) or ((pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state249)) or ((pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state193)) or ((pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state137)))) then 
                    ap_reg_ioackin_pos_r_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_pyr_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_pyr_ARREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    if ((ap_sig_ioackin_pyr_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_pyr_ARREADY <= ap_const_logic_0;
                    elsif ((pyr_ARREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_pyr_ARREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_11308)) then
                if ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_C)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_780_reg_10610;
                elsif ((ap_const_boolean_1 = ap_condition_11384)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_700_reg_9974;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_58)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_769_reg_10554;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_57)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_701_reg_9980;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_56)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_768_reg_10547;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_55)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_767_reg_10540;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_54)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_766_reg_10533;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_53)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_765_reg_10526;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_52)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_764_reg_10519;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_51)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_763_reg_10512;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_50)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_762_reg_10505;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4F)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_761_reg_10498;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4E)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_760_reg_10491;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4D)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_759_reg_10484;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4C)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_758_reg_10477;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4B)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_757_reg_10470;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4A)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_756_reg_10463;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_49)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_755_reg_10456;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_48)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_754_reg_10449;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_47)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_753_reg_10442;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_46)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_752_reg_10435;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_45)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_751_reg_10428;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_44)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_750_reg_10421;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_43)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_749_reg_10414;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_42)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_748_reg_10407;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_41)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_747_reg_10400;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_40)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_746_reg_10393;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3F)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_745_reg_10386;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3E)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_744_reg_10379;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3D)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_743_reg_10372;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3C)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_742_reg_10365;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3B)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_741_reg_10358;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3A)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_740_reg_10351;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_39)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_739_reg_10344;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_38)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_738_reg_10337;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_37)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_737_reg_10330;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_36)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_736_reg_10323;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_35)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_735_reg_10316;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_34)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_734_reg_10309;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_33)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_733_reg_10302;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_32)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_732_reg_10295;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_31)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_731_reg_10288;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_30)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_730_reg_10281;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2F)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_729_reg_10274;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2E)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_728_reg_10267;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2D)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_727_reg_10260;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2C)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_726_reg_10253;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2B)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_725_reg_10246;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2A)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_724_reg_10239;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_29)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_723_reg_10232;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_28)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_722_reg_10225;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_27)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_721_reg_10218;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_26)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_720_reg_10211;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_25)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_719_reg_10204;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_24)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_718_reg_10197;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_23)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_717_reg_10190;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_22)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_716_reg_10183;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_21)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_715_reg_10176;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_20)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_714_reg_10169;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1F)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_713_reg_10162;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1E)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_712_reg_10155;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1D)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_711_reg_10148;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1C)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_710_reg_10141;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1B)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_709_reg_10134;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1A)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_708_reg_10127;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_19)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_707_reg_10120;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_18)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_706_reg_10113;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_17)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_705_reg_10106;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_16)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_704_reg_10099;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_15)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_703_reg_10092;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_14)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_788_reg_10658;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_13)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_787_reg_10652;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_12)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_786_reg_10646;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_11)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_785_reg_10640;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_10)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_784_reg_10634;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_F)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_783_reg_10628;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_E)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_782_reg_10622;
                elsif ((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_D)) then 
                    ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579 <= ref_patch_with_borde_781_reg_10616;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_11389)) then
                if ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_C)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_869_reg_11382;
                elsif ((ap_const_boolean_1 = ap_condition_11465)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_789_reg_10746;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_58)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_858_reg_11326;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_57)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_790_reg_10752;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_56)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_857_reg_11319;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_55)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_856_reg_11312;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_54)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_855_reg_11305;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_53)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_854_reg_11298;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_52)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_853_reg_11291;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_51)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_852_reg_11284;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_50)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_851_reg_11277;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4F)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_850_reg_11270;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4E)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_849_reg_11263;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4D)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_848_reg_11256;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4C)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_847_reg_11249;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4B)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_846_reg_11242;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4A)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_845_reg_11235;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_49)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_844_reg_11228;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_48)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_843_reg_11221;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_47)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_842_reg_11214;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_46)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_841_reg_11207;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_45)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_840_reg_11200;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_44)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_839_reg_11193;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_43)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_838_reg_11186;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_42)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_837_reg_11179;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_41)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_836_reg_11172;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_40)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_835_reg_11165;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3F)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_834_reg_11158;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3E)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_833_reg_11151;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3D)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_832_reg_11144;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3C)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_831_reg_11137;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3B)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_830_reg_11130;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3A)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_829_reg_11123;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_39)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_828_reg_11116;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_38)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_827_reg_11109;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_37)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_826_reg_11102;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_36)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_825_reg_11095;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_35)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_824_reg_11088;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_34)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_823_reg_11081;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_33)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_822_reg_11074;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_32)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_821_reg_11067;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_31)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_820_reg_11060;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_30)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_819_reg_11053;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2F)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_818_reg_11046;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2E)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_817_reg_11039;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2D)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_816_reg_11032;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2C)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_815_reg_11025;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2B)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_814_reg_11018;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2A)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_813_reg_11011;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_29)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_812_reg_11004;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_28)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_811_reg_10997;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_27)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_810_reg_10990;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_26)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_809_reg_10983;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_25)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_808_reg_10976;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_24)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_807_reg_10969;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_23)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_806_reg_10962;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_22)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_805_reg_10955;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_21)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_804_reg_10948;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_20)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_803_reg_10941;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1F)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_802_reg_10934;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1E)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_801_reg_10927;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1D)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_800_reg_10920;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1C)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_799_reg_10913;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1B)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_798_reg_10906;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1A)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_797_reg_10899;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_19)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_796_reg_10892;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_18)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_795_reg_10885;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_17)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_794_reg_10878;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_16)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_793_reg_10871;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_15)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_792_reg_10864;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_14)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_877_reg_11430;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_13)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_876_reg_11424;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_12)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_875_reg_11418;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_11)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_874_reg_11412;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_10)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_873_reg_11406;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_F)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_872_reg_11400;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_E)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_871_reg_11394;
                elsif ((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_D)) then 
                    ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811 <= ref_patch_with_borde_870_reg_11388;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_11470)) then
                if ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_C)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1061_reg_12160;
                elsif ((ap_const_boolean_1 = ap_condition_11546)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_981_reg_11524;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_58)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1050_reg_12104;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_57)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_982_reg_11530;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_56)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1049_reg_12097;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_55)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1048_reg_12090;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_54)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1047_reg_12083;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_53)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1046_reg_12076;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_52)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1045_reg_12069;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_51)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1044_reg_12062;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_50)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1043_reg_12055;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4F)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1042_reg_12048;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4E)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1041_reg_12041;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4D)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1040_reg_12034;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4C)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1039_reg_12027;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4B)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1038_reg_12020;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4A)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1037_reg_12013;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_49)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1036_reg_12006;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_48)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1035_reg_11999;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_47)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1034_reg_11992;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_46)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1033_reg_11985;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_45)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1032_reg_11978;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_44)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1031_reg_11971;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_43)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1030_reg_11964;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_42)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1029_reg_11957;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_41)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1028_reg_11950;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_40)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1027_reg_11943;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3F)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1026_reg_11936;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3E)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1025_reg_11929;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3D)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1024_reg_11922;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3C)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1023_reg_11915;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3B)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1022_reg_11908;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3A)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1021_reg_11901;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_39)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1020_reg_11894;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_38)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1019_reg_11887;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_37)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1018_reg_11880;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_36)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1017_reg_11873;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_35)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1016_reg_11866;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_34)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1015_reg_11859;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_33)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1014_reg_11852;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_32)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1013_reg_11845;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_31)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1012_reg_11838;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_30)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1011_reg_11831;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2F)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1010_reg_11824;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2E)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1009_reg_11817;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2D)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1008_reg_11810;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2C)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1007_reg_11803;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2B)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1006_reg_11796;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2A)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1005_reg_11789;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_29)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1004_reg_11782;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_28)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1003_reg_11775;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_27)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1002_reg_11768;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_26)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1001_reg_11761;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_25)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1000_reg_11754;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_24)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_999_reg_11747;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_23)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_998_reg_11740;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_22)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_997_reg_11733;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_21)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_996_reg_11726;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_20)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_995_reg_11719;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1F)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_994_reg_11712;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1E)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_993_reg_11705;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1D)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_992_reg_11698;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1C)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_991_reg_11691;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1B)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_990_reg_11684;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1A)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_989_reg_11677;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_19)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_988_reg_11670;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_18)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_987_reg_11663;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_17)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_986_reg_11656;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_16)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_985_reg_11649;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_15)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_984_reg_11642;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_14)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1069_reg_12208;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_13)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1068_reg_12202;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_12)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1067_reg_12196;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_11)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1066_reg_12190;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_10)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1065_reg_12184;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_F)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1064_reg_12178;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_E)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1063_reg_12172;
                elsif ((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_D)) then 
                    ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043 <= ref_patch_with_borde_1062_reg_12166;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_11551)) then
                if ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_C)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1253_reg_12938;
                elsif ((ap_const_boolean_1 = ap_condition_11627)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1173_reg_12302;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_58)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1242_reg_12882;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_57)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1174_reg_12308;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_56)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1241_reg_12875;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_55)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1240_reg_12868;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_54)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1239_reg_12861;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_53)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1238_reg_12854;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_52)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1237_reg_12847;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_51)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1236_reg_12840;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_50)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1235_reg_12833;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4F)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1234_reg_12826;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4E)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1233_reg_12819;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4D)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1232_reg_12812;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4C)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1231_reg_12805;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4B)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1230_reg_12798;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4A)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1229_reg_12791;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_49)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1228_reg_12784;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_48)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1227_reg_12777;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_47)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1226_reg_12770;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_46)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1225_reg_12763;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_45)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1224_reg_12756;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_44)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1223_reg_12749;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_43)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1222_reg_12742;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_42)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1221_reg_12735;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_41)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1220_reg_12728;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_40)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1219_reg_12721;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3F)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1218_reg_12714;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3E)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1217_reg_12707;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3D)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1216_reg_12700;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3C)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1215_reg_12693;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3B)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1214_reg_12686;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3A)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1213_reg_12679;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_39)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1212_reg_12672;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_38)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1211_reg_12665;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_37)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1210_reg_12658;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_36)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1209_reg_12651;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_35)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1208_reg_12644;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_34)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1207_reg_12637;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_33)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1206_reg_12630;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_32)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1205_reg_12623;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_31)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1204_reg_12616;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_30)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1203_reg_12609;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2F)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1202_reg_12602;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2E)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1201_reg_12595;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2D)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1200_reg_12588;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2C)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1199_reg_12581;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2B)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1198_reg_12574;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2A)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1197_reg_12567;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_29)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1196_reg_12560;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_28)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1195_reg_12553;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_27)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1194_reg_12546;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_26)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1193_reg_12539;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_25)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1192_reg_12532;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_24)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1191_reg_12525;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_23)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1190_reg_12518;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_22)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1189_reg_12511;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_21)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1188_reg_12504;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_20)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1187_reg_12497;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1F)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1186_reg_12490;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1E)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1185_reg_12483;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1D)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1184_reg_12476;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1C)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1183_reg_12469;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1B)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1182_reg_12462;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1A)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1181_reg_12455;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_19)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1180_reg_12448;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_18)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1179_reg_12441;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_17)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1178_reg_12434;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_16)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1177_reg_12427;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_15)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1176_reg_12420;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_14)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1261_reg_12986;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_13)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1260_reg_12980;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_12)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1259_reg_12974;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_11)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1258_reg_12968;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_10)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1257_reg_12962;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_F)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1256_reg_12956;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_E)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1255_reg_12950;
                elsif ((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_D)) then 
                    ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275 <= ref_patch_with_borde_1254_reg_12944;
                end if;
            end if; 
        end if;
    end process;

    i_0_i_1_reg_1800_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then 
                i_0_i_1_reg_1800 <= ap_const_lv7_0;
            elsif (((exitcond_i_1_reg_11436 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                i_0_i_1_reg_1800 <= i_1_reg_11440;
            end if; 
        end if;
    end process;

    i_0_i_2_reg_2032_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then 
                i_0_i_2_reg_2032 <= ap_const_lv7_0;
            elsif (((exitcond_i_2_reg_12214 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
                i_0_i_2_reg_2032 <= i_2_reg_12218;
            end if; 
        end if;
    end process;

    i_0_i_3_reg_2264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then 
                i_0_i_3_reg_2264 <= ap_const_lv7_0;
            elsif (((exitcond_i_3_reg_12992 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                i_0_i_3_reg_2264 <= i_3_reg_12996;
            end if; 
        end if;
    end process;

    i_0_i_reg_1568_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                i_0_i_reg_1568 <= ap_const_lv7_0;
            elsif (((exitcond_i_reg_10664 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                i_0_i_reg_1568 <= i_reg_10668;
            end if; 
        end if;
    end process;

    indvar1_reg_1464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_4256_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                indvar1_reg_1464 <= indvar_next1_fu_4262_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                indvar1_reg_1464 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar3_reg_1497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                indvar3_reg_1497 <= ap_const_lv4_0;
            elsif (((exitcond2_fu_6708_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
                indvar3_reg_1497 <= indvar_next2_fu_6714_p2;
            end if; 
        end if;
    end process;

    indvar6_reg_2436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state254) and (pos_r_BVALID = ap_const_logic_1))) then 
                indvar6_reg_2436 <= ap_const_lv6_0;
            elsif (((exitcond4_fu_9679_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
                indvar6_reg_2436 <= indvar_next3_fu_9685_p2;
            end if; 
        end if;
    end process;

    indvar8_reg_2447_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state261) and (debug_BVALID = ap_const_logic_1))) then 
                indvar8_reg_2447 <= ap_const_lv4_0;
            elsif (((exitcond5_fu_9733_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp8_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_enable_reg_pp8_iter0 = ap_const_logic_1))) then 
                indvar8_reg_2447 <= indvar_next4_fu_9739_p2;
            end if; 
        end if;
    end process;

    indvar_reg_1452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                indvar_reg_1452 <= ap_const_lv19_0;
            elsif (((exitcond3_reg_9916 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_reg_1452 <= indvar_next_reg_9920;
            end if; 
        end if;
    end process;

    phi_mul_reg_1475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_4256_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                phi_mul_reg_1475 <= next_mul_fu_4268_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                phi_mul_reg_1475 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    phi_urem_reg_1486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_4256_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                phi_urem_reg_1486 <= idx_urem_fu_4300_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                phi_urem_reg_1486 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    tmp_10_1_reg_1776_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_10_1_reg_1776 <= ap_const_lv32_0;
            elsif (((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001))) then 
                tmp_10_1_reg_1776 <= reg_4072;
            end if; 
        end if;
    end process;

    tmp_10_2_reg_2008_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_10_2_reg_2008 <= ap_const_lv32_0;
            elsif (((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001))) then 
                tmp_10_2_reg_2008 <= reg_4072;
            end if; 
        end if;
    end process;

    tmp_10_3_reg_2240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_10_3_reg_2240 <= ap_const_lv32_0;
            elsif (((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_const_boolean_0 = ap_block_pp6_stage3_11001))) then 
                tmp_10_3_reg_2240 <= reg_4072;
            end if; 
        end if;
    end process;

    tmp_11_1_reg_1788_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_11_1_reg_1788 <= ap_const_lv32_0;
            elsif (((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001))) then 
                tmp_11_1_reg_1788 <= reg_4064;
            end if; 
        end if;
    end process;

    tmp_11_2_reg_2020_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_11_2_reg_2020 <= ap_const_lv32_0;
            elsif (((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_11001))) then 
                tmp_11_2_reg_2020 <= reg_4064;
            end if; 
        end if;
    end process;

    tmp_11_3_reg_2252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_11_3_reg_2252 <= ap_const_lv32_0;
            elsif (((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_const_boolean_0 = ap_block_pp6_stage2_11001))) then 
                tmp_11_3_reg_2252 <= reg_4064;
            end if; 
        end if;
    end process;

    tmp_1_16_reg_1740_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_1_16_reg_1740 <= ap_const_lv32_0;
            elsif (((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001))) then 
                tmp_1_16_reg_1740 <= reg_4055;
            end if; 
        end if;
    end process;

    tmp_1_1_reg_1752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_1_1_reg_1752 <= ap_const_lv32_0;
            elsif (((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001))) then 
                tmp_1_1_reg_1752 <= grp_fu_2466_p2;
            end if; 
        end if;
    end process;

    tmp_1_2_reg_1984_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_1_2_reg_1984 <= ap_const_lv32_0;
            elsif (((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001))) then 
                tmp_1_2_reg_1984 <= grp_fu_2466_p2;
            end if; 
        end if;
    end process;

    tmp_1_3_reg_2216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_1_3_reg_2216 <= ap_const_lv32_0;
            elsif (((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_const_boolean_0 = ap_block_pp6_stage3_11001))) then 
                tmp_1_3_reg_2216 <= grp_fu_2466_p2;
            end if; 
        end if;
    end process;

    tmp_2_1_reg_1764_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_2_1_reg_1764 <= ap_const_lv32_0;
            elsif (((exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                tmp_2_1_reg_1764 <= reg_4028;
            end if; 
        end if;
    end process;

    tmp_2_20_reg_1972_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_2_20_reg_1972 <= ap_const_lv32_0;
            elsif (((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_11001))) then 
                tmp_2_20_reg_1972 <= reg_4055;
            end if; 
        end if;
    end process;

    tmp_2_2_reg_1996_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_2_2_reg_1996 <= ap_const_lv32_0;
            elsif (((exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
                tmp_2_2_reg_1996 <= reg_4028;
            end if; 
        end if;
    end process;

    tmp_2_3_reg_2228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_2_3_reg_2228 <= ap_const_lv32_0;
            elsif (((exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                tmp_2_3_reg_2228 <= reg_4028;
            end if; 
        end if;
    end process;

    tmp_3_24_reg_2204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then 
                tmp_3_24_reg_2204 <= ap_const_lv32_0;
            elsif (((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_const_boolean_0 = ap_block_pp6_stage1_11001))) then 
                tmp_3_24_reg_2204 <= reg_4055;
            end if; 
        end if;
    end process;

    tmp_5_reg_1556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                tmp_5_reg_1556 <= ap_const_lv32_0;
            elsif (((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2_11001))) then 
                tmp_5_reg_1556 <= reg_4064;
            end if; 
        end if;
    end process;

    tmp_7_reg_1520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                tmp_7_reg_1520 <= ap_const_lv32_0;
            elsif (((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3_11001))) then 
                tmp_7_reg_1520 <= grp_fu_2466_p2;
            end if; 
        end if;
    end process;

    tmp_8_reg_1532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                tmp_8_reg_1532 <= ap_const_lv32_0;
            elsif (((exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                tmp_8_reg_1532 <= reg_4028;
            end if; 
        end if;
    end process;

    tmp_9_reg_1544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                tmp_9_reg_1544 <= ap_const_lv32_0;
            elsif (((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3_11001))) then 
                tmp_9_reg_1544 <= reg_4072;
            end if; 
        end if;
    end process;

    tmp_s_reg_1508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                tmp_s_reg_1508 <= ap_const_lv32_0;
            elsif (((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_const_boolean_0 = ap_block_pp3_stage1_11001))) then 
                tmp_s_reg_1508 <= reg_4055;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                H_inv_0_0_reg_10712 <= grp_fu_2545_p2;
                H_inv_0_1_reg_10718 <= grp_fu_2549_p2;
                H_inv_0_2_reg_10724 <= grp_fu_2553_p2;
                H_inv_0_4_reg_10730 <= grp_fu_2557_p2;
                H_inv_0_5_reg_10735 <= grp_fu_2561_p2;
                H_inv_0_8_reg_10741 <= grp_fu_2565_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state132)) then
                H_inv_1_0_reg_11484 <= grp_fu_2545_p2;
                H_inv_1_1_reg_11490 <= grp_fu_2549_p2;
                H_inv_1_2_reg_11496 <= grp_fu_2553_p2;
                H_inv_1_4_reg_11502 <= grp_fu_2557_p2;
                H_inv_1_5_reg_11507 <= grp_fu_2561_p2;
                H_inv_1_8_reg_11513 <= grp_fu_2565_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state188)) then
                H_inv_2_0_reg_12262 <= grp_fu_2545_p2;
                H_inv_2_1_reg_12268 <= grp_fu_2549_p2;
                H_inv_2_2_reg_12274 <= grp_fu_2553_p2;
                H_inv_2_4_reg_12280 <= grp_fu_2557_p2;
                H_inv_2_5_reg_12285 <= grp_fu_2561_p2;
                H_inv_2_8_reg_12291 <= grp_fu_2565_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state244)) then
                H_inv_3_0_reg_13046 <= grp_fu_2545_p2;
                H_inv_3_1_reg_13052 <= grp_fu_2549_p2;
                H_inv_3_2_reg_13058 <= grp_fu_2553_p2;
                H_inv_3_4_reg_13064 <= grp_fu_2557_p2;
                H_inv_3_5_reg_13069 <= grp_fu_2561_p2;
                H_inv_3_8_reg_13075 <= grp_fu_2565_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond5_fu_9733_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp8_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0))) then
                UnifiedRetVal_i_reg_13103 <= UnifiedRetVal_i_fu_9871_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_9970 = ap_const_lv1_0) and (p_t2_reg_9966 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                cur_px_estimate_0_0 <= pos_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_9970 = ap_const_lv1_1) and (p_t2_reg_9966 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                cur_px_estimate_0_1 <= pos_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_9970 = ap_const_lv1_0) and (p_t2_reg_9966 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                cur_px_estimate_1_0 <= pos_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_9970 = ap_const_lv1_1) and (p_t2_reg_9966 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                cur_px_estimate_1_1 <= pos_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_9970 = ap_const_lv1_0) and (p_t2_reg_9966 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                cur_px_estimate_2_0 <= pos_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_9970 = ap_const_lv1_1) and (p_t2_reg_9966 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                cur_px_estimate_2_1 <= pos_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_9970 = ap_const_lv1_0) and (p_t2_reg_9966 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                cur_px_estimate_3_0 <= pos_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_85_reg_9970 = ap_const_lv1_1) and (p_t2_reg_9966 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                cur_px_estimate_3_1 <= pos_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    debug_addr_reg_9883(61 downto 0) <= tmp_2_fu_4193_p1(61 downto 0);
                patches_addr_reg_9904 <= ref_patch_with_border_ptr;
                    pos_addr_reg_9896(61 downto 0) <= tmp_84_fu_4213_p1(61 downto 0);
                pyr_addr_reg_9910 <= pyr_data_ptr;
                    tmp_84_cast_reg_9889(61 downto 0) <= tmp_84_cast_fu_4217_p1(61 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_fu_4256_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                div_t_reg_9944 <= phi_mul_reg_1475(17 downto 16);
                tmp_reg_9948 <= tmp_fu_4284_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond1_reg_9930 <= exitcond1_fu_4256_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond3_reg_9916 <= exitcond3_fu_4239_p2;
                exitcond3_reg_9916_pp0_iter1_reg <= exitcond3_reg_9916;
                indvar_reg_1452_pp0_iter1_reg <= indvar_reg_1452;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then
                exitcond4_reg_13080 <= exitcond4_fu_9679_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp8_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0))) then
                exitcond5_reg_13094 <= exitcond5_fu_9733_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                exitcond_i_1_reg_11436 <= exitcond_i_1_fu_7495_p2;
                exitcond_i_1_reg_11436_pp4_iter1_reg <= exitcond_i_1_reg_11436;
                exitcond_i_1_reg_11436_pp4_iter2_reg <= exitcond_i_1_reg_11436_pp4_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                exitcond_i_2_reg_12214 <= exitcond_i_2_fu_8223_p2;
                exitcond_i_2_reg_12214_pp5_iter1_reg <= exitcond_i_2_reg_12214;
                exitcond_i_2_reg_12214_pp5_iter2_reg <= exitcond_i_2_reg_12214_pp5_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                exitcond_i_3_reg_12992 <= exitcond_i_3_fu_8951_p2;
                exitcond_i_3_reg_12992_pp6_iter1_reg <= exitcond_i_3_reg_12992;
                exitcond_i_3_reg_12992_pp6_iter2_reg <= exitcond_i_3_reg_12992_pp6_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                exitcond_i_reg_10664 <= exitcond_i_fu_6782_p2;
                exitcond_i_reg_10664_pp3_iter1_reg <= exitcond_i_reg_10664;
                exitcond_i_reg_10664_pp3_iter2_reg <= exitcond_i_reg_10664_pp3_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                i_1_reg_11440 <= i_1_fu_7501_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                i_2_reg_12218 <= i_2_fu_8229_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                i_3_reg_12996 <= i_3_fu_8957_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                i_reg_10668 <= i_fu_6788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                indvar_next_reg_9920 <= indvar_next_fu_4245_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_6708_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                p_t2_reg_9966 <= indvar3_reg_1497(2 downto 1);
                tmp_85_reg_9970 <= tmp_85_fu_6730_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state135)) then
                    pos_addr_1_reg_11518(62 downto 0) <= cur_px_estimate_ptr6_fu_8213_p1(62 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state191)) then
                    pos_addr_2_reg_12296(62 downto 0) <= cur_px_estimate_ptr6_4_fu_8941_p1(62 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state211)) then
                    pos_addr_3_reg_13025(62 downto 0) <= cur_px_estimate_ptr6_5_fu_9634_p1(62 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_9916 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pyr_addr_read_reg_9925 <= pyr_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and ((((((((((((((((((((((((((((((tmp_reg_9948 = ap_const_lv7_7E) and (div_t_reg_9944 = ap_const_lv2_3)) or ((tmp_reg_9948 = ap_const_lv7_7F) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_7D) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_7C) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_7B) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_7A) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_79) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_78) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_77) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_76) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_75) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_74) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_73) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_72) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_71) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_70) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_6F) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_6E) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_6D) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_6C) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_6B) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_6A) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_69) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_68) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_67) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_66) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_65) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_64) and (div_t_reg_9944 = ap_const_lv2_3))) or ((tmp_reg_9948 = ap_const_lv7_63) and (div_t_reg_9944 = ap_const_lv2_3))))) then
                ref_patch_with_borde <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_62) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_1 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_9) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_10 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then
                ref_patch_with_borde_1000_reg_11754 <= ref_patch_with_borde_630;
                ref_patch_with_borde_1001_reg_11761 <= ref_patch_with_borde_631;
                ref_patch_with_borde_1002_reg_11768 <= ref_patch_with_borde_632;
                ref_patch_with_borde_1003_reg_11775 <= ref_patch_with_borde_634;
                ref_patch_with_borde_1004_reg_11782 <= ref_patch_with_borde_635;
                ref_patch_with_borde_1005_reg_11789 <= ref_patch_with_borde_636;
                ref_patch_with_borde_1006_reg_11796 <= ref_patch_with_borde_637;
                ref_patch_with_borde_1007_reg_11803 <= ref_patch_with_borde_638;
                ref_patch_with_borde_1008_reg_11810 <= ref_patch_with_borde_639;
                ref_patch_with_borde_1009_reg_11817 <= ref_patch_with_borde_640;
                ref_patch_with_borde_1010_reg_11824 <= ref_patch_with_borde_641;
                ref_patch_with_borde_1011_reg_11831 <= ref_patch_with_borde_642;
                ref_patch_with_borde_1012_reg_11838 <= ref_patch_with_borde_643;
                ref_patch_with_borde_1013_reg_11845 <= ref_patch_with_borde_645;
                ref_patch_with_borde_1014_reg_11852 <= ref_patch_with_borde_646;
                ref_patch_with_borde_1015_reg_11859 <= ref_patch_with_borde_647;
                ref_patch_with_borde_1016_reg_11866 <= ref_patch_with_borde_648;
                ref_patch_with_borde_1017_reg_11873 <= ref_patch_with_borde_649;
                ref_patch_with_borde_1018_reg_11880 <= ref_patch_with_borde_650;
                ref_patch_with_borde_1019_reg_11887 <= ref_patch_with_borde_651;
                ref_patch_with_borde_1020_reg_11894 <= ref_patch_with_borde_652;
                ref_patch_with_borde_1021_reg_11901 <= ref_patch_with_borde_653;
                ref_patch_with_borde_1022_reg_11908 <= ref_patch_with_borde_654;
                ref_patch_with_borde_1023_reg_11915 <= ref_patch_with_borde_656;
                ref_patch_with_borde_1024_reg_11922 <= ref_patch_with_borde_657;
                ref_patch_with_borde_1025_reg_11929 <= ref_patch_with_borde_658;
                ref_patch_with_borde_1026_reg_11936 <= ref_patch_with_borde_659;
                ref_patch_with_borde_1027_reg_11943 <= ref_patch_with_borde_660;
                ref_patch_with_borde_1028_reg_11950 <= ref_patch_with_borde_661;
                ref_patch_with_borde_1029_reg_11957 <= ref_patch_with_borde_662;
                ref_patch_with_borde_1030_reg_11964 <= ref_patch_with_borde_663;
                ref_patch_with_borde_1031_reg_11971 <= ref_patch_with_borde_664;
                ref_patch_with_borde_1032_reg_11978 <= ref_patch_with_borde_665;
                ref_patch_with_borde_1033_reg_11985 <= ref_patch_with_borde_667;
                ref_patch_with_borde_1034_reg_11992 <= ref_patch_with_borde_668;
                ref_patch_with_borde_1035_reg_11999 <= ref_patch_with_borde_669;
                ref_patch_with_borde_1036_reg_12006 <= ref_patch_with_borde_670;
                ref_patch_with_borde_1037_reg_12013 <= ref_patch_with_borde_671;
                ref_patch_with_borde_1038_reg_12020 <= ref_patch_with_borde_672;
                ref_patch_with_borde_1039_reg_12027 <= ref_patch_with_borde_673;
                ref_patch_with_borde_1040_reg_12034 <= ref_patch_with_borde_674;
                ref_patch_with_borde_1041_reg_12041 <= ref_patch_with_borde_675;
                ref_patch_with_borde_1042_reg_12048 <= ref_patch_with_borde_676;
                ref_patch_with_borde_1043_reg_12055 <= ref_patch_with_borde_678;
                ref_patch_with_borde_1044_reg_12062 <= ref_patch_with_borde_679;
                ref_patch_with_borde_1045_reg_12069 <= ref_patch_with_borde_680;
                ref_patch_with_borde_1046_reg_12076 <= ref_patch_with_borde_681;
                ref_patch_with_borde_1047_reg_12083 <= ref_patch_with_borde_682;
                ref_patch_with_borde_1048_reg_12090 <= ref_patch_with_borde_683;
                ref_patch_with_borde_1049_reg_12097 <= ref_patch_with_borde_684;
                ref_patch_with_borde_1050_reg_12104 <= ref_patch_with_borde_686;
                ref_patch_with_borde_1051_reg_12110 <= ref_patch_with_borde_689;
                ref_patch_with_borde_1052_reg_12115 <= ref_patch_with_borde_690;
                ref_patch_with_borde_1053_reg_12120 <= ref_patch_with_borde_691;
                ref_patch_with_borde_1054_reg_12125 <= ref_patch_with_borde_692;
                ref_patch_with_borde_1055_reg_12130 <= ref_patch_with_borde_693;
                ref_patch_with_borde_1056_reg_12135 <= ref_patch_with_borde_694;
                ref_patch_with_borde_1057_reg_12140 <= ref_patch_with_borde_695;
                ref_patch_with_borde_1058_reg_12145 <= ref_patch_with_borde_696;
                ref_patch_with_borde_1059_reg_12150 <= ref_patch_with_borde_601;
                ref_patch_with_borde_1060_reg_12155 <= ref_patch_with_borde_602;
                ref_patch_with_borde_1061_reg_12160 <= ref_patch_with_borde_603;
                ref_patch_with_borde_1062_reg_12166 <= ref_patch_with_borde_604;
                ref_patch_with_borde_1063_reg_12172 <= ref_patch_with_borde_605;
                ref_patch_with_borde_1064_reg_12178 <= ref_patch_with_borde_606;
                ref_patch_with_borde_1065_reg_12184 <= ref_patch_with_borde_607;
                ref_patch_with_borde_1066_reg_12190 <= ref_patch_with_borde_608;
                ref_patch_with_borde_1067_reg_12196 <= ref_patch_with_borde_609;
                ref_patch_with_borde_1068_reg_12202 <= ref_patch_with_borde_610;
                ref_patch_with_borde_1069_reg_12208 <= ref_patch_with_borde_612;
                ref_patch_with_borde_981_reg_11524 <= ref_patch_with_borde_687;
                ref_patch_with_borde_982_reg_11530 <= ref_patch_with_borde_685;
                ref_patch_with_borde_983_reg_11587 <= ref_patch_with_borde_697;
                ref_patch_with_borde_984_reg_11642 <= ref_patch_with_borde_613;
                ref_patch_with_borde_985_reg_11649 <= ref_patch_with_borde_614;
                ref_patch_with_borde_986_reg_11656 <= ref_patch_with_borde_615;
                ref_patch_with_borde_987_reg_11663 <= ref_patch_with_borde_616;
                ref_patch_with_borde_988_reg_11670 <= ref_patch_with_borde_617;
                ref_patch_with_borde_989_reg_11677 <= ref_patch_with_borde_618;
                ref_patch_with_borde_990_reg_11684 <= ref_patch_with_borde_619;
                ref_patch_with_borde_991_reg_11691 <= ref_patch_with_borde_620;
                ref_patch_with_borde_992_reg_11698 <= ref_patch_with_borde_621;
                ref_patch_with_borde_993_reg_11705 <= ref_patch_with_borde_623;
                ref_patch_with_borde_994_reg_11712 <= ref_patch_with_borde_624;
                ref_patch_with_borde_995_reg_11719 <= ref_patch_with_borde_625;
                ref_patch_with_borde_996_reg_11726 <= ref_patch_with_borde_626;
                ref_patch_with_borde_997_reg_11733 <= ref_patch_with_borde_627;
                ref_patch_with_borde_998_reg_11740 <= ref_patch_with_borde_628;
                ref_patch_with_borde_999_reg_11747 <= ref_patch_with_borde_629;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_1_fu_7495_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                ref_patch_with_borde_1071_reg_11449 <= ref_patch_with_borde_1071_fu_7591_p130;
                tmp_75_1_reg_11454 <= tmp_75_1_fu_8145_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_59) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_11 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then
                ref_patch_with_borde_1173_reg_12302 <= ref_patch_with_borde_11;
                ref_patch_with_borde_1174_reg_12308 <= ref_patch_with_borde_13;
                ref_patch_with_borde_1175_reg_12365 <= ref_patch_with_borde_1;
                ref_patch_with_borde_1176_reg_12420 <= ref_patch_with_borde_85;
                ref_patch_with_borde_1177_reg_12427 <= ref_patch_with_borde_84;
                ref_patch_with_borde_1178_reg_12434 <= ref_patch_with_borde_83;
                ref_patch_with_borde_1179_reg_12441 <= ref_patch_with_borde_82;
                ref_patch_with_borde_1180_reg_12448 <= ref_patch_with_borde_81;
                ref_patch_with_borde_1181_reg_12455 <= ref_patch_with_borde_80;
                ref_patch_with_borde_1182_reg_12462 <= ref_patch_with_borde_79;
                ref_patch_with_borde_1183_reg_12469 <= ref_patch_with_borde_78;
                ref_patch_with_borde_1184_reg_12476 <= ref_patch_with_borde_77;
                ref_patch_with_borde_1185_reg_12483 <= ref_patch_with_borde_75;
                ref_patch_with_borde_1186_reg_12490 <= ref_patch_with_borde_74;
                ref_patch_with_borde_1187_reg_12497 <= ref_patch_with_borde_73;
                ref_patch_with_borde_1188_reg_12504 <= ref_patch_with_borde_72;
                ref_patch_with_borde_1189_reg_12511 <= ref_patch_with_borde_71;
                ref_patch_with_borde_1190_reg_12518 <= ref_patch_with_borde_70;
                ref_patch_with_borde_1191_reg_12525 <= ref_patch_with_borde_69;
                ref_patch_with_borde_1192_reg_12532 <= ref_patch_with_borde_68;
                ref_patch_with_borde_1193_reg_12539 <= ref_patch_with_borde_67;
                ref_patch_with_borde_1194_reg_12546 <= ref_patch_with_borde_66;
                ref_patch_with_borde_1195_reg_12553 <= ref_patch_with_borde_64;
                ref_patch_with_borde_1196_reg_12560 <= ref_patch_with_borde_63;
                ref_patch_with_borde_1197_reg_12567 <= ref_patch_with_borde_62;
                ref_patch_with_borde_1198_reg_12574 <= ref_patch_with_borde_61;
                ref_patch_with_borde_1199_reg_12581 <= ref_patch_with_borde_60;
                ref_patch_with_borde_1200_reg_12588 <= ref_patch_with_borde_59;
                ref_patch_with_borde_1201_reg_12595 <= ref_patch_with_borde_58;
                ref_patch_with_borde_1202_reg_12602 <= ref_patch_with_borde_57;
                ref_patch_with_borde_1203_reg_12609 <= ref_patch_with_borde_56;
                ref_patch_with_borde_1204_reg_12616 <= ref_patch_with_borde_55;
                ref_patch_with_borde_1205_reg_12623 <= ref_patch_with_borde_53;
                ref_patch_with_borde_1206_reg_12630 <= ref_patch_with_borde_52;
                ref_patch_with_borde_1207_reg_12637 <= ref_patch_with_borde_51;
                ref_patch_with_borde_1208_reg_12644 <= ref_patch_with_borde_50;
                ref_patch_with_borde_1209_reg_12651 <= ref_patch_with_borde_49;
                ref_patch_with_borde_1210_reg_12658 <= ref_patch_with_borde_48;
                ref_patch_with_borde_1211_reg_12665 <= ref_patch_with_borde_47;
                ref_patch_with_borde_1212_reg_12672 <= ref_patch_with_borde_46;
                ref_patch_with_borde_1213_reg_12679 <= ref_patch_with_borde_45;
                ref_patch_with_borde_1214_reg_12686 <= ref_patch_with_borde_44;
                ref_patch_with_borde_1215_reg_12693 <= ref_patch_with_borde_42;
                ref_patch_with_borde_1216_reg_12700 <= ref_patch_with_borde_41;
                ref_patch_with_borde_1217_reg_12707 <= ref_patch_with_borde_40;
                ref_patch_with_borde_1218_reg_12714 <= ref_patch_with_borde_39;
                ref_patch_with_borde_1219_reg_12721 <= ref_patch_with_borde_38;
                ref_patch_with_borde_1220_reg_12728 <= ref_patch_with_borde_37;
                ref_patch_with_borde_1221_reg_12735 <= ref_patch_with_borde_36;
                ref_patch_with_borde_1222_reg_12742 <= ref_patch_with_borde_35;
                ref_patch_with_borde_1223_reg_12749 <= ref_patch_with_borde_34;
                ref_patch_with_borde_1224_reg_12756 <= ref_patch_with_borde_33;
                ref_patch_with_borde_1225_reg_12763 <= ref_patch_with_borde_31;
                ref_patch_with_borde_1226_reg_12770 <= ref_patch_with_borde_30;
                ref_patch_with_borde_1227_reg_12777 <= ref_patch_with_borde_29;
                ref_patch_with_borde_1228_reg_12784 <= ref_patch_with_borde_28;
                ref_patch_with_borde_1229_reg_12791 <= ref_patch_with_borde_27;
                ref_patch_with_borde_1230_reg_12798 <= ref_patch_with_borde_26;
                ref_patch_with_borde_1231_reg_12805 <= ref_patch_with_borde_25;
                ref_patch_with_borde_1232_reg_12812 <= ref_patch_with_borde_24;
                ref_patch_with_borde_1233_reg_12819 <= ref_patch_with_borde_23;
                ref_patch_with_borde_1234_reg_12826 <= ref_patch_with_borde_22;
                ref_patch_with_borde_1235_reg_12833 <= ref_patch_with_borde_20;
                ref_patch_with_borde_1236_reg_12840 <= ref_patch_with_borde_19;
                ref_patch_with_borde_1237_reg_12847 <= ref_patch_with_borde_18;
                ref_patch_with_borde_1238_reg_12854 <= ref_patch_with_borde_17;
                ref_patch_with_borde_1239_reg_12861 <= ref_patch_with_borde_16;
                ref_patch_with_borde_1240_reg_12868 <= ref_patch_with_borde_15;
                ref_patch_with_borde_1241_reg_12875 <= ref_patch_with_borde_14;
                ref_patch_with_borde_1242_reg_12882 <= ref_patch_with_borde_12;
                ref_patch_with_borde_1243_reg_12888 <= ref_patch_with_borde_9;
                ref_patch_with_borde_1244_reg_12893 <= ref_patch_with_borde_8;
                ref_patch_with_borde_1245_reg_12898 <= ref_patch_with_borde_7;
                ref_patch_with_borde_1246_reg_12903 <= ref_patch_with_borde_6;
                ref_patch_with_borde_1247_reg_12908 <= ref_patch_with_borde_5;
                ref_patch_with_borde_1248_reg_12913 <= ref_patch_with_borde_4;
                ref_patch_with_borde_1249_reg_12918 <= ref_patch_with_borde_3;
                ref_patch_with_borde_1250_reg_12923 <= ref_patch_with_borde_2;
                ref_patch_with_borde_1251_reg_12928 <= ref_patch_with_borde_97;
                ref_patch_with_borde_1252_reg_12933 <= ref_patch_with_borde_96;
                ref_patch_with_borde_1253_reg_12938 <= ref_patch_with_borde_95;
                ref_patch_with_borde_1254_reg_12944 <= ref_patch_with_borde_94;
                ref_patch_with_borde_1255_reg_12950 <= ref_patch_with_borde_93;
                ref_patch_with_borde_1256_reg_12956 <= ref_patch_with_borde_92;
                ref_patch_with_borde_1257_reg_12962 <= ref_patch_with_borde_91;
                ref_patch_with_borde_1258_reg_12968 <= ref_patch_with_borde_90;
                ref_patch_with_borde_1259_reg_12974 <= ref_patch_with_borde_89;
                ref_patch_with_borde_1260_reg_12980 <= ref_patch_with_borde_88;
                ref_patch_with_borde_1261_reg_12986 <= ref_patch_with_borde_86;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_58) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_12 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_2_fu_8223_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                ref_patch_with_borde_1263_reg_12227 <= ref_patch_with_borde_1263_fu_8319_p130;
                tmp_75_2_reg_12232 <= tmp_75_2_fu_8873_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_57) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_13 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_3_fu_8951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                ref_patch_with_borde_1366_reg_13005 <= ref_patch_with_borde_1366_fu_9047_p130;
                tmp_75_3_reg_13010 <= tmp_75_3_fu_9601_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_56) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_14 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_55) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_15 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_54) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_16 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_53) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_17 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_52) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_18 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_51) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_19 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_61) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_2 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_50) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_20 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_8) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_21 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4F) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_22 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4E) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_23 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4D) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_24 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4C) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_25 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4B) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_26 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4A) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_27 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_49) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_28 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_48) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_29 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_60) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_3 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_47) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_30 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_46) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_31 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_7) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_32 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_45) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_33 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_44) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_34 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_43) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_35 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_42) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_36 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_41) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_37 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_40) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_38 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3F) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_39 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_0) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_399 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5F) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_4 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3E) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_40 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_400 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_A) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_401 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_B) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_402 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_C) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_403 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_D) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_404 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_E) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_405 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_F) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_406 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_10) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_407 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_11) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_408 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_12) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_409 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3D) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_41 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_13) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_410 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_411 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_14) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_412 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_15) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_413 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_16) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_414 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_17) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_415 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_18) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_416 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_19) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_417 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1A) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_418 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1B) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_419 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3C) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_42 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1C) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_420 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1D) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_421 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_422 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1E) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_423 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1F) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_424 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_20) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_425 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_21) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_426 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_22) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_427 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_23) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_428 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_24) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_429 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_6) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_43 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_25) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_430 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_26) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_431 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_27) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_432 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_433 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_28) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_434 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_29) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_435 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2A) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_436 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2B) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_437 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2C) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_438 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2D) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_439 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3B) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_44 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2E) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_440 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2F) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_441 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_30) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_442 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_31) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_443 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_444 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_32) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_445 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_33) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_446 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_34) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_447 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_35) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_448 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_36) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_449 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3A) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_45 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_37) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_450 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_38) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_451 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_39) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_452 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3A) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_453 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3B) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_454 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_6) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_455 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3C) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_456 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3D) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_457 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3E) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_458 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3F) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_459 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_39) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_46 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_40) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_460 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_41) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_461 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_42) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_462 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_43) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_463 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_44) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_464 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_45) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_465 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_7) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_466 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_46) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_467 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_47) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_468 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_48) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_469 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_38) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_47 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_49) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_470 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4A) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_471 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4B) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_472 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4C) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_473 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4D) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_474 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4E) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_475 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4F) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_476 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_8) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_477 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_50) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_478 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_51) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_479 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_37) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_48 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_52) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_480 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_53) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_481 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_54) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_482 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_55) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_483 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_56) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_484 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_57) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_485 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_58) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_486 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_59) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_487 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_9) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_488 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5A) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_489 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_36) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_49 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5B) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_490 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5C) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_491 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5D) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_492 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5E) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_493 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5F) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_494 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_60) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_495 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_61) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_496 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_62) and (div_t_reg_9944 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_497 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and ((((((((((((((((((((((((((((((tmp_reg_9948 = ap_const_lv7_7E) and (div_t_reg_9944 = ap_const_lv2_0)) or ((tmp_reg_9948 = ap_const_lv7_7F) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_7D) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_7C) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_7B) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_7A) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_79) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_78) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_77) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_76) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_75) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_74) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_73) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_72) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_71) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_70) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_6F) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_6E) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_6D) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_6C) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_6B) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_6A) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_69) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_68) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_67) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_66) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_65) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_64) and (div_t_reg_9944 = ap_const_lv2_0))) or ((tmp_reg_9948 = ap_const_lv7_63) and (div_t_reg_9944 = ap_const_lv2_0))))) then
                ref_patch_with_borde_498 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_0) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_499 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5E) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_5 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_35) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_50 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_500 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_A) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_501 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_B) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_502 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_C) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_503 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_D) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_504 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_E) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_505 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_F) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_506 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_10) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_507 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_11) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_508 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_12) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_509 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_34) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_51 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_13) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_510 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_511 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_14) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_512 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_15) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_513 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_16) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_514 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_17) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_515 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_18) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_516 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_19) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_517 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1A) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_518 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1B) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_519 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_33) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_52 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1C) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_520 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1D) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_521 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_522 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1E) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_523 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1F) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_524 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_20) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_525 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_21) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_526 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_22) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_527 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_23) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_528 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_24) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_529 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_32) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_53 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_25) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_530 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_26) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_531 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_27) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_532 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_533 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_28) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_534 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_29) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_535 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2A) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_536 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2B) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_537 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2C) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_538 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2D) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_539 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_54 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2E) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_540 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2F) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_541 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_30) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_542 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_31) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_543 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_544 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_32) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_545 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_33) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_546 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_34) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_547 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_35) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_548 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_36) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_549 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_31) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_55 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_37) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_550 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_38) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_551 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_39) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_552 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3A) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_553 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3B) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_554 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_6) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_555 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3C) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_556 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3D) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_557 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3E) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_558 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3F) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_559 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_30) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_56 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_40) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_560 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_41) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_561 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_42) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_562 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_43) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_563 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_44) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_564 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_45) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_565 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_7) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_566 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_46) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_567 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_47) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_568 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_48) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_569 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2F) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_57 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_49) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_570 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4A) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_571 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4B) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_572 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4C) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_573 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4D) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_574 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4E) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_575 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4F) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_576 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_8) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_577 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_50) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_578 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_51) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_579 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2E) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_58 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_52) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_580 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_53) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_581 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_54) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_582 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_55) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_583 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_56) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_584 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_57) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_585 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_58) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_586 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_59) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_587 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_9) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_588 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5A) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_589 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2D) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_59 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5B) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_590 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5C) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_591 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5D) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_592 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5E) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_593 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5F) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_594 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_60) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_595 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_61) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_596 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_62) and (div_t_reg_9944 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_597 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and ((((((((((((((((((((((((((((((tmp_reg_9948 = ap_const_lv7_7E) and (div_t_reg_9944 = ap_const_lv2_1)) or ((tmp_reg_9948 = ap_const_lv7_7F) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_7D) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_7C) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_7B) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_7A) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_79) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_78) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_77) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_76) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_75) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_74) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_73) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_72) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_71) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_70) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_6F) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_6E) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_6D) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_6C) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_6B) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_6A) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_69) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_68) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_67) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_66) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_65) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_64) and (div_t_reg_9944 = ap_const_lv2_1))) or ((tmp_reg_9948 = ap_const_lv7_63) and (div_t_reg_9944 = ap_const_lv2_1))))) then
                ref_patch_with_borde_598 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_0) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_599 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5D) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_6 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2C) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_60 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_600 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_A) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_601 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_B) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_602 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_C) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_603 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_D) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_604 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_E) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_605 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_F) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_606 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_10) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_607 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_11) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_608 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_12) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_609 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2B) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_61 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_13) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_610 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_611 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_14) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_612 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_15) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_613 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_16) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_614 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_17) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_615 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_18) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_616 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_19) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_617 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1A) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_618 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1B) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_619 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2A) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_62 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1C) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_620 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1D) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_621 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_622 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1E) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_623 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1F) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_624 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_20) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_625 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_21) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_626 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_22) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_627 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_23) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_628 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_24) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_629 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_29) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_63 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_25) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_630 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_26) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_631 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_27) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_632 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_633 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_28) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_634 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_29) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_635 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2A) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_636 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2B) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_637 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2C) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_638 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2D) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_639 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_28) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_64 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2E) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_640 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2F) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_641 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_30) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_642 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_31) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_643 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_644 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_32) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_645 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_33) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_646 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_34) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_647 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_35) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_648 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_36) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_649 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_65 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_37) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_650 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_38) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_651 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_39) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_652 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3A) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_653 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3B) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_654 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_6) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_655 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3C) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_656 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3D) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_657 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3E) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_658 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3F) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_659 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_27) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_66 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_40) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_660 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_41) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_661 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_42) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_662 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_43) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_663 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_44) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_664 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_45) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_665 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_7) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_666 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_46) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_667 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_47) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_668 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_48) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_669 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_26) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_67 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_49) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_670 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4A) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_671 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4B) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_672 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4C) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_673 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4D) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_674 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4E) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_675 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_4F) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_676 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_8) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_677 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_50) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_678 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_51) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_679 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_25) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_68 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_52) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_680 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_53) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_681 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_54) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_682 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_55) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_683 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_56) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_684 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_57) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_685 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_58) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_686 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_59) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_687 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_9) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_688 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5A) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_689 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_24) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_69 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5B) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_690 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5C) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_691 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5D) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_692 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5E) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_693 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5F) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_694 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_60) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_695 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_61) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_696 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_62) and (div_t_reg_9944 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_697 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and ((((((((((((((((((((((((((((((tmp_reg_9948 = ap_const_lv7_7E) and (div_t_reg_9944 = ap_const_lv2_2)) or ((tmp_reg_9948 = ap_const_lv7_7F) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_7D) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_7C) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_7B) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_7A) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_79) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_78) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_77) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_76) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_75) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_74) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_73) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_72) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_71) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_70) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_6F) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_6E) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_6D) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_6C) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_6B) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_6A) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_69) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_68) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_67) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_66) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_65) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_64) and (div_t_reg_9944 = ap_const_lv2_2))) or ((tmp_reg_9948 = ap_const_lv7_63) and (div_t_reg_9944 = ap_const_lv2_2))))) then
                ref_patch_with_borde_698 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5C) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_7 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_23) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_70 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                ref_patch_with_borde_700_reg_9974 <= ref_patch_with_borde_487;
                ref_patch_with_borde_701_reg_9980 <= ref_patch_with_borde_485;
                ref_patch_with_borde_702_reg_10037 <= ref_patch_with_borde_497;
                ref_patch_with_borde_703_reg_10092 <= ref_patch_with_borde_413;
                ref_patch_with_borde_704_reg_10099 <= ref_patch_with_borde_414;
                ref_patch_with_borde_705_reg_10106 <= ref_patch_with_borde_415;
                ref_patch_with_borde_706_reg_10113 <= ref_patch_with_borde_416;
                ref_patch_with_borde_707_reg_10120 <= ref_patch_with_borde_417;
                ref_patch_with_borde_708_reg_10127 <= ref_patch_with_borde_418;
                ref_patch_with_borde_709_reg_10134 <= ref_patch_with_borde_419;
                ref_patch_with_borde_710_reg_10141 <= ref_patch_with_borde_420;
                ref_patch_with_borde_711_reg_10148 <= ref_patch_with_borde_421;
                ref_patch_with_borde_712_reg_10155 <= ref_patch_with_borde_423;
                ref_patch_with_borde_713_reg_10162 <= ref_patch_with_borde_424;
                ref_patch_with_borde_714_reg_10169 <= ref_patch_with_borde_425;
                ref_patch_with_borde_715_reg_10176 <= ref_patch_with_borde_426;
                ref_patch_with_borde_716_reg_10183 <= ref_patch_with_borde_427;
                ref_patch_with_borde_717_reg_10190 <= ref_patch_with_borde_428;
                ref_patch_with_borde_718_reg_10197 <= ref_patch_with_borde_429;
                ref_patch_with_borde_719_reg_10204 <= ref_patch_with_borde_430;
                ref_patch_with_borde_720_reg_10211 <= ref_patch_with_borde_431;
                ref_patch_with_borde_721_reg_10218 <= ref_patch_with_borde_432;
                ref_patch_with_borde_722_reg_10225 <= ref_patch_with_borde_434;
                ref_patch_with_borde_723_reg_10232 <= ref_patch_with_borde_435;
                ref_patch_with_borde_724_reg_10239 <= ref_patch_with_borde_436;
                ref_patch_with_borde_725_reg_10246 <= ref_patch_with_borde_437;
                ref_patch_with_borde_726_reg_10253 <= ref_patch_with_borde_438;
                ref_patch_with_borde_727_reg_10260 <= ref_patch_with_borde_439;
                ref_patch_with_borde_728_reg_10267 <= ref_patch_with_borde_440;
                ref_patch_with_borde_729_reg_10274 <= ref_patch_with_borde_441;
                ref_patch_with_borde_730_reg_10281 <= ref_patch_with_borde_442;
                ref_patch_with_borde_731_reg_10288 <= ref_patch_with_borde_443;
                ref_patch_with_borde_732_reg_10295 <= ref_patch_with_borde_445;
                ref_patch_with_borde_733_reg_10302 <= ref_patch_with_borde_446;
                ref_patch_with_borde_734_reg_10309 <= ref_patch_with_borde_447;
                ref_patch_with_borde_735_reg_10316 <= ref_patch_with_borde_448;
                ref_patch_with_borde_736_reg_10323 <= ref_patch_with_borde_449;
                ref_patch_with_borde_737_reg_10330 <= ref_patch_with_borde_450;
                ref_patch_with_borde_738_reg_10337 <= ref_patch_with_borde_451;
                ref_patch_with_borde_739_reg_10344 <= ref_patch_with_borde_452;
                ref_patch_with_borde_740_reg_10351 <= ref_patch_with_borde_453;
                ref_patch_with_borde_741_reg_10358 <= ref_patch_with_borde_454;
                ref_patch_with_borde_742_reg_10365 <= ref_patch_with_borde_456;
                ref_patch_with_borde_743_reg_10372 <= ref_patch_with_borde_457;
                ref_patch_with_borde_744_reg_10379 <= ref_patch_with_borde_458;
                ref_patch_with_borde_745_reg_10386 <= ref_patch_with_borde_459;
                ref_patch_with_borde_746_reg_10393 <= ref_patch_with_borde_460;
                ref_patch_with_borde_747_reg_10400 <= ref_patch_with_borde_461;
                ref_patch_with_borde_748_reg_10407 <= ref_patch_with_borde_462;
                ref_patch_with_borde_749_reg_10414 <= ref_patch_with_borde_463;
                ref_patch_with_borde_750_reg_10421 <= ref_patch_with_borde_464;
                ref_patch_with_borde_751_reg_10428 <= ref_patch_with_borde_465;
                ref_patch_with_borde_752_reg_10435 <= ref_patch_with_borde_467;
                ref_patch_with_borde_753_reg_10442 <= ref_patch_with_borde_468;
                ref_patch_with_borde_754_reg_10449 <= ref_patch_with_borde_469;
                ref_patch_with_borde_755_reg_10456 <= ref_patch_with_borde_470;
                ref_patch_with_borde_756_reg_10463 <= ref_patch_with_borde_471;
                ref_patch_with_borde_757_reg_10470 <= ref_patch_with_borde_472;
                ref_patch_with_borde_758_reg_10477 <= ref_patch_with_borde_473;
                ref_patch_with_borde_759_reg_10484 <= ref_patch_with_borde_474;
                ref_patch_with_borde_760_reg_10491 <= ref_patch_with_borde_475;
                ref_patch_with_borde_761_reg_10498 <= ref_patch_with_borde_476;
                ref_patch_with_borde_762_reg_10505 <= ref_patch_with_borde_478;
                ref_patch_with_borde_763_reg_10512 <= ref_patch_with_borde_479;
                ref_patch_with_borde_764_reg_10519 <= ref_patch_with_borde_480;
                ref_patch_with_borde_765_reg_10526 <= ref_patch_with_borde_481;
                ref_patch_with_borde_766_reg_10533 <= ref_patch_with_borde_482;
                ref_patch_with_borde_767_reg_10540 <= ref_patch_with_borde_483;
                ref_patch_with_borde_768_reg_10547 <= ref_patch_with_borde_484;
                ref_patch_with_borde_769_reg_10554 <= ref_patch_with_borde_486;
                ref_patch_with_borde_770_reg_10560 <= ref_patch_with_borde_489;
                ref_patch_with_borde_771_reg_10565 <= ref_patch_with_borde_490;
                ref_patch_with_borde_772_reg_10570 <= ref_patch_with_borde_491;
                ref_patch_with_borde_773_reg_10575 <= ref_patch_with_borde_492;
                ref_patch_with_borde_774_reg_10580 <= ref_patch_with_borde_493;
                ref_patch_with_borde_775_reg_10585 <= ref_patch_with_borde_494;
                ref_patch_with_borde_776_reg_10590 <= ref_patch_with_borde_495;
                ref_patch_with_borde_777_reg_10595 <= ref_patch_with_borde_496;
                ref_patch_with_borde_778_reg_10600 <= ref_patch_with_borde_401;
                ref_patch_with_borde_779_reg_10605 <= ref_patch_with_borde_402;
                ref_patch_with_borde_780_reg_10610 <= ref_patch_with_borde_403;
                ref_patch_with_borde_781_reg_10616 <= ref_patch_with_borde_404;
                ref_patch_with_borde_782_reg_10622 <= ref_patch_with_borde_405;
                ref_patch_with_borde_783_reg_10628 <= ref_patch_with_borde_406;
                ref_patch_with_borde_784_reg_10634 <= ref_patch_with_borde_407;
                ref_patch_with_borde_785_reg_10640 <= ref_patch_with_borde_408;
                ref_patch_with_borde_786_reg_10646 <= ref_patch_with_borde_409;
                ref_patch_with_borde_787_reg_10652 <= ref_patch_with_borde_410;
                ref_patch_with_borde_788_reg_10658 <= ref_patch_with_borde_412;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_22) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_71 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_21) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_72 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_20) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_73 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1F) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_74 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1E) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_75 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_3) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_76 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1D) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_77 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1C) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_78 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then
                ref_patch_with_borde_789_reg_10746 <= ref_patch_with_borde_587;
                ref_patch_with_borde_790_reg_10752 <= ref_patch_with_borde_585;
                ref_patch_with_borde_791_reg_10809 <= ref_patch_with_borde_597;
                ref_patch_with_borde_792_reg_10864 <= ref_patch_with_borde_513;
                ref_patch_with_borde_793_reg_10871 <= ref_patch_with_borde_514;
                ref_patch_with_borde_794_reg_10878 <= ref_patch_with_borde_515;
                ref_patch_with_borde_795_reg_10885 <= ref_patch_with_borde_516;
                ref_patch_with_borde_796_reg_10892 <= ref_patch_with_borde_517;
                ref_patch_with_borde_797_reg_10899 <= ref_patch_with_borde_518;
                ref_patch_with_borde_798_reg_10906 <= ref_patch_with_borde_519;
                ref_patch_with_borde_799_reg_10913 <= ref_patch_with_borde_520;
                ref_patch_with_borde_800_reg_10920 <= ref_patch_with_borde_521;
                ref_patch_with_borde_801_reg_10927 <= ref_patch_with_borde_523;
                ref_patch_with_borde_802_reg_10934 <= ref_patch_with_borde_524;
                ref_patch_with_borde_803_reg_10941 <= ref_patch_with_borde_525;
                ref_patch_with_borde_804_reg_10948 <= ref_patch_with_borde_526;
                ref_patch_with_borde_805_reg_10955 <= ref_patch_with_borde_527;
                ref_patch_with_borde_806_reg_10962 <= ref_patch_with_borde_528;
                ref_patch_with_borde_807_reg_10969 <= ref_patch_with_borde_529;
                ref_patch_with_borde_808_reg_10976 <= ref_patch_with_borde_530;
                ref_patch_with_borde_809_reg_10983 <= ref_patch_with_borde_531;
                ref_patch_with_borde_810_reg_10990 <= ref_patch_with_borde_532;
                ref_patch_with_borde_811_reg_10997 <= ref_patch_with_borde_534;
                ref_patch_with_borde_812_reg_11004 <= ref_patch_with_borde_535;
                ref_patch_with_borde_813_reg_11011 <= ref_patch_with_borde_536;
                ref_patch_with_borde_814_reg_11018 <= ref_patch_with_borde_537;
                ref_patch_with_borde_815_reg_11025 <= ref_patch_with_borde_538;
                ref_patch_with_borde_816_reg_11032 <= ref_patch_with_borde_539;
                ref_patch_with_borde_817_reg_11039 <= ref_patch_with_borde_540;
                ref_patch_with_borde_818_reg_11046 <= ref_patch_with_borde_541;
                ref_patch_with_borde_819_reg_11053 <= ref_patch_with_borde_542;
                ref_patch_with_borde_820_reg_11060 <= ref_patch_with_borde_543;
                ref_patch_with_borde_821_reg_11067 <= ref_patch_with_borde_545;
                ref_patch_with_borde_822_reg_11074 <= ref_patch_with_borde_546;
                ref_patch_with_borde_823_reg_11081 <= ref_patch_with_borde_547;
                ref_patch_with_borde_824_reg_11088 <= ref_patch_with_borde_548;
                ref_patch_with_borde_825_reg_11095 <= ref_patch_with_borde_549;
                ref_patch_with_borde_826_reg_11102 <= ref_patch_with_borde_550;
                ref_patch_with_borde_827_reg_11109 <= ref_patch_with_borde_551;
                ref_patch_with_borde_828_reg_11116 <= ref_patch_with_borde_552;
                ref_patch_with_borde_829_reg_11123 <= ref_patch_with_borde_553;
                ref_patch_with_borde_830_reg_11130 <= ref_patch_with_borde_554;
                ref_patch_with_borde_831_reg_11137 <= ref_patch_with_borde_556;
                ref_patch_with_borde_832_reg_11144 <= ref_patch_with_borde_557;
                ref_patch_with_borde_833_reg_11151 <= ref_patch_with_borde_558;
                ref_patch_with_borde_834_reg_11158 <= ref_patch_with_borde_559;
                ref_patch_with_borde_835_reg_11165 <= ref_patch_with_borde_560;
                ref_patch_with_borde_836_reg_11172 <= ref_patch_with_borde_561;
                ref_patch_with_borde_837_reg_11179 <= ref_patch_with_borde_562;
                ref_patch_with_borde_838_reg_11186 <= ref_patch_with_borde_563;
                ref_patch_with_borde_839_reg_11193 <= ref_patch_with_borde_564;
                ref_patch_with_borde_840_reg_11200 <= ref_patch_with_borde_565;
                ref_patch_with_borde_841_reg_11207 <= ref_patch_with_borde_567;
                ref_patch_with_borde_842_reg_11214 <= ref_patch_with_borde_568;
                ref_patch_with_borde_843_reg_11221 <= ref_patch_with_borde_569;
                ref_patch_with_borde_844_reg_11228 <= ref_patch_with_borde_570;
                ref_patch_with_borde_845_reg_11235 <= ref_patch_with_borde_571;
                ref_patch_with_borde_846_reg_11242 <= ref_patch_with_borde_572;
                ref_patch_with_borde_847_reg_11249 <= ref_patch_with_borde_573;
                ref_patch_with_borde_848_reg_11256 <= ref_patch_with_borde_574;
                ref_patch_with_borde_849_reg_11263 <= ref_patch_with_borde_575;
                ref_patch_with_borde_850_reg_11270 <= ref_patch_with_borde_576;
                ref_patch_with_borde_851_reg_11277 <= ref_patch_with_borde_578;
                ref_patch_with_borde_852_reg_11284 <= ref_patch_with_borde_579;
                ref_patch_with_borde_853_reg_11291 <= ref_patch_with_borde_580;
                ref_patch_with_borde_854_reg_11298 <= ref_patch_with_borde_581;
                ref_patch_with_borde_855_reg_11305 <= ref_patch_with_borde_582;
                ref_patch_with_borde_856_reg_11312 <= ref_patch_with_borde_583;
                ref_patch_with_borde_857_reg_11319 <= ref_patch_with_borde_584;
                ref_patch_with_borde_858_reg_11326 <= ref_patch_with_borde_586;
                ref_patch_with_borde_859_reg_11332 <= ref_patch_with_borde_589;
                ref_patch_with_borde_860_reg_11337 <= ref_patch_with_borde_590;
                ref_patch_with_borde_861_reg_11342 <= ref_patch_with_borde_591;
                ref_patch_with_borde_862_reg_11347 <= ref_patch_with_borde_592;
                ref_patch_with_borde_863_reg_11352 <= ref_patch_with_borde_593;
                ref_patch_with_borde_864_reg_11357 <= ref_patch_with_borde_594;
                ref_patch_with_borde_865_reg_11362 <= ref_patch_with_borde_595;
                ref_patch_with_borde_866_reg_11367 <= ref_patch_with_borde_596;
                ref_patch_with_borde_867_reg_11372 <= ref_patch_with_borde_501;
                ref_patch_with_borde_868_reg_11377 <= ref_patch_with_borde_502;
                ref_patch_with_borde_869_reg_11382 <= ref_patch_with_borde_503;
                ref_patch_with_borde_870_reg_11388 <= ref_patch_with_borde_504;
                ref_patch_with_borde_871_reg_11394 <= ref_patch_with_borde_505;
                ref_patch_with_borde_872_reg_11400 <= ref_patch_with_borde_506;
                ref_patch_with_borde_873_reg_11406 <= ref_patch_with_borde_507;
                ref_patch_with_borde_874_reg_11412 <= ref_patch_with_borde_508;
                ref_patch_with_borde_875_reg_11418 <= ref_patch_with_borde_509;
                ref_patch_with_borde_876_reg_11424 <= ref_patch_with_borde_510;
                ref_patch_with_borde_877_reg_11430 <= ref_patch_with_borde_512;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1B) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_79 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5B) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_8 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1A) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_80 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_19) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_81 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_18) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_82 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_17) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_83 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_16) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_84 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_15) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_85 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_14) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_86 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_2) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_87 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_6782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                ref_patch_with_borde_879_reg_10677 <= ref_patch_with_borde_879_fu_6878_p130;
                tmp_58_reg_10682 <= tmp_58_fu_7432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_13) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_88 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_12) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_89 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_5A) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_9 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_11) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_90 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_10) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_91 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_F) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_92 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_E) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_93 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_D) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_94 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_C) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_95 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_B) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_96 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_A) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_97 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_1) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_98 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_9948 = ap_const_lv7_0) and (div_t_reg_9944 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                ref_patch_with_borde_99 <= patches_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state244) or (ap_const_logic_1 = ap_CS_fsm_state188) or (ap_const_logic_1 = ap_CS_fsm_state132) or (ap_const_logic_1 = ap_CS_fsm_state76) or ((exitcond_i_3_reg_12992 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_const_boolean_0 = ap_block_pp6_stage3_11001)) or ((exitcond_i_2_reg_12214 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001)) or ((exitcond_i_1_reg_11436 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001)) or ((exitcond_i_reg_10664 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3_11001)))) then
                reg_3996 <= grp_fu_2569_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_i_3_reg_12992 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((exitcond_i_2_reg_12214 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((exitcond_i_1_reg_11436 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((exitcond_i_reg_10664 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then
                reg_4004 <= grp_fu_2569_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state156) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state44) or ((exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage1_11001)) or ((exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage1_11001)) or ((exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001)) or ((exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state212) and (ap_const_boolean_0 = ap_block_state212_io)))) then
                reg_4011 <= grp_fu_2494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state214) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state158) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage2_11001)) or ((exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage2_11001)) or ((exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001)) or ((exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage2_11001)))) then
                reg_4021 <= grp_fu_2494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state248) or (ap_const_logic_1 = ap_CS_fsm_state236) or (ap_const_logic_1 = ap_CS_fsm_state232) or (ap_const_logic_1 = ap_CS_fsm_state224) or (ap_const_logic_1 = ap_CS_fsm_state220) or (ap_const_logic_1 = ap_CS_fsm_state180) or (ap_const_logic_1 = ap_CS_fsm_state176) or (ap_const_logic_1 = ap_CS_fsm_state168) or (ap_const_logic_1 = ap_CS_fsm_state164) or (ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state60) or ((exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_const_boolean_0 = ap_block_pp6_stage3_11001)) or ((exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001)) or ((exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001)) or ((exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state192) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state136) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)))) then
                reg_4028 <= grp_fu_2458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state216) or (ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state48) or ((exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_const_boolean_0 = ap_block_pp6_stage3_11001)) or ((exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001)) or ((exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001)) or ((exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3_11001)))) then
                reg_4047 <= grp_fu_2494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state58) or ((exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then
                reg_4055 <= grp_fu_2458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state230) or (ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state62) or ((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_const_boolean_0 = ap_block_pp6_stage1_11001)) or ((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_11001)) or ((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001)) or ((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_const_boolean_0 = ap_block_pp3_stage1_11001)))) then
                reg_4064 <= grp_fu_2458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_const_boolean_0 = ap_block_pp6_stage2_11001)) or ((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_11001)) or ((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001)) or ((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2_11001)))) then
                reg_4072 <= grp_fu_2458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state230) or (ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state62) or ((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_const_boolean_0 = ap_block_pp6_stage3_11001)) or ((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001)) or ((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001)) or ((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3_11001)))) then
                reg_4080 <= grp_fu_2466_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state156) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state44) or ((ap_const_logic_1 = ap_CS_fsm_state212) and (ap_const_boolean_0 = ap_block_state212_io)))) then
                reg_4089 <= grp_fu_2500_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state156) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state44) or ((ap_const_logic_1 = ap_CS_fsm_state212) and (ap_const_boolean_0 = ap_block_state212_io)))) then
                reg_4101 <= grp_fu_2506_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state214) or (ap_const_logic_1 = ap_CS_fsm_state158) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state46))) then
                reg_4110 <= grp_fu_2500_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state216) or (ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state60))) then
                reg_4116 <= grp_fu_2500_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state216) or (ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state58))) then
                reg_4123 <= grp_fu_2506_p2;
                reg_4128 <= grp_fu_2515_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state218) or (ap_const_logic_1 = ap_CS_fsm_state162) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state50))) then
                reg_4133 <= grp_fu_2494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state224) or (ap_const_logic_1 = ap_CS_fsm_state220) or (ap_const_logic_1 = ap_CS_fsm_state168) or (ap_const_logic_1 = ap_CS_fsm_state164) or (ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state52))) then
                reg_4139 <= grp_fu_2494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state222) or (ap_const_logic_1 = ap_CS_fsm_state166) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state54))) then
                reg_4144 <= grp_fu_2494_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state58))) then
                reg_4150 <= grp_fu_2521_p2;
                reg_4155 <= grp_fu_2526_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state60))) then
                reg_4160 <= grp_fu_2515_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state230) or (ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state62))) then
                reg_4165 <= grp_fu_2471_p2;
                reg_4169 <= grp_fu_2475_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state232) or (ap_const_logic_1 = ap_CS_fsm_state176) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state64))) then
                reg_4174 <= grp_fu_2466_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state241) or (ap_const_logic_1 = ap_CS_fsm_state185) or (ap_const_logic_1 = ap_CS_fsm_state129) or (ap_const_logic_1 = ap_CS_fsm_state73))) then
                reg_4179 <= pyr_data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond4_fu_9679_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then
                tmp_81_reg_13089 <= tmp_81_fu_9691_p38;
            end if;
        end if;
    end process;
    debug_addr_reg_9883(63 downto 62) <= "00";
    tmp_84_cast_reg_9889(62) <= '0';
    pos_addr_reg_9896(63 downto 62) <= "00";
    pos_addr_1_reg_11518(63) <= '0';
    pos_addr_2_reg_12296(63) <= '0';
    pos_addr_3_reg_13025(63) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_enable_reg_pp0_iter1, ap_CS_fsm_state12, ap_CS_fsm_state21, ap_CS_fsm_state43, ap_CS_fsm_state81, ap_CS_fsm_state86, ap_CS_fsm_state257, ap_CS_fsm_state268, ap_CS_fsm_state136, ap_CS_fsm_state137, ap_CS_fsm_state142, ap_CS_fsm_state192, ap_CS_fsm_state193, ap_CS_fsm_state198, ap_CS_fsm_state212, ap_CS_fsm_state249, ap_CS_fsm_state254, ap_CS_fsm_state261, pos_r_BVALID, debug_BVALID, ap_CS_fsm_pp3_stage3, ap_enable_reg_pp3_iter0, ap_CS_fsm_pp4_stage3, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage3, ap_enable_reg_pp6_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_sig_ioackin_pos_r_AWREADY, ap_block_state212_io, ap_enable_reg_pp3_iter2, ap_enable_reg_pp4_iter2, ap_enable_reg_pp5_iter2, ap_enable_reg_pp6_iter2, transfer_pyr_read_read_fu_1284_p2, exitcond3_fu_4239_p2, ap_enable_reg_pp0_iter0, exitcond1_fu_4256_p2, ap_enable_reg_pp1_iter0, exitcond2_fu_6708_p2, ap_enable_reg_pp2_iter0, exitcond_i_fu_6782_p2, exitcond_i_1_fu_7495_p2, exitcond_i_2_fu_8223_p2, exitcond_i_3_fu_8951_p2, exitcond4_fu_9679_p2, ap_enable_reg_pp7_iter0, exitcond5_fu_9733_p2, ap_sig_ioackin_pos_r_WREADY, ap_enable_reg_pp8_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_block_pp3_stage3_subdone, ap_block_pp4_stage0_subdone, ap_block_pp4_stage3_subdone, ap_block_pp5_stage0_subdone, ap_block_pp5_stage3_subdone, ap_block_pp6_stage0_subdone, ap_block_pp6_stage3_subdone, ap_block_pp7_stage0_subdone, ap_block_pp8_stage0_subdone, ap_sig_ioackin_pyr_ARREADY, ap_sig_ioackin_patches_ARREADY, ap_sig_ioackin_pos_r_ARREADY, ap_block_pp3_stage1_subdone, ap_block_pp3_stage2_subdone, ap_block_pp4_stage1_subdone, ap_block_pp4_stage2_subdone, ap_block_pp5_stage1_subdone, ap_block_pp5_stage2_subdone, ap_block_pp6_stage1_subdone, ap_block_pp6_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((transfer_pyr_read_read_fu_1284_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((ap_start = ap_const_logic_1) and (transfer_pyr_read_read_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_sig_ioackin_pyr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond3_fu_4239_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond3_fu_4239_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_sig_ioackin_patches_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond1_fu_4256_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond1_fu_4256_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_sig_ioackin_pos_r_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (exitcond2_fu_6708_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (exitcond2_fu_6708_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (exitcond_i_fu_6782_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (exitcond_i_fu_6782_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_pp3_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage1;
                end if;
            when ap_ST_fsm_pp3_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp3_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage2;
                end if;
            when ap_ST_fsm_pp3_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage3_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp3_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage3_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage3;
                end if;
            when ap_ST_fsm_state43 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state43) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                if (((ap_sig_ioackin_pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state81))) then
                    ap_NS_fsm <= ap_ST_fsm_state82;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state86;
                end if;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (exitcond_i_1_fu_7495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (exitcond_i_1_fu_7495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state99;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_pp4_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                end if;
            when ap_ST_fsm_pp4_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
                end if;
            when ap_ST_fsm_pp4_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp4_stage3_subdone) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp4_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp4_stage3_subdone) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state99;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
                end if;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when ap_ST_fsm_state126 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state127 => 
                ap_NS_fsm <= ap_ST_fsm_state128;
            when ap_ST_fsm_state128 => 
                ap_NS_fsm <= ap_ST_fsm_state129;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state130;
            when ap_ST_fsm_state130 => 
                ap_NS_fsm <= ap_ST_fsm_state131;
            when ap_ST_fsm_state131 => 
                ap_NS_fsm <= ap_ST_fsm_state132;
            when ap_ST_fsm_state132 => 
                ap_NS_fsm <= ap_ST_fsm_state133;
            when ap_ST_fsm_state133 => 
                ap_NS_fsm <= ap_ST_fsm_state134;
            when ap_ST_fsm_state134 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state136;
            when ap_ST_fsm_state136 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state136) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state137;
                else
                    ap_NS_fsm <= ap_ST_fsm_state136;
                end if;
            when ap_ST_fsm_state137 => 
                if (((ap_sig_ioackin_pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state137))) then
                    ap_NS_fsm <= ap_ST_fsm_state138;
                else
                    ap_NS_fsm <= ap_ST_fsm_state137;
                end if;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state139;
            when ap_ST_fsm_state139 => 
                ap_NS_fsm <= ap_ST_fsm_state140;
            when ap_ST_fsm_state140 => 
                ap_NS_fsm <= ap_ST_fsm_state141;
            when ap_ST_fsm_state141 => 
                ap_NS_fsm <= ap_ST_fsm_state142;
            when ap_ST_fsm_state142 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state142;
                end if;
            when ap_ST_fsm_pp5_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (exitcond_i_2_fu_8223_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (exitcond_i_2_fu_8223_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state155;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_pp5_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
                end if;
            when ap_ST_fsm_pp5_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage2;
                end if;
            when ap_ST_fsm_pp5_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp5_stage3_subdone) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp5_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp5_stage3_subdone) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state155;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage3;
                end if;
            when ap_ST_fsm_state155 => 
                ap_NS_fsm <= ap_ST_fsm_state156;
            when ap_ST_fsm_state156 => 
                ap_NS_fsm <= ap_ST_fsm_state157;
            when ap_ST_fsm_state157 => 
                ap_NS_fsm <= ap_ST_fsm_state158;
            when ap_ST_fsm_state158 => 
                ap_NS_fsm <= ap_ST_fsm_state159;
            when ap_ST_fsm_state159 => 
                ap_NS_fsm <= ap_ST_fsm_state160;
            when ap_ST_fsm_state160 => 
                ap_NS_fsm <= ap_ST_fsm_state161;
            when ap_ST_fsm_state161 => 
                ap_NS_fsm <= ap_ST_fsm_state162;
            when ap_ST_fsm_state162 => 
                ap_NS_fsm <= ap_ST_fsm_state163;
            when ap_ST_fsm_state163 => 
                ap_NS_fsm <= ap_ST_fsm_state164;
            when ap_ST_fsm_state164 => 
                ap_NS_fsm <= ap_ST_fsm_state165;
            when ap_ST_fsm_state165 => 
                ap_NS_fsm <= ap_ST_fsm_state166;
            when ap_ST_fsm_state166 => 
                ap_NS_fsm <= ap_ST_fsm_state167;
            when ap_ST_fsm_state167 => 
                ap_NS_fsm <= ap_ST_fsm_state168;
            when ap_ST_fsm_state168 => 
                ap_NS_fsm <= ap_ST_fsm_state169;
            when ap_ST_fsm_state169 => 
                ap_NS_fsm <= ap_ST_fsm_state170;
            when ap_ST_fsm_state170 => 
                ap_NS_fsm <= ap_ST_fsm_state171;
            when ap_ST_fsm_state171 => 
                ap_NS_fsm <= ap_ST_fsm_state172;
            when ap_ST_fsm_state172 => 
                ap_NS_fsm <= ap_ST_fsm_state173;
            when ap_ST_fsm_state173 => 
                ap_NS_fsm <= ap_ST_fsm_state174;
            when ap_ST_fsm_state174 => 
                ap_NS_fsm <= ap_ST_fsm_state175;
            when ap_ST_fsm_state175 => 
                ap_NS_fsm <= ap_ST_fsm_state176;
            when ap_ST_fsm_state176 => 
                ap_NS_fsm <= ap_ST_fsm_state177;
            when ap_ST_fsm_state177 => 
                ap_NS_fsm <= ap_ST_fsm_state178;
            when ap_ST_fsm_state178 => 
                ap_NS_fsm <= ap_ST_fsm_state179;
            when ap_ST_fsm_state179 => 
                ap_NS_fsm <= ap_ST_fsm_state180;
            when ap_ST_fsm_state180 => 
                ap_NS_fsm <= ap_ST_fsm_state181;
            when ap_ST_fsm_state181 => 
                ap_NS_fsm <= ap_ST_fsm_state182;
            when ap_ST_fsm_state182 => 
                ap_NS_fsm <= ap_ST_fsm_state183;
            when ap_ST_fsm_state183 => 
                ap_NS_fsm <= ap_ST_fsm_state184;
            when ap_ST_fsm_state184 => 
                ap_NS_fsm <= ap_ST_fsm_state185;
            when ap_ST_fsm_state185 => 
                ap_NS_fsm <= ap_ST_fsm_state186;
            when ap_ST_fsm_state186 => 
                ap_NS_fsm <= ap_ST_fsm_state187;
            when ap_ST_fsm_state187 => 
                ap_NS_fsm <= ap_ST_fsm_state188;
            when ap_ST_fsm_state188 => 
                ap_NS_fsm <= ap_ST_fsm_state189;
            when ap_ST_fsm_state189 => 
                ap_NS_fsm <= ap_ST_fsm_state190;
            when ap_ST_fsm_state190 => 
                ap_NS_fsm <= ap_ST_fsm_state191;
            when ap_ST_fsm_state191 => 
                ap_NS_fsm <= ap_ST_fsm_state192;
            when ap_ST_fsm_state192 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state192) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state193;
                else
                    ap_NS_fsm <= ap_ST_fsm_state192;
                end if;
            when ap_ST_fsm_state193 => 
                if (((ap_sig_ioackin_pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state193))) then
                    ap_NS_fsm <= ap_ST_fsm_state194;
                else
                    ap_NS_fsm <= ap_ST_fsm_state193;
                end if;
            when ap_ST_fsm_state194 => 
                ap_NS_fsm <= ap_ST_fsm_state195;
            when ap_ST_fsm_state195 => 
                ap_NS_fsm <= ap_ST_fsm_state196;
            when ap_ST_fsm_state196 => 
                ap_NS_fsm <= ap_ST_fsm_state197;
            when ap_ST_fsm_state197 => 
                ap_NS_fsm <= ap_ST_fsm_state198;
            when ap_ST_fsm_state198 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state198;
                end if;
            when ap_ST_fsm_pp6_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (exitcond_i_3_fu_8951_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (exitcond_i_3_fu_8951_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state211;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                end if;
            when ap_ST_fsm_pp6_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp6_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage1;
                end if;
            when ap_ST_fsm_pp6_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp6_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage2;
                end if;
            when ap_ST_fsm_pp6_stage3 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp6_stage3_subdone) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp6_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp6_stage3_subdone) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state211;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage3;
                end if;
            when ap_ST_fsm_state211 => 
                ap_NS_fsm <= ap_ST_fsm_state212;
            when ap_ST_fsm_state212 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state212) and (ap_const_boolean_0 = ap_block_state212_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state213;
                else
                    ap_NS_fsm <= ap_ST_fsm_state212;
                end if;
            when ap_ST_fsm_state213 => 
                ap_NS_fsm <= ap_ST_fsm_state214;
            when ap_ST_fsm_state214 => 
                ap_NS_fsm <= ap_ST_fsm_state215;
            when ap_ST_fsm_state215 => 
                ap_NS_fsm <= ap_ST_fsm_state216;
            when ap_ST_fsm_state216 => 
                ap_NS_fsm <= ap_ST_fsm_state217;
            when ap_ST_fsm_state217 => 
                ap_NS_fsm <= ap_ST_fsm_state218;
            when ap_ST_fsm_state218 => 
                ap_NS_fsm <= ap_ST_fsm_state219;
            when ap_ST_fsm_state219 => 
                ap_NS_fsm <= ap_ST_fsm_state220;
            when ap_ST_fsm_state220 => 
                ap_NS_fsm <= ap_ST_fsm_state221;
            when ap_ST_fsm_state221 => 
                ap_NS_fsm <= ap_ST_fsm_state222;
            when ap_ST_fsm_state222 => 
                ap_NS_fsm <= ap_ST_fsm_state223;
            when ap_ST_fsm_state223 => 
                ap_NS_fsm <= ap_ST_fsm_state224;
            when ap_ST_fsm_state224 => 
                ap_NS_fsm <= ap_ST_fsm_state225;
            when ap_ST_fsm_state225 => 
                ap_NS_fsm <= ap_ST_fsm_state226;
            when ap_ST_fsm_state226 => 
                ap_NS_fsm <= ap_ST_fsm_state227;
            when ap_ST_fsm_state227 => 
                ap_NS_fsm <= ap_ST_fsm_state228;
            when ap_ST_fsm_state228 => 
                ap_NS_fsm <= ap_ST_fsm_state229;
            when ap_ST_fsm_state229 => 
                ap_NS_fsm <= ap_ST_fsm_state230;
            when ap_ST_fsm_state230 => 
                ap_NS_fsm <= ap_ST_fsm_state231;
            when ap_ST_fsm_state231 => 
                ap_NS_fsm <= ap_ST_fsm_state232;
            when ap_ST_fsm_state232 => 
                ap_NS_fsm <= ap_ST_fsm_state233;
            when ap_ST_fsm_state233 => 
                ap_NS_fsm <= ap_ST_fsm_state234;
            when ap_ST_fsm_state234 => 
                ap_NS_fsm <= ap_ST_fsm_state235;
            when ap_ST_fsm_state235 => 
                ap_NS_fsm <= ap_ST_fsm_state236;
            when ap_ST_fsm_state236 => 
                ap_NS_fsm <= ap_ST_fsm_state237;
            when ap_ST_fsm_state237 => 
                ap_NS_fsm <= ap_ST_fsm_state238;
            when ap_ST_fsm_state238 => 
                ap_NS_fsm <= ap_ST_fsm_state239;
            when ap_ST_fsm_state239 => 
                ap_NS_fsm <= ap_ST_fsm_state240;
            when ap_ST_fsm_state240 => 
                ap_NS_fsm <= ap_ST_fsm_state241;
            when ap_ST_fsm_state241 => 
                ap_NS_fsm <= ap_ST_fsm_state242;
            when ap_ST_fsm_state242 => 
                ap_NS_fsm <= ap_ST_fsm_state243;
            when ap_ST_fsm_state243 => 
                ap_NS_fsm <= ap_ST_fsm_state244;
            when ap_ST_fsm_state244 => 
                ap_NS_fsm <= ap_ST_fsm_state245;
            when ap_ST_fsm_state245 => 
                ap_NS_fsm <= ap_ST_fsm_state246;
            when ap_ST_fsm_state246 => 
                ap_NS_fsm <= ap_ST_fsm_state247;
            when ap_ST_fsm_state247 => 
                ap_NS_fsm <= ap_ST_fsm_state248;
            when ap_ST_fsm_state248 => 
                ap_NS_fsm <= ap_ST_fsm_state249;
            when ap_ST_fsm_state249 => 
                if (((ap_sig_ioackin_pos_r_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state249))) then
                    ap_NS_fsm <= ap_ST_fsm_state250;
                else
                    ap_NS_fsm <= ap_ST_fsm_state249;
                end if;
            when ap_ST_fsm_state250 => 
                ap_NS_fsm <= ap_ST_fsm_state251;
            when ap_ST_fsm_state251 => 
                ap_NS_fsm <= ap_ST_fsm_state252;
            when ap_ST_fsm_state252 => 
                ap_NS_fsm <= ap_ST_fsm_state253;
            when ap_ST_fsm_state253 => 
                ap_NS_fsm <= ap_ST_fsm_state254;
            when ap_ST_fsm_state254 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state254) and (pos_r_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state254;
                end if;
            when ap_ST_fsm_pp7_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp7_stage0_subdone) and (exitcond4_fu_9679_p2 = ap_const_lv1_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp7_stage0_subdone) and (exitcond4_fu_9679_p2 = ap_const_lv1_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state257;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                end if;
            when ap_ST_fsm_state257 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state257) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state258;
                else
                    ap_NS_fsm <= ap_ST_fsm_state257;
                end if;
            when ap_ST_fsm_state258 => 
                ap_NS_fsm <= ap_ST_fsm_state259;
            when ap_ST_fsm_state259 => 
                ap_NS_fsm <= ap_ST_fsm_state260;
            when ap_ST_fsm_state260 => 
                ap_NS_fsm <= ap_ST_fsm_state261;
            when ap_ST_fsm_state261 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state261) and (debug_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp8_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state261;
                end if;
            when ap_ST_fsm_pp8_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp8_stage0_subdone) and (exitcond5_fu_9733_p2 = ap_const_lv1_1) and (ap_enable_reg_pp8_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp8_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp8_stage0_subdone) and (exitcond5_fu_9733_p2 = ap_const_lv1_1) and (ap_enable_reg_pp8_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state264;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp8_stage0;
                end if;
            when ap_ST_fsm_state264 => 
                ap_NS_fsm <= ap_ST_fsm_state265;
            when ap_ST_fsm_state265 => 
                ap_NS_fsm <= ap_ST_fsm_state266;
            when ap_ST_fsm_state266 => 
                ap_NS_fsm <= ap_ST_fsm_state267;
            when ap_ST_fsm_state267 => 
                ap_NS_fsm <= ap_ST_fsm_state268;
            when ap_ST_fsm_state268 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state268) and (pos_r_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state268;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    UnifiedRetVal_i_fu_9871_p3 <= 
        cur_px_estimate_3_0 when (sel_tmp12_i_fu_9865_p2(0) = '1') else 
        sel_tmp11_i_fu_9857_p3;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(24);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(26);
    ap_CS_fsm_pp3_stage1 <= ap_CS_fsm(27);
    ap_CS_fsm_pp3_stage2 <= ap_CS_fsm(28);
    ap_CS_fsm_pp3_stage3 <= ap_CS_fsm(29);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(74);
    ap_CS_fsm_pp4_stage1 <= ap_CS_fsm(75);
    ap_CS_fsm_pp4_stage2 <= ap_CS_fsm(76);
    ap_CS_fsm_pp4_stage3 <= ap_CS_fsm(77);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(122);
    ap_CS_fsm_pp5_stage1 <= ap_CS_fsm(123);
    ap_CS_fsm_pp5_stage2 <= ap_CS_fsm(124);
    ap_CS_fsm_pp5_stage3 <= ap_CS_fsm(125);
    ap_CS_fsm_pp6_stage0 <= ap_CS_fsm(170);
    ap_CS_fsm_pp6_stage1 <= ap_CS_fsm(171);
    ap_CS_fsm_pp6_stage2 <= ap_CS_fsm(172);
    ap_CS_fsm_pp6_stage3 <= ap_CS_fsm(173);
    ap_CS_fsm_pp7_stage0 <= ap_CS_fsm(218);
    ap_CS_fsm_pp8_stage0 <= ap_CS_fsm(224);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state100 <= ap_CS_fsm(79);
    ap_CS_fsm_state101 <= ap_CS_fsm(80);
    ap_CS_fsm_state102 <= ap_CS_fsm(81);
    ap_CS_fsm_state103 <= ap_CS_fsm(82);
    ap_CS_fsm_state104 <= ap_CS_fsm(83);
    ap_CS_fsm_state105 <= ap_CS_fsm(84);
    ap_CS_fsm_state106 <= ap_CS_fsm(85);
    ap_CS_fsm_state107 <= ap_CS_fsm(86);
    ap_CS_fsm_state108 <= ap_CS_fsm(87);
    ap_CS_fsm_state109 <= ap_CS_fsm(88);
    ap_CS_fsm_state110 <= ap_CS_fsm(89);
    ap_CS_fsm_state111 <= ap_CS_fsm(90);
    ap_CS_fsm_state112 <= ap_CS_fsm(91);
    ap_CS_fsm_state113 <= ap_CS_fsm(92);
    ap_CS_fsm_state114 <= ap_CS_fsm(93);
    ap_CS_fsm_state115 <= ap_CS_fsm(94);
    ap_CS_fsm_state116 <= ap_CS_fsm(95);
    ap_CS_fsm_state117 <= ap_CS_fsm(96);
    ap_CS_fsm_state118 <= ap_CS_fsm(97);
    ap_CS_fsm_state119 <= ap_CS_fsm(98);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state120 <= ap_CS_fsm(99);
    ap_CS_fsm_state121 <= ap_CS_fsm(100);
    ap_CS_fsm_state122 <= ap_CS_fsm(101);
    ap_CS_fsm_state123 <= ap_CS_fsm(102);
    ap_CS_fsm_state124 <= ap_CS_fsm(103);
    ap_CS_fsm_state125 <= ap_CS_fsm(104);
    ap_CS_fsm_state128 <= ap_CS_fsm(107);
    ap_CS_fsm_state129 <= ap_CS_fsm(108);
    ap_CS_fsm_state130 <= ap_CS_fsm(109);
    ap_CS_fsm_state132 <= ap_CS_fsm(111);
    ap_CS_fsm_state133 <= ap_CS_fsm(112);
    ap_CS_fsm_state134 <= ap_CS_fsm(113);
    ap_CS_fsm_state135 <= ap_CS_fsm(114);
    ap_CS_fsm_state136 <= ap_CS_fsm(115);
    ap_CS_fsm_state137 <= ap_CS_fsm(116);
    ap_CS_fsm_state142 <= ap_CS_fsm(121);
    ap_CS_fsm_state155 <= ap_CS_fsm(126);
    ap_CS_fsm_state156 <= ap_CS_fsm(127);
    ap_CS_fsm_state157 <= ap_CS_fsm(128);
    ap_CS_fsm_state158 <= ap_CS_fsm(129);
    ap_CS_fsm_state159 <= ap_CS_fsm(130);
    ap_CS_fsm_state160 <= ap_CS_fsm(131);
    ap_CS_fsm_state161 <= ap_CS_fsm(132);
    ap_CS_fsm_state162 <= ap_CS_fsm(133);
    ap_CS_fsm_state163 <= ap_CS_fsm(134);
    ap_CS_fsm_state164 <= ap_CS_fsm(135);
    ap_CS_fsm_state165 <= ap_CS_fsm(136);
    ap_CS_fsm_state166 <= ap_CS_fsm(137);
    ap_CS_fsm_state167 <= ap_CS_fsm(138);
    ap_CS_fsm_state168 <= ap_CS_fsm(139);
    ap_CS_fsm_state169 <= ap_CS_fsm(140);
    ap_CS_fsm_state170 <= ap_CS_fsm(141);
    ap_CS_fsm_state171 <= ap_CS_fsm(142);
    ap_CS_fsm_state172 <= ap_CS_fsm(143);
    ap_CS_fsm_state173 <= ap_CS_fsm(144);
    ap_CS_fsm_state174 <= ap_CS_fsm(145);
    ap_CS_fsm_state175 <= ap_CS_fsm(146);
    ap_CS_fsm_state176 <= ap_CS_fsm(147);
    ap_CS_fsm_state177 <= ap_CS_fsm(148);
    ap_CS_fsm_state178 <= ap_CS_fsm(149);
    ap_CS_fsm_state179 <= ap_CS_fsm(150);
    ap_CS_fsm_state18 <= ap_CS_fsm(15);
    ap_CS_fsm_state180 <= ap_CS_fsm(151);
    ap_CS_fsm_state181 <= ap_CS_fsm(152);
    ap_CS_fsm_state184 <= ap_CS_fsm(155);
    ap_CS_fsm_state185 <= ap_CS_fsm(156);
    ap_CS_fsm_state186 <= ap_CS_fsm(157);
    ap_CS_fsm_state188 <= ap_CS_fsm(159);
    ap_CS_fsm_state189 <= ap_CS_fsm(160);
    ap_CS_fsm_state190 <= ap_CS_fsm(161);
    ap_CS_fsm_state191 <= ap_CS_fsm(162);
    ap_CS_fsm_state192 <= ap_CS_fsm(163);
    ap_CS_fsm_state193 <= ap_CS_fsm(164);
    ap_CS_fsm_state198 <= ap_CS_fsm(169);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state21 <= ap_CS_fsm(17);
    ap_CS_fsm_state211 <= ap_CS_fsm(174);
    ap_CS_fsm_state212 <= ap_CS_fsm(175);
    ap_CS_fsm_state213 <= ap_CS_fsm(176);
    ap_CS_fsm_state214 <= ap_CS_fsm(177);
    ap_CS_fsm_state215 <= ap_CS_fsm(178);
    ap_CS_fsm_state216 <= ap_CS_fsm(179);
    ap_CS_fsm_state217 <= ap_CS_fsm(180);
    ap_CS_fsm_state218 <= ap_CS_fsm(181);
    ap_CS_fsm_state219 <= ap_CS_fsm(182);
    ap_CS_fsm_state220 <= ap_CS_fsm(183);
    ap_CS_fsm_state221 <= ap_CS_fsm(184);
    ap_CS_fsm_state222 <= ap_CS_fsm(185);
    ap_CS_fsm_state223 <= ap_CS_fsm(186);
    ap_CS_fsm_state224 <= ap_CS_fsm(187);
    ap_CS_fsm_state225 <= ap_CS_fsm(188);
    ap_CS_fsm_state226 <= ap_CS_fsm(189);
    ap_CS_fsm_state227 <= ap_CS_fsm(190);
    ap_CS_fsm_state228 <= ap_CS_fsm(191);
    ap_CS_fsm_state229 <= ap_CS_fsm(192);
    ap_CS_fsm_state230 <= ap_CS_fsm(193);
    ap_CS_fsm_state231 <= ap_CS_fsm(194);
    ap_CS_fsm_state232 <= ap_CS_fsm(195);
    ap_CS_fsm_state233 <= ap_CS_fsm(196);
    ap_CS_fsm_state234 <= ap_CS_fsm(197);
    ap_CS_fsm_state235 <= ap_CS_fsm(198);
    ap_CS_fsm_state236 <= ap_CS_fsm(199);
    ap_CS_fsm_state237 <= ap_CS_fsm(200);
    ap_CS_fsm_state240 <= ap_CS_fsm(203);
    ap_CS_fsm_state241 <= ap_CS_fsm(204);
    ap_CS_fsm_state242 <= ap_CS_fsm(205);
    ap_CS_fsm_state244 <= ap_CS_fsm(207);
    ap_CS_fsm_state245 <= ap_CS_fsm(208);
    ap_CS_fsm_state246 <= ap_CS_fsm(209);
    ap_CS_fsm_state247 <= ap_CS_fsm(210);
    ap_CS_fsm_state248 <= ap_CS_fsm(211);
    ap_CS_fsm_state249 <= ap_CS_fsm(212);
    ap_CS_fsm_state254 <= ap_CS_fsm(217);
    ap_CS_fsm_state257 <= ap_CS_fsm(219);
    ap_CS_fsm_state261 <= ap_CS_fsm(223);
    ap_CS_fsm_state268 <= ap_CS_fsm(229);
    ap_CS_fsm_state27 <= ap_CS_fsm(23);
    ap_CS_fsm_state30 <= ap_CS_fsm(25);
    ap_CS_fsm_state43 <= ap_CS_fsm(30);
    ap_CS_fsm_state44 <= ap_CS_fsm(31);
    ap_CS_fsm_state45 <= ap_CS_fsm(32);
    ap_CS_fsm_state46 <= ap_CS_fsm(33);
    ap_CS_fsm_state47 <= ap_CS_fsm(34);
    ap_CS_fsm_state48 <= ap_CS_fsm(35);
    ap_CS_fsm_state49 <= ap_CS_fsm(36);
    ap_CS_fsm_state50 <= ap_CS_fsm(37);
    ap_CS_fsm_state51 <= ap_CS_fsm(38);
    ap_CS_fsm_state52 <= ap_CS_fsm(39);
    ap_CS_fsm_state53 <= ap_CS_fsm(40);
    ap_CS_fsm_state54 <= ap_CS_fsm(41);
    ap_CS_fsm_state55 <= ap_CS_fsm(42);
    ap_CS_fsm_state56 <= ap_CS_fsm(43);
    ap_CS_fsm_state57 <= ap_CS_fsm(44);
    ap_CS_fsm_state58 <= ap_CS_fsm(45);
    ap_CS_fsm_state59 <= ap_CS_fsm(46);
    ap_CS_fsm_state60 <= ap_CS_fsm(47);
    ap_CS_fsm_state61 <= ap_CS_fsm(48);
    ap_CS_fsm_state62 <= ap_CS_fsm(49);
    ap_CS_fsm_state63 <= ap_CS_fsm(50);
    ap_CS_fsm_state64 <= ap_CS_fsm(51);
    ap_CS_fsm_state65 <= ap_CS_fsm(52);
    ap_CS_fsm_state66 <= ap_CS_fsm(53);
    ap_CS_fsm_state67 <= ap_CS_fsm(54);
    ap_CS_fsm_state68 <= ap_CS_fsm(55);
    ap_CS_fsm_state69 <= ap_CS_fsm(56);
    ap_CS_fsm_state72 <= ap_CS_fsm(59);
    ap_CS_fsm_state73 <= ap_CS_fsm(60);
    ap_CS_fsm_state74 <= ap_CS_fsm(61);
    ap_CS_fsm_state76 <= ap_CS_fsm(63);
    ap_CS_fsm_state77 <= ap_CS_fsm(64);
    ap_CS_fsm_state78 <= ap_CS_fsm(65);
    ap_CS_fsm_state79 <= ap_CS_fsm(66);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(67);
    ap_CS_fsm_state81 <= ap_CS_fsm(68);
    ap_CS_fsm_state86 <= ap_CS_fsm(73);
    ap_CS_fsm_state99 <= ap_CS_fsm(78);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond3_reg_9916, pyr_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond3_reg_9916 = ap_const_lv1_0) and (pyr_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond3_reg_9916, pyr_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond3_reg_9916 = ap_const_lv1_0) and (pyr_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter1, exitcond1_reg_9930, patches_RVALID)
    begin
                ap_block_pp1_stage0_11001 <= ((exitcond1_reg_9930 = ap_const_lv1_0) and (patches_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter1, exitcond1_reg_9930, patches_RVALID)
    begin
                ap_block_pp1_stage0_subdone <= ((exitcond1_reg_9930 = ap_const_lv1_0) and (patches_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(ap_enable_reg_pp2_iter1, pos_r_RVALID)
    begin
                ap_block_pp2_stage0_11001 <= ((pos_r_RVALID = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(ap_enable_reg_pp2_iter1, pos_r_RVALID)
    begin
                ap_block_pp2_stage0_subdone <= ((pos_r_RVALID = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp7_stage0_11001_assign_proc : process(ap_enable_reg_pp7_iter1, ap_block_state256_io)
    begin
                ap_block_pp7_stage0_11001 <= ((ap_const_boolean_1 = ap_block_state256_io) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp7_stage0_subdone_assign_proc : process(ap_enable_reg_pp7_iter1, ap_block_state256_io)
    begin
                ap_block_pp7_stage0_subdone <= ((ap_const_boolean_1 = ap_block_state256_io) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp8_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp8_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp8_stage0_11001_assign_proc : process(ap_enable_reg_pp8_iter1, ap_block_state263_io)
    begin
                ap_block_pp8_stage0_11001 <= ((ap_const_boolean_1 = ap_block_state263_io) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp8_stage0_subdone_assign_proc : process(ap_enable_reg_pp8_iter1, ap_block_state263_io)
    begin
                ap_block_pp8_stage0_subdone <= ((ap_const_boolean_1 = ap_block_state263_io) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1));
    end process;


    ap_block_state10_pp0_stage0_iter1_assign_proc : process(exitcond3_reg_9916, pyr_RVALID)
    begin
                ap_block_state10_pp0_stage0_iter1 <= ((exitcond3_reg_9916 = ap_const_lv1_0) and (pyr_RVALID = ap_const_logic_0));
    end process;

        ap_block_state11_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state143_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state144_pp5_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state145_pp5_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state146_pp5_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state147_pp5_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state148_pp5_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state149_pp5_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state150_pp5_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state151_pp5_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state152_pp5_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state153_pp5_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state154_pp5_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state199_pp6_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state200_pp6_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state201_pp6_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state202_pp6_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state203_pp6_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state204_pp6_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state205_pp6_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state206_pp6_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state207_pp6_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state208_pp6_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state209_pp6_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp1_stage0_iter1_assign_proc : process(exitcond1_reg_9930, patches_RVALID)
    begin
                ap_block_state20_pp1_stage0_iter1 <= ((exitcond1_reg_9930 = ap_const_lv1_0) and (patches_RVALID = ap_const_logic_0));
    end process;

        ap_block_state210_pp6_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state212_io_assign_proc : process(ap_sig_ioackin_pos_r_AWREADY, ap_sig_ioackin_debug_AWREADY)
    begin
                ap_block_state212_io <= ((ap_sig_ioackin_debug_AWREADY = ap_const_logic_0) or (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_0));
    end process;

        ap_block_state255_pp7_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state256_io_assign_proc : process(exitcond4_reg_13080, ap_sig_ioackin_debug_WREADY)
    begin
                ap_block_state256_io <= ((exitcond4_reg_13080 = ap_const_lv1_0) and (ap_sig_ioackin_debug_WREADY = ap_const_logic_0));
    end process;

        ap_block_state256_pp7_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state262_pp8_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state263_io_assign_proc : process(exitcond5_reg_13094, ap_sig_ioackin_pos_r_WREADY)
    begin
                ap_block_state263_io <= ((exitcond5_reg_13094 = ap_const_lv1_0) and (ap_sig_ioackin_pos_r_WREADY = ap_const_logic_0));
    end process;

        ap_block_state263_pp8_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state29_pp2_stage0_iter1_assign_proc : process(pos_r_RVALID)
    begin
                ap_block_state29_pp2_stage0_iter1 <= (pos_r_RVALID = ap_const_logic_0);
    end process;

        ap_block_state31_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp3_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp3_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp3_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp3_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp3_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp3_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp3_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp3_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp3_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state87_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp4_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp4_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp4_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp4_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp4_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp4_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state96_pp4_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp4_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp4_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_11308_assign_proc : process(ap_enable_reg_pp3_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, exitcond_i_fu_6782_p2)
    begin
                ap_condition_11308 <= ((exitcond_i_fu_6782_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001));
    end process;


    ap_condition_11384_assign_proc : process(tmp_58_0_t_fu_6856_p2)
    begin
                ap_condition_11384 <= (not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_C)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_58)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_57)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_56)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_55)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_54)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_53)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_52)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_51)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_50)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4F)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4E)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4D)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4C)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4B)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_4A)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_49)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_48)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_47)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_46)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_45)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_44)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_43)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_42)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_41)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_40)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3F)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3E)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3D)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3C)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3B)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_3A)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_39)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_38)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_37)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_36)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_35)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_34)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_33)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_32)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_31)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_30)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2F)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2E)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2D)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2C)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2B)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_2A)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_29)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_28)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_27)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_26)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_25)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_24)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_23)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_22)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_21)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_20)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1F)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1E)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1D)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1C)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1B)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_1A)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_19)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_18)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_17)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_16)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_15)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_14)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_13)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_12)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_11)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_10)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_F)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_E)) and not((tmp_58_0_t_fu_6856_p2 = ap_const_lv7_D)));
    end process;


    ap_condition_11389_assign_proc : process(ap_enable_reg_pp4_iter0, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, exitcond_i_1_fu_7495_p2)
    begin
                ap_condition_11389 <= ((exitcond_i_1_fu_7495_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001));
    end process;


    ap_condition_11465_assign_proc : process(tmp_58_1_t_fu_7569_p2)
    begin
                ap_condition_11465 <= (not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_C)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_58)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_57)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_56)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_55)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_54)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_53)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_52)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_51)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_50)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4F)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4E)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4D)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4C)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4B)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_4A)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_49)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_48)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_47)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_46)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_45)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_44)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_43)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_42)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_41)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_40)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3F)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3E)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3D)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3C)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3B)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_3A)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_39)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_38)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_37)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_36)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_35)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_34)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_33)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_32)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_31)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_30)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2F)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2E)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2D)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2C)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2B)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_2A)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_29)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_28)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_27)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_26)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_25)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_24)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_23)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_22)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_21)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_20)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1F)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1E)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1D)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1C)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1B)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_1A)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_19)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_18)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_17)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_16)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_15)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_14)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_13)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_12)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_11)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_10)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_F)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_E)) and not((tmp_58_1_t_fu_7569_p2 = ap_const_lv7_D)));
    end process;


    ap_condition_11470_assign_proc : process(ap_enable_reg_pp5_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, exitcond_i_2_fu_8223_p2)
    begin
                ap_condition_11470 <= ((exitcond_i_2_fu_8223_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001));
    end process;


    ap_condition_11546_assign_proc : process(tmp_58_2_t_fu_8297_p2)
    begin
                ap_condition_11546 <= (not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_C)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_58)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_57)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_56)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_55)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_54)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_53)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_52)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_51)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_50)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4F)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4E)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4D)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4C)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4B)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_4A)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_49)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_48)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_47)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_46)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_45)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_44)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_43)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_42)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_41)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_40)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3F)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3E)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3D)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3C)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3B)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_3A)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_39)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_38)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_37)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_36)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_35)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_34)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_33)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_32)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_31)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_30)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2F)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2E)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2D)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2C)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2B)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_2A)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_29)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_28)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_27)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_26)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_25)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_24)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_23)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_22)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_21)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_20)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1F)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1E)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1D)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1C)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1B)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_1A)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_19)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_18)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_17)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_16)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_15)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_14)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_13)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_12)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_11)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_10)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_F)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_E)) and not((tmp_58_2_t_fu_8297_p2 = ap_const_lv7_D)));
    end process;


    ap_condition_11551_assign_proc : process(ap_enable_reg_pp6_iter0, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, exitcond_i_3_fu_8951_p2)
    begin
                ap_condition_11551 <= ((exitcond_i_3_fu_8951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001));
    end process;


    ap_condition_11627_assign_proc : process(tmp_58_3_t_fu_9025_p2)
    begin
                ap_condition_11627 <= (not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_C)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_58)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_57)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_56)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_55)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_54)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_53)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_52)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_51)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_50)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4F)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4E)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4D)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4C)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4B)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_4A)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_49)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_48)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_47)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_46)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_45)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_44)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_43)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_42)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_41)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_40)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3F)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3E)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3D)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3C)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3B)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_3A)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_39)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_38)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_37)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_36)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_35)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_34)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_33)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_32)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_31)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_30)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2F)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2E)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2D)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2C)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2B)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_2A)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_29)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_28)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_27)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_26)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_25)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_24)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_23)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_22)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_21)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_20)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1F)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1E)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1D)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1C)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1B)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_1A)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_19)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_18)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_17)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_16)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_15)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_14)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_13)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_12)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_11)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_10)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_F)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_E)) and not((tmp_58_3_t_fu_9025_p2 = ap_const_lv7_D)));
    end process;


    ap_condition_11632_assign_proc : process(ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter1, exitcond4_reg_13080)
    begin
                ap_condition_11632 <= ((exitcond4_reg_13080 = ap_const_lv1_0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state9_assign_proc : process(exitcond3_fu_4239_p2)
    begin
        if ((exitcond3_fu_4239_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state19_assign_proc : process(exitcond1_fu_4256_p2)
    begin
        if ((exitcond1_fu_4256_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state19 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state28_assign_proc : process(exitcond2_fu_6708_p2)
    begin
        if ((exitcond2_fu_6708_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state28 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state31_assign_proc : process(exitcond_i_fu_6782_p2)
    begin
        if ((exitcond_i_fu_6782_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state31 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state31 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state87_assign_proc : process(exitcond_i_1_fu_7495_p2)
    begin
        if ((exitcond_i_1_fu_7495_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state87 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state87 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state143_assign_proc : process(exitcond_i_2_fu_8223_p2)
    begin
        if ((exitcond_i_2_fu_8223_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state143 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state143 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp6_exit_iter0_state199_assign_proc : process(exitcond_i_3_fu_8951_p2)
    begin
        if ((exitcond_i_3_fu_8951_p2 = ap_const_lv1_1)) then 
            ap_condition_pp6_exit_iter0_state199 <= ap_const_logic_1;
        else 
            ap_condition_pp6_exit_iter0_state199 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp7_exit_iter0_state255_assign_proc : process(exitcond4_fu_9679_p2)
    begin
        if ((exitcond4_fu_9679_p2 = ap_const_lv1_1)) then 
            ap_condition_pp7_exit_iter0_state255 <= ap_const_logic_1;
        else 
            ap_condition_pp7_exit_iter0_state255 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp8_exit_iter0_state262_assign_proc : process(exitcond5_fu_9733_p2)
    begin
        if ((exitcond5_fu_9733_p2 = ap_const_lv1_1)) then 
            ap_condition_pp8_exit_iter0_state262 <= ap_const_logic_1;
        else 
            ap_condition_pp8_exit_iter0_state262 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state268, pos_r_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state268) and (pos_r_BVALID = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);
    ap_enable_pp6 <= (ap_idle_pp6 xor ap_const_logic_1);
    ap_enable_pp7 <= (ap_idle_pp7 xor ap_const_logic_1);
    ap_enable_pp8 <= (ap_idle_pp8 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2)
    begin
        if (((ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp6_assign_proc : process(ap_enable_reg_pp6_iter0, ap_enable_reg_pp6_iter1, ap_enable_reg_pp6_iter2)
    begin
        if (((ap_enable_reg_pp6_iter2 = ap_const_logic_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_0))) then 
            ap_idle_pp6 <= ap_const_logic_1;
        else 
            ap_idle_pp6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp7_assign_proc : process(ap_enable_reg_pp7_iter1, ap_enable_reg_pp7_iter0)
    begin
        if (((ap_enable_reg_pp7_iter0 = ap_const_logic_0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_0))) then 
            ap_idle_pp7 <= ap_const_logic_1;
        else 
            ap_idle_pp7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp8_assign_proc : process(ap_enable_reg_pp8_iter1, ap_enable_reg_pp8_iter0)
    begin
        if (((ap_enable_reg_pp8_iter1 = ap_const_logic_0) and (ap_enable_reg_pp8_iter0 = ap_const_logic_0))) then 
            ap_idle_pp8 <= ap_const_logic_1;
        else 
            ap_idle_pp8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_i_1_phi_fu_1804_p4_assign_proc : process(i_0_i_1_reg_1800, exitcond_i_1_reg_11436, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, i_1_reg_11440, ap_block_pp4_stage0)
    begin
        if (((exitcond_i_1_reg_11436 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_phi_mux_i_0_i_1_phi_fu_1804_p4 <= i_1_reg_11440;
        else 
            ap_phi_mux_i_0_i_1_phi_fu_1804_p4 <= i_0_i_1_reg_1800;
        end if; 
    end process;


    ap_phi_mux_i_0_i_2_phi_fu_2036_p4_assign_proc : process(i_0_i_2_reg_2032, exitcond_i_2_reg_12214, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, i_2_reg_12218, ap_block_pp5_stage0)
    begin
        if (((exitcond_i_2_reg_12214 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            ap_phi_mux_i_0_i_2_phi_fu_2036_p4 <= i_2_reg_12218;
        else 
            ap_phi_mux_i_0_i_2_phi_fu_2036_p4 <= i_0_i_2_reg_2032;
        end if; 
    end process;


    ap_phi_mux_i_0_i_3_phi_fu_2268_p4_assign_proc : process(i_0_i_3_reg_2264, exitcond_i_3_reg_12992, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, i_3_reg_12996, ap_block_pp6_stage0)
    begin
        if (((exitcond_i_3_reg_12992 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            ap_phi_mux_i_0_i_3_phi_fu_2268_p4 <= i_3_reg_12996;
        else 
            ap_phi_mux_i_0_i_3_phi_fu_2268_p4 <= i_0_i_3_reg_2264;
        end if; 
    end process;


    ap_phi_mux_i_0_i_phi_fu_1572_p4_assign_proc : process(i_0_i_reg_1568, exitcond_i_reg_10664, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, i_reg_10668, ap_block_pp3_stage0)
    begin
        if (((exitcond_i_reg_10664 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_i_0_i_phi_fu_1572_p4 <= i_reg_10668;
        else 
            ap_phi_mux_i_0_i_phi_fu_1572_p4 <= i_0_i_reg_1568;
        end if; 
    end process;


    ap_phi_mux_indvar_phi_fu_1456_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond3_reg_9916, indvar_reg_1452, indvar_next_reg_9920)
    begin
        if (((exitcond3_reg_9916 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_phi_fu_1456_p4 <= indvar_next_reg_9920;
        else 
            ap_phi_mux_indvar_phi_fu_1456_p4 <= indvar_reg_1452;
        end if; 
    end process;


    ap_phi_mux_tmp_10_1_phi_fu_1780_p4_assign_proc : process(tmp_10_1_reg_1776, ap_CS_fsm_pp4_stage3, ap_enable_reg_pp4_iter2, exitcond_i_1_reg_11436_pp4_iter2_reg, reg_4072, ap_block_pp4_stage3)
    begin
        if (((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage3) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3))) then 
            ap_phi_mux_tmp_10_1_phi_fu_1780_p4 <= reg_4072;
        else 
            ap_phi_mux_tmp_10_1_phi_fu_1780_p4 <= tmp_10_1_reg_1776;
        end if; 
    end process;


    ap_phi_mux_tmp_10_2_phi_fu_2012_p4_assign_proc : process(tmp_10_2_reg_2008, ap_CS_fsm_pp5_stage3, ap_enable_reg_pp5_iter2, exitcond_i_2_reg_12214_pp5_iter2_reg, reg_4072, ap_block_pp5_stage3)
    begin
        if (((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage3) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3))) then 
            ap_phi_mux_tmp_10_2_phi_fu_2012_p4 <= reg_4072;
        else 
            ap_phi_mux_tmp_10_2_phi_fu_2012_p4 <= tmp_10_2_reg_2008;
        end if; 
    end process;


    ap_phi_mux_tmp_10_3_phi_fu_2244_p4_assign_proc : process(tmp_10_3_reg_2240, ap_CS_fsm_pp6_stage3, ap_enable_reg_pp6_iter2, exitcond_i_3_reg_12992_pp6_iter2_reg, reg_4072, ap_block_pp6_stage3)
    begin
        if (((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage3) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3))) then 
            ap_phi_mux_tmp_10_3_phi_fu_2244_p4 <= reg_4072;
        else 
            ap_phi_mux_tmp_10_3_phi_fu_2244_p4 <= tmp_10_3_reg_2240;
        end if; 
    end process;


    ap_phi_mux_tmp_11_1_phi_fu_1792_p4_assign_proc : process(tmp_11_1_reg_1788, ap_CS_fsm_pp4_stage2, ap_enable_reg_pp4_iter2, reg_4064, exitcond_i_1_reg_11436_pp4_iter2_reg, ap_block_pp4_stage2)
    begin
        if (((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2))) then 
            ap_phi_mux_tmp_11_1_phi_fu_1792_p4 <= reg_4064;
        else 
            ap_phi_mux_tmp_11_1_phi_fu_1792_p4 <= tmp_11_1_reg_1788;
        end if; 
    end process;


    ap_phi_mux_tmp_11_2_phi_fu_2024_p4_assign_proc : process(tmp_11_2_reg_2020, ap_CS_fsm_pp5_stage2, ap_enable_reg_pp5_iter2, reg_4064, exitcond_i_2_reg_12214_pp5_iter2_reg, ap_block_pp5_stage2)
    begin
        if (((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage2) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2))) then 
            ap_phi_mux_tmp_11_2_phi_fu_2024_p4 <= reg_4064;
        else 
            ap_phi_mux_tmp_11_2_phi_fu_2024_p4 <= tmp_11_2_reg_2020;
        end if; 
    end process;


    ap_phi_mux_tmp_11_3_phi_fu_2256_p4_assign_proc : process(tmp_11_3_reg_2252, ap_CS_fsm_pp6_stage2, ap_enable_reg_pp6_iter2, reg_4064, exitcond_i_3_reg_12992_pp6_iter2_reg, ap_block_pp6_stage2)
    begin
        if (((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage2) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2))) then 
            ap_phi_mux_tmp_11_3_phi_fu_2256_p4 <= reg_4064;
        else 
            ap_phi_mux_tmp_11_3_phi_fu_2256_p4 <= tmp_11_3_reg_2252;
        end if; 
    end process;


    ap_phi_mux_tmp_1_16_phi_fu_1744_p4_assign_proc : process(tmp_1_16_reg_1740, ap_CS_fsm_pp4_stage1, reg_4055, ap_enable_reg_pp4_iter2, exitcond_i_1_reg_11436_pp4_iter2_reg, ap_block_pp4_stage1)
    begin
        if (((exitcond_i_1_reg_11436_pp4_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1))) then 
            ap_phi_mux_tmp_1_16_phi_fu_1744_p4 <= reg_4055;
        else 
            ap_phi_mux_tmp_1_16_phi_fu_1744_p4 <= tmp_1_16_reg_1740;
        end if; 
    end process;


    ap_phi_mux_tmp_2_1_phi_fu_1768_p4_assign_proc : process(tmp_2_1_reg_1764, ap_CS_fsm_pp4_stage0, exitcond_i_1_reg_11436_pp4_iter1_reg, reg_4028, ap_enable_reg_pp4_iter2, ap_block_pp4_stage0)
    begin
        if (((exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_phi_mux_tmp_2_1_phi_fu_1768_p4 <= reg_4028;
        else 
            ap_phi_mux_tmp_2_1_phi_fu_1768_p4 <= tmp_2_1_reg_1764;
        end if; 
    end process;


    ap_phi_mux_tmp_2_20_phi_fu_1976_p4_assign_proc : process(tmp_2_20_reg_1972, ap_CS_fsm_pp5_stage1, reg_4055, ap_enable_reg_pp5_iter2, exitcond_i_2_reg_12214_pp5_iter2_reg, ap_block_pp5_stage1)
    begin
        if (((exitcond_i_2_reg_12214_pp5_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage1) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1))) then 
            ap_phi_mux_tmp_2_20_phi_fu_1976_p4 <= reg_4055;
        else 
            ap_phi_mux_tmp_2_20_phi_fu_1976_p4 <= tmp_2_20_reg_1972;
        end if; 
    end process;


    ap_phi_mux_tmp_2_2_phi_fu_2000_p4_assign_proc : process(tmp_2_2_reg_1996, ap_CS_fsm_pp5_stage0, exitcond_i_2_reg_12214_pp5_iter1_reg, reg_4028, ap_enable_reg_pp5_iter2, ap_block_pp5_stage0)
    begin
        if (((exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            ap_phi_mux_tmp_2_2_phi_fu_2000_p4 <= reg_4028;
        else 
            ap_phi_mux_tmp_2_2_phi_fu_2000_p4 <= tmp_2_2_reg_1996;
        end if; 
    end process;


    ap_phi_mux_tmp_2_3_phi_fu_2232_p4_assign_proc : process(tmp_2_3_reg_2228, ap_CS_fsm_pp6_stage0, exitcond_i_3_reg_12992_pp6_iter1_reg, reg_4028, ap_enable_reg_pp6_iter2, ap_block_pp6_stage0)
    begin
        if (((exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            ap_phi_mux_tmp_2_3_phi_fu_2232_p4 <= reg_4028;
        else 
            ap_phi_mux_tmp_2_3_phi_fu_2232_p4 <= tmp_2_3_reg_2228;
        end if; 
    end process;


    ap_phi_mux_tmp_3_24_phi_fu_2208_p4_assign_proc : process(tmp_3_24_reg_2204, ap_CS_fsm_pp6_stage1, reg_4055, ap_enable_reg_pp6_iter2, exitcond_i_3_reg_12992_pp6_iter2_reg, ap_block_pp6_stage1)
    begin
        if (((exitcond_i_3_reg_12992_pp6_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp6_stage1) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1))) then 
            ap_phi_mux_tmp_3_24_phi_fu_2208_p4 <= reg_4055;
        else 
            ap_phi_mux_tmp_3_24_phi_fu_2208_p4 <= tmp_3_24_reg_2204;
        end if; 
    end process;


    ap_phi_mux_tmp_5_phi_fu_1560_p4_assign_proc : process(tmp_5_reg_1556, ap_CS_fsm_pp3_stage2, ap_enable_reg_pp3_iter2, reg_4064, exitcond_i_reg_10664_pp3_iter2_reg, ap_block_pp3_stage2)
    begin
        if (((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2))) then 
            ap_phi_mux_tmp_5_phi_fu_1560_p4 <= reg_4064;
        else 
            ap_phi_mux_tmp_5_phi_fu_1560_p4 <= tmp_5_reg_1556;
        end if; 
    end process;


    ap_phi_mux_tmp_8_phi_fu_1536_p4_assign_proc : process(tmp_8_reg_1532, ap_CS_fsm_pp3_stage0, exitcond_i_reg_10664_pp3_iter1_reg, reg_4028, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0)
    begin
        if (((exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_tmp_8_phi_fu_1536_p4 <= reg_4028;
        else 
            ap_phi_mux_tmp_8_phi_fu_1536_p4 <= tmp_8_reg_1532;
        end if; 
    end process;


    ap_phi_mux_tmp_9_phi_fu_1548_p4_assign_proc : process(tmp_9_reg_1544, ap_CS_fsm_pp3_stage3, ap_enable_reg_pp3_iter2, exitcond_i_reg_10664_pp3_iter2_reg, reg_4072, ap_block_pp3_stage3)
    begin
        if (((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage3) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3))) then 
            ap_phi_mux_tmp_9_phi_fu_1548_p4 <= reg_4072;
        else 
            ap_phi_mux_tmp_9_phi_fu_1548_p4 <= tmp_9_reg_1544;
        end if; 
    end process;


    ap_phi_mux_tmp_s_phi_fu_1512_p4_assign_proc : process(tmp_s_reg_1508, ap_CS_fsm_pp3_stage1, reg_4055, ap_enable_reg_pp3_iter2, exitcond_i_reg_10664_pp3_iter2_reg, ap_block_pp3_stage1)
    begin
        if (((exitcond_i_reg_10664_pp3_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1))) then 
            ap_phi_mux_tmp_s_phi_fu_1512_p4 <= reg_4055;
        else 
            ap_phi_mux_tmp_s_phi_fu_1512_p4 <= tmp_s_reg_1508;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state268, pos_r_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state268) and (pos_r_BVALID = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_debug_AWREADY_assign_proc : process(debug_AWREADY, ap_reg_ioackin_debug_AWREADY)
    begin
        if ((ap_reg_ioackin_debug_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_debug_AWREADY <= debug_AWREADY;
        else 
            ap_sig_ioackin_debug_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_debug_WREADY_assign_proc : process(debug_WREADY, ap_reg_ioackin_debug_WREADY)
    begin
        if ((ap_reg_ioackin_debug_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_debug_WREADY <= debug_WREADY;
        else 
            ap_sig_ioackin_debug_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_patches_ARREADY_assign_proc : process(patches_ARREADY, ap_reg_ioackin_patches_ARREADY)
    begin
        if ((ap_reg_ioackin_patches_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_patches_ARREADY <= patches_ARREADY;
        else 
            ap_sig_ioackin_patches_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_pos_r_ARREADY_assign_proc : process(pos_r_ARREADY, ap_reg_ioackin_pos_r_ARREADY)
    begin
        if ((ap_reg_ioackin_pos_r_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_pos_r_ARREADY <= pos_r_ARREADY;
        else 
            ap_sig_ioackin_pos_r_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_pos_r_AWREADY_assign_proc : process(pos_r_AWREADY, ap_reg_ioackin_pos_r_AWREADY)
    begin
        if ((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_pos_r_AWREADY <= pos_r_AWREADY;
        else 
            ap_sig_ioackin_pos_r_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_pos_r_WREADY_assign_proc : process(pos_r_WREADY, ap_reg_ioackin_pos_r_WREADY)
    begin
        if ((ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_pos_r_WREADY <= pos_r_WREADY;
        else 
            ap_sig_ioackin_pos_r_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_pyr_ARREADY_assign_proc : process(pyr_ARREADY, ap_reg_ioackin_pyr_ARREADY)
    begin
        if ((ap_reg_ioackin_pyr_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_pyr_ARREADY <= pyr_ARREADY;
        else 
            ap_sig_ioackin_pyr_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    converged_ap_vld_assign_proc : process(ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            converged_ap_vld <= ap_const_logic_1;
        else 
            converged_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    cur_px_estimate_ptr5_fu_4203_p4 <= cur_px_estimate_ptr(63 downto 2);
    cur_px_estimate_ptr6_1_fu_8208_p2 <= std_logic_vector(unsigned(tmp_84_cast_reg_9889) + unsigned(ap_const_lv63_2));
    cur_px_estimate_ptr6_2_fu_8936_p2 <= std_logic_vector(unsigned(tmp_84_cast_reg_9889) + unsigned(ap_const_lv63_4));
    cur_px_estimate_ptr6_3_fu_9629_p2 <= std_logic_vector(unsigned(tmp_84_cast_reg_9889) + unsigned(ap_const_lv63_6));
    cur_px_estimate_ptr6_4_fu_8941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cur_px_estimate_ptr6_2_fu_8936_p2),64));
    cur_px_estimate_ptr6_5_fu_9634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cur_px_estimate_ptr6_3_fu_9629_p2),64));
    cur_px_estimate_ptr6_fu_8213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cur_px_estimate_ptr6_1_fu_8208_p2),64));

    debug_AWVALID_assign_proc : process(ap_CS_fsm_state212, ap_reg_ioackin_debug_AWREADY)
    begin
        if (((ap_reg_ioackin_debug_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state212))) then 
            debug_AWVALID <= ap_const_logic_1;
        else 
            debug_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    debug_BREADY_assign_proc : process(ap_CS_fsm_state261, debug_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state261) and (debug_BVALID = ap_const_logic_1))) then 
            debug_BREADY <= ap_const_logic_1;
        else 
            debug_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    debug_WVALID_assign_proc : process(ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter1, exitcond4_reg_13080, ap_reg_ioackin_debug_WREADY, ap_block_pp7_stage0_01001)
    begin
        if (((exitcond4_reg_13080 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp7_stage0_01001) and (ap_reg_ioackin_debug_WREADY = ap_const_logic_0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
            debug_WVALID <= ap_const_logic_1;
        else 
            debug_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    debug_blk_n_AW_assign_proc : process(m_axi_debug_AWREADY, ap_CS_fsm_state212)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state212)) then 
            debug_blk_n_AW <= m_axi_debug_AWREADY;
        else 
            debug_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    debug_blk_n_B_assign_proc : process(m_axi_debug_BVALID, ap_CS_fsm_state261)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state261)) then 
            debug_blk_n_B <= m_axi_debug_BVALID;
        else 
            debug_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    debug_blk_n_W_assign_proc : process(m_axi_debug_WREADY, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter1, ap_block_pp7_stage0, exitcond4_reg_13080)
    begin
        if (((exitcond4_reg_13080 = ap_const_lv1_0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            debug_blk_n_W <= m_axi_debug_WREADY;
        else 
            debug_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    exitcond1_fu_4256_p2 <= "1" when (indvar1_reg_1464 = ap_const_lv9_190) else "0";
    exitcond2_fu_6708_p2 <= "1" when (indvar3_reg_1497 = ap_const_lv4_8) else "0";
    exitcond3_fu_4239_p2 <= "1" when (ap_phi_mux_indvar_phi_fu_1456_p4 = ap_const_lv19_73AA0) else "0";
    exitcond4_fu_9679_p2 <= "1" when (indvar6_reg_2436 = ap_const_lv6_24) else "0";
    exitcond5_fu_9733_p2 <= "1" when (indvar8_reg_2447 = ap_const_lv4_8) else "0";
    exitcond_i_1_fu_7495_p2 <= "1" when (ap_phi_mux_i_0_i_1_phi_fu_1804_p4 = ap_const_lv7_40) else "0";
    exitcond_i_2_fu_8223_p2 <= "1" when (ap_phi_mux_i_0_i_2_phi_fu_2036_p4 = ap_const_lv7_40) else "0";
    exitcond_i_3_fu_8951_p2 <= "1" when (ap_phi_mux_i_0_i_3_phi_fu_2268_p4 = ap_const_lv7_40) else "0";
    exitcond_i_fu_6782_p2 <= "1" when (ap_phi_mux_i_0_i_phi_fu_1572_p4 = ap_const_lv7_40) else "0";

    grp_fu_2458_ce_assign_proc : process(ap_CS_fsm_state136, ap_CS_fsm_state192, ap_CS_fsm_pp3_stage3, ap_block_pp3_stage3_11001, ap_CS_fsm_pp4_stage3, ap_block_pp4_stage3_11001, ap_CS_fsm_pp5_stage3, ap_block_pp5_stage3_11001, ap_CS_fsm_pp6_stage3, ap_block_pp6_stage3_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_CS_fsm_state58, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_state114, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_CS_fsm_state170, ap_CS_fsm_pp6_stage1, ap_block_pp6_stage1_11001, ap_sig_ioackin_pos_r_AWREADY, ap_CS_fsm_state226, ap_CS_fsm_pp3_stage2, ap_block_pp3_stage2_11001, ap_CS_fsm_state60, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage2_11001, ap_CS_fsm_state116, ap_CS_fsm_pp5_stage2, ap_block_pp5_stage2_11001, ap_CS_fsm_state172, ap_CS_fsm_pp6_stage2, ap_block_pp6_stage2_11001, ap_CS_fsm_state228, ap_CS_fsm_state52, ap_CS_fsm_state56, ap_CS_fsm_state64, ap_CS_fsm_state68, ap_CS_fsm_state80, ap_CS_fsm_state108, ap_CS_fsm_state112, ap_CS_fsm_state120, ap_CS_fsm_state124, ap_CS_fsm_state164, ap_CS_fsm_state168, ap_CS_fsm_state176, ap_CS_fsm_state180, ap_CS_fsm_state220, ap_CS_fsm_state224, ap_CS_fsm_state232, ap_CS_fsm_state236, ap_CS_fsm_state248, ap_CS_fsm_state62, ap_CS_fsm_state118, ap_CS_fsm_state174, ap_CS_fsm_state230, ap_CS_fsm_state50, ap_CS_fsm_state106, ap_CS_fsm_state162, ap_CS_fsm_state218, ap_CS_fsm_state54, ap_CS_fsm_state110, ap_CS_fsm_state166, ap_CS_fsm_state222, ap_CS_fsm_state135, ap_CS_fsm_state191, ap_CS_fsm_state49, ap_CS_fsm_state53, ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state65, ap_CS_fsm_state77, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state117, ap_CS_fsm_state121, ap_CS_fsm_state133, ap_CS_fsm_state161, ap_CS_fsm_state165, ap_CS_fsm_state167, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state173, ap_CS_fsm_state177, ap_CS_fsm_state189, ap_CS_fsm_state217, ap_CS_fsm_state221, ap_CS_fsm_state223, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state229, ap_CS_fsm_state233, ap_CS_fsm_state245, ap_CS_fsm_state51, ap_CS_fsm_state107, ap_CS_fsm_state163, ap_CS_fsm_state219, ap_CS_fsm_state63, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state119, ap_CS_fsm_state122, ap_CS_fsm_state123, ap_CS_fsm_state134, ap_CS_fsm_state175, ap_CS_fsm_state178, ap_CS_fsm_state179, ap_CS_fsm_state190, ap_CS_fsm_state231, ap_CS_fsm_state234, ap_CS_fsm_state235, ap_CS_fsm_state246, ap_CS_fsm_state247)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or (ap_const_logic_1 = ap_CS_fsm_state163) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state245) or (ap_const_logic_1 = ap_CS_fsm_state233) or (ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state223) or (ap_const_logic_1 = ap_CS_fsm_state221) or (ap_const_logic_1 = ap_CS_fsm_state217) or (ap_const_logic_1 = ap_CS_fsm_state189) or (ap_const_logic_1 = ap_CS_fsm_state177) or (ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state161) or (ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state191) or (ap_const_logic_1 = ap_CS_fsm_state135) or (ap_const_logic_1 = ap_CS_fsm_state222) or (ap_const_logic_1 = ap_CS_fsm_state166) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state218) or (ap_const_logic_1 = ap_CS_fsm_state162) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state230) or (ap_const_logic_1 = ap_CS_fsm_state174) or (ap_const_logic_1 = ap_CS_fsm_state118) or (ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state248) or (ap_const_logic_1 = ap_CS_fsm_state236) or (ap_const_logic_1 = ap_CS_fsm_state232) or (ap_const_logic_1 = ap_CS_fsm_state224) or (ap_const_logic_1 = ap_CS_fsm_state220) or (ap_const_logic_1 = ap_CS_fsm_state180) or (ap_const_logic_1 = ap_CS_fsm_state176) or (ap_const_logic_1 = ap_CS_fsm_state168) or (ap_const_logic_1 = ap_CS_fsm_state164) or (ap_const_logic_1 = ap_CS_fsm_state124) or (ap_const_logic_1 = ap_CS_fsm_state120) or (ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state247) or (ap_const_logic_1 = ap_CS_fsm_state246) or (ap_const_logic_1 = ap_CS_fsm_state235) or (ap_const_logic_1 = ap_CS_fsm_state234) or (ap_const_logic_1 = ap_CS_fsm_state231) or (ap_const_logic_1 = ap_CS_fsm_state190) or (ap_const_logic_1 = ap_CS_fsm_state179) or (ap_const_logic_1 = ap_CS_fsm_state178) or (ap_const_logic_1 = ap_CS_fsm_state175) or (ap_const_logic_1 = ap_CS_fsm_state134) or (ap_const_logic_1 = ap_CS_fsm_state123) or (ap_const_logic_1 = ap_CS_fsm_state122) or (ap_const_logic_1 = ap_CS_fsm_state119) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state67) or (ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state63) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_const_boolean_0 = ap_block_pp6_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_const_boolean_0 = ap_block_pp6_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_const_boolean_0 = ap_block_pp3_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_const_boolean_0 = ap_block_pp6_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state192) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state136) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)))) then 
            grp_fu_2458_ce <= ap_const_logic_1;
        else 
            grp_fu_2458_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2458_opcode_assign_proc : process(ap_CS_fsm_pp3_stage3, exitcond_i_reg_10664, ap_CS_fsm_pp4_stage3, exitcond_i_1_reg_11436, ap_CS_fsm_pp5_stage3, exitcond_i_2_reg_12214, ap_CS_fsm_pp6_stage3, exitcond_i_3_reg_12992, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, ap_CS_fsm_pp3_stage1, exitcond_i_reg_10664_pp3_iter1_reg, ap_CS_fsm_pp4_stage1, exitcond_i_1_reg_11436_pp4_iter1_reg, ap_CS_fsm_pp5_stage1, exitcond_i_2_reg_12214_pp5_iter1_reg, ap_CS_fsm_pp6_stage1, exitcond_i_3_reg_12992_pp6_iter1_reg, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp6_stage2, ap_CS_fsm_state49, ap_CS_fsm_state53, ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state65, ap_CS_fsm_state77, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state117, ap_CS_fsm_state121, ap_CS_fsm_state133, ap_CS_fsm_state161, ap_CS_fsm_state165, ap_CS_fsm_state167, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state173, ap_CS_fsm_state177, ap_CS_fsm_state189, ap_CS_fsm_state217, ap_CS_fsm_state221, ap_CS_fsm_state223, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state229, ap_CS_fsm_state233, ap_CS_fsm_state245, ap_block_pp3_stage0_00001, ap_block_pp3_stage1_00001, ap_block_pp3_stage2_00001, ap_block_pp3_stage3_00001, ap_block_pp4_stage0_00001, ap_block_pp4_stage1_00001, ap_block_pp4_stage2_00001, ap_block_pp4_stage3_00001, ap_block_pp5_stage0_00001, ap_block_pp5_stage1_00001, ap_block_pp5_stage2_00001, ap_block_pp5_stage3_00001, ap_block_pp6_stage0_00001, ap_block_pp6_stage1_00001, ap_block_pp6_stage2_00001, ap_block_pp6_stage3_00001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state233) or (ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state223) or (ap_const_logic_1 = ap_CS_fsm_state177) or (ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            grp_fu_2458_opcode <= ap_const_lv2_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state245) or (ap_const_logic_1 = ap_CS_fsm_state221) or (ap_const_logic_1 = ap_CS_fsm_state217) or (ap_const_logic_1 = ap_CS_fsm_state189) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state161) or (ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state49) or ((exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage2_00001)) or ((ap_const_boolean_0 = ap_block_pp6_stage1_00001) and (exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage2_00001) and (exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage1_00001) and (exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage2_00001) and (exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage1_00001) and (exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage2_00001) and (exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage1_00001) and (exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_00001) and (exitcond_i_3_reg_12992 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_const_boolean_0 = ap_block_pp6_stage3_00001)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_00001) and (exitcond_i_2_reg_12214 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage3_00001) and (exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_00001) and (exitcond_i_1_reg_11436 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage3_00001) and (exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_00001) and (exitcond_i_reg_10664 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage3_00001) and (exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3)))) then 
            grp_fu_2458_opcode <= ap_const_lv2_0;
        else 
            grp_fu_2458_opcode <= "XX";
        end if; 
    end process;


    grp_fu_2458_p0_assign_proc : process(reg_3996, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp5_stage3, ap_CS_fsm_pp6_stage3, reg_4004, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, reg_4011, ap_CS_fsm_pp3_stage1, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp6_stage1, reg_4021, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp6_stage2, reg_4028, reg_4123, H_inv_0_0_reg_10712, H_inv_1_0_reg_11484, H_inv_2_0_reg_12262, H_inv_3_0_reg_13046, ap_block_pp3_stage1, ap_block_pp3_stage0, ap_block_pp3_stage3, ap_block_pp3_stage2, ap_block_pp4_stage1, ap_block_pp4_stage0, ap_block_pp4_stage3, ap_block_pp4_stage2, ap_block_pp5_stage1, ap_block_pp5_stage0, ap_block_pp5_stage3, ap_block_pp5_stage2, ap_block_pp6_stage1, ap_block_pp6_stage0, ap_block_pp6_stage3, ap_block_pp6_stage2, ap_CS_fsm_state49, ap_CS_fsm_state53, ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state65, ap_CS_fsm_state77, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state117, ap_CS_fsm_state121, ap_CS_fsm_state133, ap_CS_fsm_state161, ap_CS_fsm_state165, ap_CS_fsm_state167, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state173, ap_CS_fsm_state177, ap_CS_fsm_state189, ap_CS_fsm_state217, ap_CS_fsm_state221, ap_CS_fsm_state223, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state229, ap_CS_fsm_state233, ap_CS_fsm_state245)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state245)) then 
            grp_fu_2458_p0 <= H_inv_3_0_reg_13046;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state189)) then 
            grp_fu_2458_p0 <= H_inv_2_0_reg_12262;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state133)) then 
            grp_fu_2458_p0 <= H_inv_1_0_reg_11484;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            grp_fu_2458_p0 <= H_inv_0_0_reg_10712;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state233) or (ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state221) or (ap_const_logic_1 = ap_CS_fsm_state177) or (ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            grp_fu_2458_p0 <= reg_4028;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state217) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state161) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_2458_p0 <= reg_4123;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state223) or (ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state55) or ((ap_const_boolean_0 = ap_block_pp6_stage3) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3)) or ((ap_const_boolean_0 = ap_block_pp5_stage3) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3)) or ((ap_const_boolean_0 = ap_block_pp4_stage3) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3)) or ((ap_const_boolean_0 = ap_block_pp3_stage3) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3)))) then 
            grp_fu_2458_p0 <= reg_4021;
        elsif ((((ap_const_boolean_0 = ap_block_pp6_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)))) then 
            grp_fu_2458_p0 <= reg_4011;
        elsif ((((ap_const_boolean_0 = ap_block_pp6_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)))) then 
            grp_fu_2458_p0 <= reg_4004;
        elsif ((((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            grp_fu_2458_p0 <= reg_3996;
        else 
            grp_fu_2458_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2458_p1_assign_proc : process(reg_3996, ap_CS_fsm_pp3_stage3, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp5_stage3, ap_CS_fsm_pp6_stage3, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, ap_CS_fsm_pp3_stage1, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp6_stage1, reg_4021, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp6_stage2, reg_4116, reg_4128, reg_4139, reg_4144, ap_phi_mux_tmp_s_phi_fu_1512_p4, ap_block_pp3_stage1, ap_phi_mux_tmp_8_phi_fu_1536_p4, ap_block_pp3_stage0, ap_phi_mux_tmp_9_phi_fu_1548_p4, ap_block_pp3_stage3, ap_phi_mux_tmp_5_phi_fu_1560_p4, ap_block_pp3_stage2, ap_phi_mux_tmp_1_16_phi_fu_1744_p4, ap_block_pp4_stage1, ap_phi_mux_tmp_2_1_phi_fu_1768_p4, ap_block_pp4_stage0, ap_phi_mux_tmp_10_1_phi_fu_1780_p4, ap_block_pp4_stage3, ap_phi_mux_tmp_11_1_phi_fu_1792_p4, ap_block_pp4_stage2, ap_phi_mux_tmp_2_20_phi_fu_1976_p4, ap_block_pp5_stage1, ap_phi_mux_tmp_2_2_phi_fu_2000_p4, ap_block_pp5_stage0, ap_phi_mux_tmp_10_2_phi_fu_2012_p4, ap_block_pp5_stage3, ap_phi_mux_tmp_11_2_phi_fu_2024_p4, ap_block_pp5_stage2, ap_phi_mux_tmp_3_24_phi_fu_2208_p4, ap_block_pp6_stage1, ap_phi_mux_tmp_2_3_phi_fu_2232_p4, ap_block_pp6_stage0, ap_phi_mux_tmp_10_3_phi_fu_2244_p4, ap_block_pp6_stage3, ap_phi_mux_tmp_11_3_phi_fu_2256_p4, ap_block_pp6_stage2, ap_CS_fsm_state49, ap_CS_fsm_state53, ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state65, ap_CS_fsm_state77, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state117, ap_CS_fsm_state121, ap_CS_fsm_state133, ap_CS_fsm_state161, ap_CS_fsm_state165, ap_CS_fsm_state167, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state173, ap_CS_fsm_state177, ap_CS_fsm_state189, ap_CS_fsm_state217, ap_CS_fsm_state221, ap_CS_fsm_state223, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state229, ap_CS_fsm_state233, ap_CS_fsm_state245)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage3) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage3))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_10_3_phi_fu_2244_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp6_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_11_3_phi_fu_2256_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp6_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_3_24_phi_fu_2208_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_2_3_phi_fu_2232_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp5_stage3) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_10_2_phi_fu_2012_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp5_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_11_2_phi_fu_2024_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp5_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_2_20_phi_fu_1976_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_2_2_phi_fu_2000_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage3) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_10_1_phi_fu_1780_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_11_1_phi_fu_1792_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_1_16_phi_fu_1744_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_2_1_phi_fu_1768_p4;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state245) or (ap_const_logic_1 = ap_CS_fsm_state189) or (ap_const_logic_1 = ap_CS_fsm_state133) or (ap_const_logic_1 = ap_CS_fsm_state77))) then 
            grp_fu_2458_p1 <= reg_3996;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state233) or (ap_const_logic_1 = ap_CS_fsm_state177) or (ap_const_logic_1 = ap_CS_fsm_state121) or (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            grp_fu_2458_p1 <= reg_4116;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            grp_fu_2458_p1 <= reg_4021;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state223) or (ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            grp_fu_2458_p1 <= reg_4144;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state221) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            grp_fu_2458_p1 <= reg_4139;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state217) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state161) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_2458_p1 <= reg_4128;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage3) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage3))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_9_phi_fu_1548_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_5_phi_fu_1560_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_s_phi_fu_1512_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_fu_2458_p1 <= ap_phi_mux_tmp_8_phi_fu_1536_p4;
        else 
            grp_fu_2458_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2466_opcode_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, exitcond_i_reg_10664_pp3_iter1_reg, exitcond_i_1_reg_11436_pp4_iter1_reg, exitcond_i_2_reg_12214_pp5_iter1_reg, exitcond_i_3_reg_12992_pp6_iter1_reg, ap_enable_reg_pp3_iter2, ap_enable_reg_pp4_iter2, ap_enable_reg_pp5_iter2, ap_enable_reg_pp6_iter2, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state115, ap_CS_fsm_state117, ap_CS_fsm_state171, ap_CS_fsm_state173, ap_CS_fsm_state227, ap_CS_fsm_state229, ap_block_pp3_stage0_00001, ap_block_pp4_stage0_00001, ap_block_pp5_stage0_00001, ap_block_pp6_stage0_00001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            grp_fu_2466_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp6_stage0_00001) and (exitcond_i_3_reg_12992_pp6_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_00001) and (exitcond_i_2_reg_12214_pp5_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_00001) and (exitcond_i_1_reg_11436_pp4_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_00001) and (exitcond_i_reg_10664_pp3_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            grp_fu_2466_opcode <= ap_const_lv2_0;
        else 
            grp_fu_2466_opcode <= "XX";
        end if; 
    end process;


    grp_fu_2466_p0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, reg_4047, ap_enable_reg_pp3_iter2, ap_enable_reg_pp4_iter2, ap_enable_reg_pp5_iter2, ap_enable_reg_pp6_iter2, reg_4101, reg_4150, ap_block_pp3_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state115, ap_CS_fsm_state117, ap_CS_fsm_state171, ap_CS_fsm_state173, ap_CS_fsm_state227, ap_CS_fsm_state229)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            grp_fu_2466_p0 <= reg_4101;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            grp_fu_2466_p0 <= reg_4150;
        elsif ((((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            grp_fu_2466_p0 <= reg_4047;
        else 
            grp_fu_2466_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2466_p1_assign_proc : process(tmp_7_reg_1520, tmp_1_1_reg_1752, tmp_1_2_reg_1984, tmp_1_3_reg_2216, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp3_iter2, ap_enable_reg_pp4_iter2, ap_enable_reg_pp5_iter2, ap_enable_reg_pp6_iter2, reg_4155, reg_4160, ap_block_pp3_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_CS_fsm_state59, ap_CS_fsm_state61, ap_CS_fsm_state115, ap_CS_fsm_state117, ap_CS_fsm_state171, ap_CS_fsm_state173, ap_CS_fsm_state227, ap_CS_fsm_state229)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            grp_fu_2466_p1 <= tmp_1_3_reg_2216;
        elsif (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            grp_fu_2466_p1 <= tmp_1_2_reg_1984;
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            grp_fu_2466_p1 <= tmp_1_1_reg_1752;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state229) or (ap_const_logic_1 = ap_CS_fsm_state173) or (ap_const_logic_1 = ap_CS_fsm_state117) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            grp_fu_2466_p1 <= reg_4160;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            grp_fu_2466_p1 <= reg_4155;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            grp_fu_2466_p1 <= tmp_7_reg_1520;
        else 
            grp_fu_2466_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2494_ce_assign_proc : process(ap_CS_fsm_state43, ap_CS_fsm_state212, ap_CS_fsm_pp3_stage3, ap_block_pp3_stage3_11001, ap_CS_fsm_pp4_stage3, ap_block_pp4_stage3_11001, ap_CS_fsm_pp5_stage3, ap_block_pp5_stage3_11001, ap_CS_fsm_pp6_stage3, ap_block_pp6_stage3_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp3_stage1, ap_block_pp3_stage1_11001, ap_CS_fsm_state44, ap_CS_fsm_state58, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_state100, ap_CS_fsm_state114, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_CS_fsm_state156, ap_CS_fsm_state170, ap_CS_fsm_pp6_stage1, ap_block_pp6_stage1_11001, ap_sig_ioackin_pos_r_AWREADY, ap_block_state212_io, ap_CS_fsm_state226, ap_CS_fsm_pp3_stage2, ap_block_pp3_stage2_11001, ap_CS_fsm_state46, ap_CS_fsm_state60, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage2_11001, ap_CS_fsm_state102, ap_CS_fsm_state116, ap_CS_fsm_pp5_stage2, ap_block_pp5_stage2_11001, ap_CS_fsm_state158, ap_CS_fsm_state172, ap_CS_fsm_pp6_stage2, ap_block_pp6_stage2_11001, ap_CS_fsm_state214, ap_CS_fsm_state228, ap_CS_fsm_state52, ap_CS_fsm_state56, ap_CS_fsm_state108, ap_CS_fsm_state112, ap_CS_fsm_state164, ap_CS_fsm_state168, ap_CS_fsm_state220, ap_CS_fsm_state224, ap_CS_fsm_state48, ap_CS_fsm_state104, ap_CS_fsm_state160, ap_CS_fsm_state216, ap_CS_fsm_state50, ap_CS_fsm_state106, ap_CS_fsm_state162, ap_CS_fsm_state218, ap_CS_fsm_state54, ap_CS_fsm_state110, ap_CS_fsm_state166, ap_CS_fsm_state222, ap_CS_fsm_state211, ap_CS_fsm_state49, ap_CS_fsm_state53, ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state161, ap_CS_fsm_state165, ap_CS_fsm_state167, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state217, ap_CS_fsm_state221, ap_CS_fsm_state223, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state51, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state107, ap_CS_fsm_state155, ap_CS_fsm_state157, ap_CS_fsm_state159, ap_CS_fsm_state163, ap_CS_fsm_state213, ap_CS_fsm_state215, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or (ap_const_logic_1 = ap_CS_fsm_state215) or (ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state163) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state157) or (ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state223) or (ap_const_logic_1 = ap_CS_fsm_state221) or (ap_const_logic_1 = ap_CS_fsm_state217) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state161) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state211) or (ap_const_logic_1 = ap_CS_fsm_state222) or (ap_const_logic_1 = ap_CS_fsm_state166) or (ap_const_logic_1 = ap_CS_fsm_state110) or (ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state218) or (ap_const_logic_1 = ap_CS_fsm_state162) or (ap_const_logic_1 = ap_CS_fsm_state106) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state216) or (ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state224) or (ap_const_logic_1 = ap_CS_fsm_state220) or (ap_const_logic_1 = ap_CS_fsm_state168) or (ap_const_logic_1 = ap_CS_fsm_state164) or (ap_const_logic_1 = ap_CS_fsm_state112) or (ap_const_logic_1 = ap_CS_fsm_state108) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state214) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state158) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state156) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state44) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_const_boolean_0 = ap_block_pp6_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_const_boolean_0 = ap_block_pp3_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_const_boolean_0 = ap_block_pp6_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_const_boolean_0 = ap_block_pp3_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage3) and (ap_const_boolean_0 = ap_block_pp6_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage3) and (ap_const_boolean_0 = ap_block_pp3_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state212) and (ap_const_boolean_0 = ap_block_state212_io)))) then 
            grp_fu_2494_ce <= ap_const_logic_1;
        else 
            grp_fu_2494_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2494_p0_assign_proc : process(ap_CS_fsm_state43, tmp_9_reg_1544, tmp_5_reg_1556, tmp_10_1_reg_1776, tmp_11_1_reg_1788, tmp_10_2_reg_2008, tmp_11_2_reg_2020, tmp_10_3_reg_2240, tmp_11_3_reg_2252, reg_3996, reg_4004, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, reg_4011, ap_CS_fsm_pp3_stage1, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp6_stage1, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp6_stage2, reg_4047, reg_4089, reg_4133, reg_4144, ap_CS_fsm_state211, ap_block_pp3_stage1, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp4_stage1, ap_block_pp4_stage0, ap_block_pp4_stage2, ap_block_pp5_stage1, ap_block_pp5_stage0, ap_block_pp5_stage2, ap_block_pp6_stage1, ap_block_pp6_stage0, ap_block_pp6_stage2, ap_CS_fsm_state49, ap_CS_fsm_state53, ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state161, ap_CS_fsm_state165, ap_CS_fsm_state167, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state217, ap_CS_fsm_state221, ap_CS_fsm_state223, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state51, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state107, ap_CS_fsm_state155, ap_CS_fsm_state157, ap_CS_fsm_state159, ap_CS_fsm_state163, ap_CS_fsm_state213, ap_CS_fsm_state215, ap_CS_fsm_state219)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state215)) then 
            grp_fu_2494_p0 <= tmp_11_3_reg_2252;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state211)) then 
            grp_fu_2494_p0 <= tmp_10_3_reg_2240;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state159)) then 
            grp_fu_2494_p0 <= tmp_11_2_reg_2020;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state155)) then 
            grp_fu_2494_p0 <= tmp_10_2_reg_2008;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_fu_2494_p0 <= tmp_11_1_reg_1788;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_fu_2494_p0 <= tmp_10_1_reg_1776;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state223) or (ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            grp_fu_2494_p0 <= reg_4144;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state221) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            grp_fu_2494_p0 <= reg_4089;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state219) or (ap_const_logic_1 = ap_CS_fsm_state163) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            grp_fu_2494_p0 <= reg_4133;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state217) or (ap_const_logic_1 = ap_CS_fsm_state161) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_2494_p0 <= reg_4047;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_2494_p0 <= tmp_5_reg_1556;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state157) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_2494_p0 <= reg_4011;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_2494_p0 <= tmp_9_reg_1544;
        elsif ((((ap_const_boolean_0 = ap_block_pp6_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)))) then 
            grp_fu_2494_p0 <= reg_4004;
        elsif ((((ap_const_boolean_0 = ap_block_pp6_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            grp_fu_2494_p0 <= reg_3996;
        else 
            grp_fu_2494_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2494_p1_assign_proc : process(ap_CS_fsm_state43, reg_3996, reg_4004, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, reg_4011, ap_CS_fsm_pp3_stage1, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp6_stage1, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp6_stage2, reg_4089, reg_4101, reg_4116, ap_CS_fsm_state211, ap_block_pp3_stage1, ap_block_pp3_stage0, ap_block_pp3_stage2, ap_block_pp4_stage1, ap_block_pp4_stage0, ap_block_pp4_stage2, ap_block_pp5_stage1, ap_block_pp5_stage0, ap_block_pp5_stage2, ap_block_pp6_stage1, ap_block_pp6_stage0, ap_block_pp6_stage2, ap_CS_fsm_state49, ap_CS_fsm_state53, ap_CS_fsm_state55, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state105, ap_CS_fsm_state109, ap_CS_fsm_state111, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state161, ap_CS_fsm_state165, ap_CS_fsm_state167, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state217, ap_CS_fsm_state221, ap_CS_fsm_state223, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state51, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state107, ap_CS_fsm_state155, ap_CS_fsm_state157, ap_CS_fsm_state159, ap_CS_fsm_state163, ap_CS_fsm_state213, ap_CS_fsm_state215, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_2494_p1 <= reg_4011;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state223) or (ap_const_logic_1 = ap_CS_fsm_state167) or (ap_const_logic_1 = ap_CS_fsm_state111) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            grp_fu_2494_p1 <= reg_4089;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state219) or (ap_const_logic_1 = ap_CS_fsm_state163) or (ap_const_logic_1 = ap_CS_fsm_state107) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            grp_fu_2494_p1 <= ap_const_lv32_42800000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state221) or (ap_const_logic_1 = ap_CS_fsm_state217) or (ap_const_logic_1 = ap_CS_fsm_state165) or (ap_const_logic_1 = ap_CS_fsm_state161) or (ap_const_logic_1 = ap_CS_fsm_state109) or (ap_const_logic_1 = ap_CS_fsm_state105) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            grp_fu_2494_p1 <= reg_4116;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state157) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            grp_fu_2494_p1 <= reg_4101;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state215) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state211))) then 
            grp_fu_2494_p1 <= ap_const_lv32_3E800000;
        elsif ((((ap_const_boolean_0 = ap_block_pp6_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)))) then 
            grp_fu_2494_p1 <= reg_4004;
        elsif ((((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            grp_fu_2494_p1 <= reg_3996;
        else 
            grp_fu_2494_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2500_ce_assign_proc : process(ap_CS_fsm_state43, ap_CS_fsm_state212, ap_CS_fsm_state44, ap_CS_fsm_state58, ap_CS_fsm_state100, ap_CS_fsm_state114, ap_CS_fsm_state156, ap_CS_fsm_state170, ap_sig_ioackin_pos_r_AWREADY, ap_block_state212_io, ap_CS_fsm_state226, ap_CS_fsm_state46, ap_CS_fsm_state60, ap_CS_fsm_state102, ap_CS_fsm_state116, ap_CS_fsm_state158, ap_CS_fsm_state172, ap_CS_fsm_state214, ap_CS_fsm_state228, ap_CS_fsm_state48, ap_CS_fsm_state104, ap_CS_fsm_state160, ap_CS_fsm_state216, ap_CS_fsm_state211, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state155, ap_CS_fsm_state157, ap_CS_fsm_state159, ap_CS_fsm_state213, ap_CS_fsm_state215)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state215) or (ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state157) or (ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state211) or (ap_const_logic_1 = ap_CS_fsm_state216) or (ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state214) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state158) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state156) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state44) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state212) and (ap_const_boolean_0 = ap_block_state212_io)))) then 
            grp_fu_2500_ce <= ap_const_logic_1;
        else 
            grp_fu_2500_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2500_p0_assign_proc : process(ap_CS_fsm_state43, tmp_7_reg_1520, tmp_8_reg_1532, tmp_1_1_reg_1752, tmp_2_1_reg_1764, tmp_1_2_reg_1984, tmp_2_2_reg_1996, tmp_1_3_reg_2216, tmp_2_3_reg_2228, reg_4047, reg_4089, ap_CS_fsm_state211, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state155, ap_CS_fsm_state157, ap_CS_fsm_state159, ap_CS_fsm_state213, ap_CS_fsm_state215)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state215)) then 
            grp_fu_2500_p0 <= tmp_1_3_reg_2216;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state211)) then 
            grp_fu_2500_p0 <= tmp_2_3_reg_2228;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state159)) then 
            grp_fu_2500_p0 <= tmp_1_2_reg_1984;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state155)) then 
            grp_fu_2500_p0 <= tmp_2_2_reg_1996;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
            grp_fu_2500_p0 <= tmp_1_1_reg_1752;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_fu_2500_p0 <= tmp_2_1_reg_1764;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_2500_p0 <= reg_4047;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_2500_p0 <= tmp_7_reg_1520;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state157) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            grp_fu_2500_p0 <= reg_4089;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_2500_p0 <= tmp_8_reg_1532;
        else 
            grp_fu_2500_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2500_p1_assign_proc : process(ap_CS_fsm_state43, reg_4011, reg_4101, ap_CS_fsm_state211, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state45, ap_CS_fsm_state47, ap_CS_fsm_state99, ap_CS_fsm_state101, ap_CS_fsm_state103, ap_CS_fsm_state155, ap_CS_fsm_state157, ap_CS_fsm_state159, ap_CS_fsm_state213, ap_CS_fsm_state215)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_2500_p1 <= reg_4101;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state215) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            grp_fu_2500_p1 <= ap_const_lv32_3E800000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state213) or (ap_const_logic_1 = ap_CS_fsm_state157) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            grp_fu_2500_p1 <= reg_4011;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state211))) then 
            grp_fu_2500_p1 <= ap_const_lv32_3F000000;
        else 
            grp_fu_2500_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2506_ce_assign_proc : process(ap_CS_fsm_state43, ap_CS_fsm_state212, ap_CS_fsm_state44, ap_CS_fsm_state58, ap_CS_fsm_state100, ap_CS_fsm_state114, ap_CS_fsm_state156, ap_CS_fsm_state170, ap_sig_ioackin_pos_r_AWREADY, ap_block_state212_io, ap_CS_fsm_state226, ap_CS_fsm_state60, ap_CS_fsm_state116, ap_CS_fsm_state172, ap_CS_fsm_state228, ap_CS_fsm_state48, ap_CS_fsm_state104, ap_CS_fsm_state160, ap_CS_fsm_state216, ap_CS_fsm_state211, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state47, ap_CS_fsm_state99, ap_CS_fsm_state103, ap_CS_fsm_state155, ap_CS_fsm_state159, ap_CS_fsm_state215)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state215) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state211) or (ap_const_logic_1 = ap_CS_fsm_state216) or (ap_const_logic_1 = ap_CS_fsm_state160) or (ap_const_logic_1 = ap_CS_fsm_state104) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state228) or (ap_const_logic_1 = ap_CS_fsm_state172) or (ap_const_logic_1 = ap_CS_fsm_state116) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state170) or (ap_const_logic_1 = ap_CS_fsm_state156) or (ap_const_logic_1 = ap_CS_fsm_state114) or (ap_const_logic_1 = ap_CS_fsm_state100) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state44) or ((ap_const_logic_1 = ap_CS_fsm_state43) and (ap_sig_ioackin_pos_r_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state212) and (ap_const_boolean_0 = ap_block_state212_io)))) then 
            grp_fu_2506_ce <= ap_const_logic_1;
        else 
            grp_fu_2506_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2506_p0_assign_proc : process(ap_CS_fsm_state43, tmp_s_reg_1508, tmp_1_16_reg_1740, tmp_2_20_reg_1972, tmp_3_24_reg_2204, reg_4011, reg_4021, reg_4116, ap_CS_fsm_state211, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state47, ap_CS_fsm_state99, ap_CS_fsm_state103, ap_CS_fsm_state155, ap_CS_fsm_state159, ap_CS_fsm_state215)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state211)) then 
            grp_fu_2506_p0 <= tmp_3_24_reg_2204;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state155)) then 
            grp_fu_2506_p0 <= tmp_2_20_reg_1972;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
            grp_fu_2506_p0 <= tmp_1_16_reg_1740;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            grp_fu_2506_p0 <= reg_4116;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_2506_p0 <= reg_4011;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state215) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            grp_fu_2506_p0 <= reg_4021;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            grp_fu_2506_p0 <= tmp_s_reg_1508;
        else 
            grp_fu_2506_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2506_p1_assign_proc : process(ap_CS_fsm_state43, reg_4089, ap_CS_fsm_state211, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state47, ap_CS_fsm_state99, ap_CS_fsm_state103, ap_CS_fsm_state155, ap_CS_fsm_state159, ap_CS_fsm_state215)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_2506_p1 <= ap_const_lv32_42800000;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state215) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            grp_fu_2506_p1 <= reg_4089;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state155) or (ap_const_logic_1 = ap_CS_fsm_state99) or (ap_const_logic_1 = ap_CS_fsm_state211))) then 
            grp_fu_2506_p1 <= ap_const_lv32_3F000000;
        else 
            grp_fu_2506_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2515_p0_assign_proc : process(reg_4101, reg_4110, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state47, ap_CS_fsm_state103, ap_CS_fsm_state159, ap_CS_fsm_state215)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_2515_p0 <= reg_4101;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state215) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            grp_fu_2515_p0 <= reg_4110;
        else 
            grp_fu_2515_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2515_p1_assign_proc : process(reg_4089, reg_4101, ap_CS_fsm_state57, ap_CS_fsm_state59, ap_CS_fsm_state113, ap_CS_fsm_state115, ap_CS_fsm_state169, ap_CS_fsm_state171, ap_CS_fsm_state225, ap_CS_fsm_state227, ap_CS_fsm_state47, ap_CS_fsm_state103, ap_CS_fsm_state159, ap_CS_fsm_state215)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state225) or (ap_const_logic_1 = ap_CS_fsm_state169) or (ap_const_logic_1 = ap_CS_fsm_state113) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            grp_fu_2515_p1 <= reg_4089;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state215) or (ap_const_logic_1 = ap_CS_fsm_state159) or (ap_const_logic_1 = ap_CS_fsm_state103) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state227) or (ap_const_logic_1 = ap_CS_fsm_state171) or (ap_const_logic_1 = ap_CS_fsm_state115) or (ap_const_logic_1 = ap_CS_fsm_state59))) then 
            grp_fu_2515_p1 <= reg_4101;
        else 
            grp_fu_2515_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2549_p0_assign_proc : process(tmp_35_fu_7470_p1, ap_CS_fsm_state69, tmp_40_1_fu_8183_p1, ap_CS_fsm_state125, tmp_40_2_fu_8911_p1, ap_CS_fsm_state181, tmp_40_3_fu_9654_p1, ap_CS_fsm_state237)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state237)) then 
            grp_fu_2549_p0 <= tmp_40_3_fu_9654_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state181)) then 
            grp_fu_2549_p0 <= tmp_40_2_fu_8911_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            grp_fu_2549_p0 <= tmp_40_1_fu_8183_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_2549_p0 <= tmp_35_fu_7470_p1;
        else 
            grp_fu_2549_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2561_p0_assign_proc : process(ap_CS_fsm_state69, tmp_41_fu_7485_p1, ap_CS_fsm_state125, tmp_49_1_fu_8198_p1, ap_CS_fsm_state181, tmp_49_2_fu_8926_p1, ap_CS_fsm_state237, tmp_49_3_fu_9669_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state237)) then 
            grp_fu_2561_p0 <= tmp_49_3_fu_9669_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state181)) then 
            grp_fu_2561_p0 <= tmp_49_2_fu_8926_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state125)) then 
            grp_fu_2561_p0 <= tmp_49_1_fu_8198_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            grp_fu_2561_p0 <= tmp_41_fu_7485_p1;
        else 
            grp_fu_2561_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2569_p0_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp4_iter0, ap_enable_reg_pp5_iter0, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp3_stage1, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp5_stage1, ap_CS_fsm_pp6_stage1, ap_CS_fsm_pp3_stage2, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp6_stage2, tmp_93_fu_7451_p1, tmp_94_fu_7456_p1, tmp_43_fu_7490_p1, ap_CS_fsm_state74, tmp_66_s_fu_8164_p1, tmp_76_s_fu_8169_p1, tmp_53_1_fu_8203_p1, ap_CS_fsm_state130, tmp_66_4_fu_8892_p1, tmp_76_4_fu_8897_p1, tmp_53_2_fu_8931_p1, ap_CS_fsm_state186, tmp_66_5_fu_9620_p1, tmp_76_5_fu_9625_p1, tmp_53_3_fu_9674_p1, ap_CS_fsm_state242, ap_block_pp3_stage1, ap_block_pp3_stage2, ap_block_pp4_stage1, ap_block_pp4_stage2, ap_block_pp5_stage1, ap_block_pp5_stage2, ap_block_pp6_stage1, ap_block_pp6_stage2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state242)) then 
            grp_fu_2569_p0 <= tmp_53_3_fu_9674_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp6_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage2) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1))) then 
            grp_fu_2569_p0 <= tmp_76_5_fu_9625_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp6_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1))) then 
            grp_fu_2569_p0 <= tmp_66_5_fu_9620_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state186)) then 
            grp_fu_2569_p0 <= tmp_53_2_fu_8931_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp5_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1))) then 
            grp_fu_2569_p0 <= tmp_76_4_fu_8897_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp5_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1))) then 
            grp_fu_2569_p0 <= tmp_66_4_fu_8892_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state130)) then 
            grp_fu_2569_p0 <= tmp_53_1_fu_8203_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1))) then 
            grp_fu_2569_p0 <= tmp_76_s_fu_8169_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1))) then 
            grp_fu_2569_p0 <= tmp_66_s_fu_8164_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            grp_fu_2569_p0 <= tmp_43_fu_7490_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage2) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            grp_fu_2569_p0 <= tmp_94_fu_7456_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp3_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            grp_fu_2569_p0 <= tmp_93_fu_7451_p1;
        else 
            grp_fu_2569_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_1_fu_7501_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_i_1_phi_fu_1804_p4) + unsigned(ap_const_lv7_1));
    i_2_fu_8229_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_i_2_phi_fu_2036_p4) + unsigned(ap_const_lv7_1));
    i_3_fu_8957_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_i_3_phi_fu_2268_p4) + unsigned(ap_const_lv7_1));
    i_fu_6788_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_i_phi_fu_1572_p4) + unsigned(ap_const_lv7_1));
    idx_urem_fu_4300_p3 <= 
        next_urem_fu_4288_p2 when (tmp_89_fu_4294_p2(0) = '1') else 
        ap_const_lv9_0;
    indvar4_fu_4251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar_reg_1452_pp0_iter1_reg),64));
    indvar_next1_fu_4262_p2 <= std_logic_vector(unsigned(indvar1_reg_1464) + unsigned(ap_const_lv9_1));
    indvar_next2_fu_6714_p2 <= std_logic_vector(unsigned(indvar3_reg_1497) + unsigned(ap_const_lv4_1));
    indvar_next3_fu_9685_p2 <= std_logic_vector(unsigned(indvar6_reg_2436) + unsigned(ap_const_lv6_1));
    indvar_next4_fu_9739_p2 <= std_logic_vector(unsigned(indvar8_reg_2447) + unsigned(ap_const_lv4_1));
    indvar_next_fu_4245_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_phi_fu_1456_p4) + unsigned(ap_const_lv19_1));
    inv_out7_fu_4183_p4 <= inv_out(63 downto 2);
    next_mul_fu_4268_p2 <= std_logic_vector(unsigned(ap_const_lv19_290) + unsigned(phi_mul_reg_1475));
    next_urem_fu_4288_p2 <= std_logic_vector(unsigned(phi_urem_reg_1486) + unsigned(ap_const_lv9_1));

    patches_ARVALID_assign_proc : process(ap_CS_fsm_state12, ap_reg_ioackin_patches_ARREADY)
    begin
        if (((ap_reg_ioackin_patches_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            patches_ARVALID <= ap_const_logic_1;
        else 
            patches_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    patches_RREADY_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond1_reg_9930, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond1_reg_9930 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            patches_RREADY <= ap_const_logic_1;
        else 
            patches_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    patches_blk_n_AR_assign_proc : process(m_axi_patches_ARREADY, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            patches_blk_n_AR <= m_axi_patches_ARREADY;
        else 
            patches_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    patches_blk_n_R_assign_proc : process(m_axi_patches_RVALID, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond1_reg_9930)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond1_reg_9930 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            patches_blk_n_R <= m_axi_patches_RVALID;
        else 
            patches_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    pos_r_ARVALID_assign_proc : process(ap_CS_fsm_state21, ap_reg_ioackin_pos_r_ARREADY)
    begin
        if (((ap_reg_ioackin_pos_r_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            pos_r_ARVALID <= ap_const_logic_1;
        else 
            pos_r_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    pos_r_AWADDR_assign_proc : process(ap_CS_fsm_state43, ap_CS_fsm_state257, ap_CS_fsm_state136, ap_CS_fsm_state192, ap_CS_fsm_state212, pos_addr_reg_9896, pos_addr_1_reg_11518, pos_addr_2_reg_12296, pos_addr_3_reg_13025, ap_reg_ioackin_pos_r_AWREADY)
    begin
        if (((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state212))) then 
            pos_r_AWADDR <= pos_addr_3_reg_13025;
        elsif (((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state192))) then 
            pos_r_AWADDR <= pos_addr_2_reg_12296;
        elsif (((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            pos_r_AWADDR <= pos_addr_1_reg_11518;
        elsif ((((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state257)) or ((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43)))) then 
            pos_r_AWADDR <= pos_addr_reg_9896;
        else 
            pos_r_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pos_r_AWLEN_assign_proc : process(ap_CS_fsm_state43, ap_CS_fsm_state257, ap_CS_fsm_state136, ap_CS_fsm_state192, ap_CS_fsm_state212, ap_reg_ioackin_pos_r_AWREADY)
    begin
        if (((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state257))) then 
            pos_r_AWLEN <= ap_const_lv32_8;
        elsif ((((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state212)) or ((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state192)) or ((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state136)))) then 
            pos_r_AWLEN <= ap_const_lv32_1;
        else 
            pos_r_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pos_r_AWVALID_assign_proc : process(ap_CS_fsm_state43, ap_CS_fsm_state257, ap_CS_fsm_state136, ap_CS_fsm_state192, ap_CS_fsm_state212, ap_reg_ioackin_pos_r_AWREADY)
    begin
        if ((((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state257)) or ((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state212)) or ((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state192)) or ((ap_reg_ioackin_pos_r_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state136)))) then 
            pos_r_AWVALID <= ap_const_logic_1;
        else 
            pos_r_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    pos_r_BREADY_assign_proc : process(ap_CS_fsm_state86, ap_CS_fsm_state268, ap_CS_fsm_state142, ap_CS_fsm_state198, ap_CS_fsm_state254, pos_r_BVALID)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state268) and (pos_r_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state86) and (pos_r_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state254) and (pos_r_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state198) and (pos_r_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state142) and (pos_r_BVALID = ap_const_logic_1)))) then 
            pos_r_BREADY <= ap_const_logic_1;
        else 
            pos_r_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    pos_r_RREADY_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            pos_r_RREADY <= ap_const_logic_1;
        else 
            pos_r_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    pos_r_WDATA_assign_proc : process(ap_CS_fsm_state81, ap_CS_fsm_pp8_stage0, ap_enable_reg_pp8_iter1, exitcond5_reg_13094, ap_CS_fsm_state137, ap_CS_fsm_state193, ap_CS_fsm_state249, reg_4028, UnifiedRetVal_i_reg_13103, ap_reg_ioackin_pos_r_WREADY, ap_block_pp8_stage0_01001)
    begin
        if (((exitcond5_reg_13094 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp8_stage0_01001) and (ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0))) then 
            pos_r_WDATA <= UnifiedRetVal_i_reg_13103;
        elsif ((((ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state81)) or ((ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state249)) or ((ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state193)) or ((ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state137)))) then 
            pos_r_WDATA <= reg_4028;
        else 
            pos_r_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pos_r_WVALID_assign_proc : process(ap_CS_fsm_state81, ap_CS_fsm_pp8_stage0, ap_enable_reg_pp8_iter1, exitcond5_reg_13094, ap_CS_fsm_state137, ap_CS_fsm_state193, ap_CS_fsm_state249, ap_reg_ioackin_pos_r_WREADY, ap_block_pp8_stage0_01001)
    begin
        if ((((exitcond5_reg_13094 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp8_stage0_01001) and (ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0)) or ((ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state81)) or ((ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state249)) or ((ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state193)) or ((ap_reg_ioackin_pos_r_WREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state137)))) then 
            pos_r_WVALID <= ap_const_logic_1;
        else 
            pos_r_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    pos_r_blk_n_AR_assign_proc : process(m_axi_pos_r_ARREADY, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            pos_r_blk_n_AR <= m_axi_pos_r_ARREADY;
        else 
            pos_r_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    pos_r_blk_n_AW_assign_proc : process(m_axi_pos_r_AWREADY, ap_CS_fsm_state43, ap_CS_fsm_state257, ap_CS_fsm_state136, ap_CS_fsm_state192, ap_CS_fsm_state212)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state257) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state212) or (ap_const_logic_1 = ap_CS_fsm_state192) or (ap_const_logic_1 = ap_CS_fsm_state136))) then 
            pos_r_blk_n_AW <= m_axi_pos_r_AWREADY;
        else 
            pos_r_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    pos_r_blk_n_B_assign_proc : process(m_axi_pos_r_BVALID, ap_CS_fsm_state86, ap_CS_fsm_state268, ap_CS_fsm_state142, ap_CS_fsm_state198, ap_CS_fsm_state254)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state268) or (ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state254) or (ap_const_logic_1 = ap_CS_fsm_state198) or (ap_const_logic_1 = ap_CS_fsm_state142))) then 
            pos_r_blk_n_B <= m_axi_pos_r_BVALID;
        else 
            pos_r_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    pos_r_blk_n_R_assign_proc : process(m_axi_pos_r_RVALID, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            pos_r_blk_n_R <= m_axi_pos_r_RVALID;
        else 
            pos_r_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    pos_r_blk_n_W_assign_proc : process(m_axi_pos_r_WREADY, ap_CS_fsm_state81, ap_CS_fsm_pp8_stage0, ap_enable_reg_pp8_iter1, ap_block_pp8_stage0, exitcond5_reg_13094, ap_CS_fsm_state137, ap_CS_fsm_state193, ap_CS_fsm_state249)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state81) or (ap_const_logic_1 = ap_CS_fsm_state249) or (ap_const_logic_1 = ap_CS_fsm_state193) or (ap_const_logic_1 = ap_CS_fsm_state137) or ((ap_const_boolean_0 = ap_block_pp8_stage0) and (exitcond5_reg_13094 = ap_const_lv1_0) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0)))) then 
            pos_r_blk_n_W <= m_axi_pos_r_WREADY;
        else 
            pos_r_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    pyr_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_reg_ioackin_pyr_ARREADY)
    begin
        if (((ap_reg_ioackin_pyr_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            pyr_ARVALID <= ap_const_logic_1;
        else 
            pyr_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    pyr_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond3_reg_9916, ap_block_pp0_stage0_11001)
    begin
        if (((exitcond3_reg_9916 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pyr_RREADY <= ap_const_logic_1;
        else 
            pyr_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    pyr_blk_n_AR_assign_proc : process(m_axi_pyr_ARREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            pyr_blk_n_AR <= m_axi_pyr_ARREADY;
        else 
            pyr_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    pyr_blk_n_R_assign_proc : process(m_axi_pyr_RVALID, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond3_reg_9916)
    begin
        if (((exitcond3_reg_9916 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            pyr_blk_n_R <= m_axi_pyr_RVALID;
        else 
            pyr_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    pyr_data_address0_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, indvar4_fu_4251_p1, ap_CS_fsm_state72, ap_CS_fsm_state128, ap_CS_fsm_state184, ap_CS_fsm_state240)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state240)) then 
            pyr_data_address0 <= ap_const_lv19_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state184)) then 
            pyr_data_address0 <= ap_const_lv19_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state128)) then 
            pyr_data_address0 <= ap_const_lv19_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            pyr_data_address0 <= ap_const_lv19_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            pyr_data_address0 <= indvar4_fu_4251_p1(19 - 1 downto 0);
        else 
            pyr_data_address0 <= "XXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pyr_data_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, ap_CS_fsm_state72, ap_CS_fsm_state128, ap_CS_fsm_state184, ap_CS_fsm_state240)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state240) or (ap_const_logic_1 = ap_CS_fsm_state184) or (ap_const_logic_1 = ap_CS_fsm_state128) or (ap_const_logic_1 = ap_CS_fsm_state72) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            pyr_data_ce0 <= ap_const_logic_1;
        else 
            pyr_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pyr_data_we0_assign_proc : process(ap_block_pp0_stage0_11001, exitcond3_reg_9916_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((exitcond3_reg_9916_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pyr_data_we0 <= ap_const_logic_1;
        else 
            pyr_data_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ref_patch_with_borde_1071_fu_7591_p129 <= std_logic_vector(unsigned(tmp7_cast_fu_7581_p1) + unsigned(tmp_53_fu_7545_p2));
    ref_patch_with_borde_1072_fu_7741_p129 <= std_logic_vector(unsigned(tmp8_cast_fu_7731_p1) + unsigned(tmp_53_fu_7545_p2));
    ref_patch_with_borde_1263_fu_8319_p129 <= std_logic_vector(unsigned(tmp11_cast_fu_8309_p1) + unsigned(tmp_72_fu_8273_p2));
    ref_patch_with_borde_1264_fu_8469_p129 <= std_logic_vector(unsigned(tmp12_cast_fu_8459_p1) + unsigned(tmp_72_fu_8273_p2));
    ref_patch_with_borde_1366_fu_9047_p129 <= std_logic_vector(unsigned(tmp15_cast_fu_9037_p1) + unsigned(tmp_78_fu_9001_p2));
    ref_patch_with_borde_1367_fu_9197_p129 <= std_logic_vector(unsigned(tmp16_cast_fu_9187_p1) + unsigned(tmp_78_fu_9001_p2));
    ref_patch_with_borde_879_fu_6878_p129 <= std_logic_vector(unsigned(tmp3_cast_fu_6868_p1) + unsigned(tmp_48_fu_6832_p2));
    ref_patch_with_borde_880_fu_7028_p129 <= std_logic_vector(unsigned(tmp4_cast_fu_7018_p1) + unsigned(tmp_48_fu_6832_p2));
    sel_tmp10_i_fu_9851_p2 <= "1" when (tmp_97_fu_9745_p1 = ap_const_lv3_5) else "0";
    sel_tmp11_i_fu_9857_p3 <= 
        cur_px_estimate_2_1 when (sel_tmp10_i_fu_9851_p2(0) = '1') else 
        sel_tmp9_i_fu_9843_p3;
    sel_tmp12_i_fu_9865_p2 <= "1" when (tmp_97_fu_9745_p1 = ap_const_lv3_6) else "0";
    sel_tmp1_i_fu_9787_p3 <= 
        cur_px_estimate_0_0 when (sel_tmp_i_fu_9781_p2(0) = '1') else 
        cur_px_estimate_3_1;
    sel_tmp2_i_fu_9795_p2 <= "1" when (tmp_97_fu_9745_p1 = ap_const_lv3_1) else "0";
    sel_tmp3_i_fu_9801_p3 <= 
        cur_px_estimate_0_1 when (sel_tmp2_i_fu_9795_p2(0) = '1') else 
        sel_tmp1_i_fu_9787_p3;
    sel_tmp4_i_fu_9809_p2 <= "1" when (tmp_97_fu_9745_p1 = ap_const_lv3_2) else "0";
    sel_tmp5_i_fu_9815_p3 <= 
        cur_px_estimate_1_0 when (sel_tmp4_i_fu_9809_p2(0) = '1') else 
        sel_tmp3_i_fu_9801_p3;
    sel_tmp6_i_fu_9823_p2 <= "1" when (tmp_97_fu_9745_p1 = ap_const_lv3_3) else "0";
    sel_tmp7_i_fu_9829_p3 <= 
        cur_px_estimate_1_1 when (sel_tmp6_i_fu_9823_p2(0) = '1') else 
        sel_tmp5_i_fu_9815_p3;
    sel_tmp8_i_fu_9837_p2 <= "1" when (tmp_97_fu_9745_p1 = ap_const_lv3_4) else "0";
    sel_tmp9_i_fu_9843_p3 <= 
        cur_px_estimate_2_0 when (sel_tmp8_i_fu_9837_p2(0) = '1') else 
        sel_tmp7_i_fu_9829_p3;
    sel_tmp_i_fu_9781_p2 <= "1" when (tmp_97_fu_9745_p1 = ap_const_lv3_0) else "0";
    tmp10_cast_fu_8293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp10_fu_8287_p2),7));
    tmp10_fu_8287_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(tmp_76_cast_fu_8283_p1));
    tmp11_cast_fu_8309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp11_fu_8303_p2),7));
    tmp11_fu_8303_p2 <= std_logic_vector(unsigned(tmp_76_cast_fu_8283_p1) + unsigned(ap_const_lv5_A));
    tmp12_cast_fu_8459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp12_fu_8453_p2),7));
    tmp12_fu_8453_p2 <= std_logic_vector(unsigned(tmp_76_cast_fu_8283_p1) + unsigned(ap_const_lv5_15));
    tmp14_cast_fu_9021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp14_fu_9015_p2),7));
    tmp14_fu_9015_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(tmp_90_cast_fu_9011_p1));
    tmp15_cast_fu_9037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp15_fu_9031_p2),7));
    tmp15_fu_9031_p2 <= std_logic_vector(unsigned(tmp_90_cast_fu_9011_p1) + unsigned(ap_const_lv5_A));
    tmp16_cast_fu_9187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp16_fu_9181_p2),7));
    tmp16_fu_9181_p2 <= std_logic_vector(unsigned(tmp_90_cast_fu_9011_p1) + unsigned(ap_const_lv5_15));
    tmp2_cast_fu_6852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_6846_p2),7));
    tmp2_fu_6846_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(tmp_54_cast_fu_6842_p1));
    tmp3_cast_fu_6868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_fu_6862_p2),7));
    tmp3_fu_6862_p2 <= std_logic_vector(unsigned(tmp_54_cast_fu_6842_p1) + unsigned(ap_const_lv5_A));
    tmp4_cast_fu_7018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp4_fu_7012_p2),7));
    tmp4_fu_7012_p2 <= std_logic_vector(unsigned(tmp_54_cast_fu_6842_p1) + unsigned(ap_const_lv5_15));
    tmp6_cast_fu_7565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp6_fu_7559_p2),7));
    tmp6_fu_7559_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(tmp_64_cast_fu_7555_p1));
    tmp7_cast_fu_7581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp7_fu_7575_p2),7));
    tmp7_fu_7575_p2 <= std_logic_vector(unsigned(tmp_64_cast_fu_7555_p1) + unsigned(ap_const_lv5_A));
    tmp8_cast_fu_7731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp8_fu_7725_p2),7));
    tmp8_fu_7725_p2 <= std_logic_vector(unsigned(tmp_64_cast_fu_7555_p1) + unsigned(ap_const_lv5_15));
    tmp_2_fu_4193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inv_out7_fu_4183_p4),64));
    tmp_35_fu_7470_p1 <= tmp_40_neg_fu_7464_p2;
    tmp_40_1_fu_8183_p1 <= tmp_40_neg_1_fu_8177_p2;
    tmp_40_2_fu_8911_p1 <= tmp_40_neg_2_fu_8905_p2;
    tmp_40_3_fu_9654_p1 <= tmp_40_neg_3_fu_9648_p2;
    tmp_40_neg_1_fu_8177_p2 <= (tmp_40_to_int_1_fu_8173_p1 xor ap_const_lv32_80000000);
    tmp_40_neg_2_fu_8905_p2 <= (tmp_40_to_int_2_fu_8901_p1 xor ap_const_lv32_80000000);
    tmp_40_neg_3_fu_9648_p2 <= (tmp_40_to_int_3_fu_9644_p1 xor ap_const_lv32_80000000);
    tmp_40_neg_fu_7464_p2 <= (tmp_40_to_int_fu_7460_p1 xor ap_const_lv32_80000000);
    tmp_40_to_int_1_fu_8173_p1 <= reg_4064;
    tmp_40_to_int_2_fu_8901_p1 <= reg_4064;
    tmp_40_to_int_3_fu_9644_p1 <= reg_4064;
    tmp_40_to_int_fu_7460_p1 <= reg_4064;
    tmp_41_fu_7485_p1 <= tmp_49_neg_fu_7479_p2;
    tmp_43_fu_7490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_4179),32));
    tmp_46_fu_6808_p3 <= (tmp_86_fu_6798_p4 & ap_const_lv1_0);
    tmp_47_cast_fu_6816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_6808_p3),7));
    tmp_47_fu_6820_p3 <= (tmp_86_fu_6798_p4 & ap_const_lv3_0);
    tmp_48_fu_6832_p2 <= std_logic_vector(unsigned(tmp_50_cast_fu_6828_p1) + unsigned(tmp_47_cast_fu_6816_p1));
    tmp_49_1_fu_8198_p1 <= tmp_49_neg_1_fu_8192_p2;
    tmp_49_2_fu_8926_p1 <= tmp_49_neg_2_fu_8920_p2;
    tmp_49_3_fu_9669_p1 <= tmp_49_neg_3_fu_9663_p2;
    tmp_49_neg_1_fu_8192_p2 <= (tmp_49_to_int_1_fu_8188_p1 xor ap_const_lv32_80000000);
    tmp_49_neg_2_fu_8920_p2 <= (tmp_49_to_int_2_fu_8916_p1 xor ap_const_lv32_80000000);
    tmp_49_neg_3_fu_9663_p2 <= (tmp_49_to_int_3_fu_9659_p1 xor ap_const_lv32_80000000);
    tmp_49_neg_fu_7479_p2 <= (tmp_49_to_int_fu_7475_p1 xor ap_const_lv32_80000000);
    tmp_49_to_int_1_fu_8188_p1 <= reg_4165;
    tmp_49_to_int_2_fu_8916_p1 <= reg_4165;
    tmp_49_to_int_3_fu_9659_p1 <= reg_4165;
    tmp_49_to_int_fu_7475_p1 <= reg_4165;
    tmp_50_cast_fu_6828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_6820_p3),7));
    tmp_51_fu_7521_p3 <= (tmp_88_fu_7511_p4 & ap_const_lv1_0);
    tmp_52_fu_7533_p3 <= (tmp_88_fu_7511_p4 & ap_const_lv3_0);
    tmp_53_1_fu_8203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_4179),32));
    tmp_53_2_fu_8931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_4179),32));
    tmp_53_3_fu_9674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_4179),32));
    tmp_53_fu_7545_p2 <= std_logic_vector(unsigned(tmp_61_cast_fu_7541_p1) + unsigned(tmp_60_cast_fu_7529_p1));
    tmp_54_cast1_fu_6838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_87_fu_6794_p1),7));
    tmp_54_cast_fu_6842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_87_fu_6794_p1),5));
    tmp_54_fu_7445_p2 <= std_logic_vector(unsigned(tmp_65_cast_fu_7438_p1) - unsigned(tmp_78_cast_fu_7442_p1));
    tmp_56_fu_7166_p2 <= (tmp_48_fu_6832_p2 or ap_const_lv7_1);
    tmp_57_fu_7222_p101 <= std_logic_vector(unsigned(tmp_56_fu_7166_p2) + unsigned(tmp_54_cast1_fu_6838_p1));
    tmp_58_0_t_fu_6856_p2 <= std_logic_vector(unsigned(tmp_48_fu_6832_p2) + unsigned(tmp2_cast_fu_6852_p1));
    tmp_58_1_t_fu_7569_p2 <= std_logic_vector(unsigned(tmp_53_fu_7545_p2) + unsigned(tmp6_cast_fu_7565_p1));
    tmp_58_2_t_fu_8297_p2 <= std_logic_vector(unsigned(tmp_72_fu_8273_p2) + unsigned(tmp10_cast_fu_8293_p1));
    tmp_58_3_t_fu_9025_p2 <= std_logic_vector(unsigned(tmp_78_fu_9001_p2) + unsigned(tmp14_cast_fu_9021_p1));
    tmp_58_fu_7432_p2 <= std_logic_vector(unsigned(tmp_93_cast_fu_7162_p1) - unsigned(tmp_96_cast_fu_7428_p1));
    tmp_60_1_cast_fu_8151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp4_iter0_ref_patch_with_borde_1070_reg_1811),9));
    tmp_60_2_cast_fu_8879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp5_iter0_ref_patch_with_borde_1262_reg_2043),9));
    tmp_60_3_cast_fu_9607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp6_iter0_ref_patch_with_borde_1365_reg_2275),9));
    tmp_60_cast_fu_7529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_7521_p3),7));
    tmp_61_cast_fu_7541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_7533_p3),7));
    tmp_64_1_cast_fu_8155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ref_patch_with_borde_1071_reg_11449),9));
    tmp_64_2_cast_fu_8883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ref_patch_with_borde_1263_reg_12227),9));
    tmp_64_3_cast_fu_9611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ref_patch_with_borde_1366_reg_13005),9));
    tmp_64_cast1_fu_7551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_91_fu_7507_p1),7));
    tmp_64_cast_fu_7555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_91_fu_7507_p1),5));
    tmp_65_1_fu_8158_p2 <= std_logic_vector(unsigned(tmp_60_1_cast_fu_8151_p1) - unsigned(tmp_64_1_cast_fu_8155_p1));
    tmp_65_2_fu_8886_p2 <= std_logic_vector(unsigned(tmp_60_2_cast_fu_8879_p1) - unsigned(tmp_64_2_cast_fu_8883_p1));
    tmp_65_3_fu_9614_p2 <= std_logic_vector(unsigned(tmp_60_3_cast_fu_9607_p1) - unsigned(tmp_64_3_cast_fu_9611_p1));
    tmp_65_cast_fu_7438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp3_iter0_ref_patch_with_borde_878_reg_1579),9));
        tmp_66_4_fu_8892_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_65_2_fu_8886_p2),32));

        tmp_66_5_fu_9620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_65_3_fu_9614_p2),32));

        tmp_66_s_fu_8164_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_65_1_fu_8158_p2),32));

    tmp_70_1_cast_fu_7875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ref_patch_with_borde_1072_fu_7741_p130),9));
    tmp_70_2_cast_fu_8603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ref_patch_with_borde_1264_fu_8469_p130),9));
    tmp_70_3_cast_fu_9331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ref_patch_with_borde_1367_fu_9197_p130),9));
    tmp_70_fu_8249_p3 <= (tmp_90_fu_8239_p4 & ap_const_lv1_0);
    tmp_71_fu_8261_p3 <= (tmp_90_fu_8239_p4 & ap_const_lv3_0);
    tmp_72_cast_fu_8257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_8249_p3),7));
    tmp_72_fu_8273_p2 <= std_logic_vector(unsigned(tmp_73_cast_fu_8269_p1) + unsigned(tmp_72_cast_fu_8257_p1));
    tmp_73_cast_fu_8269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_8261_p3),7));
    tmp_73_fu_7879_p2 <= (tmp_53_fu_7545_p2 or ap_const_lv7_1);
    tmp_74_1_cast_fu_8141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_fu_7935_p102),9));
    tmp_74_2_cast_fu_8869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_80_fu_8663_p102),9));
    tmp_74_3_cast_fu_9597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_9391_p102),9));
    tmp_74_fu_7935_p101 <= std_logic_vector(unsigned(tmp_73_fu_7879_p2) + unsigned(tmp_64_cast1_fu_7551_p1));
    tmp_75_1_fu_8145_p2 <= std_logic_vector(unsigned(tmp_70_1_cast_fu_7875_p1) - unsigned(tmp_74_1_cast_fu_8141_p1));
    tmp_75_2_fu_8873_p2 <= std_logic_vector(unsigned(tmp_70_2_cast_fu_8603_p1) - unsigned(tmp_74_2_cast_fu_8869_p1));
    tmp_75_3_fu_9601_p2 <= std_logic_vector(unsigned(tmp_70_3_cast_fu_9331_p1) - unsigned(tmp_74_3_cast_fu_9597_p1));
        tmp_76_4_fu_8897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_75_2_reg_12232),32));

        tmp_76_5_fu_9625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_75_3_reg_13010),32));

    tmp_76_cast1_fu_8279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_95_fu_8235_p1),7));
    tmp_76_cast_fu_8283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_95_fu_8235_p1),5));
    tmp_76_fu_8977_p3 <= (tmp_92_fu_8967_p4 & ap_const_lv1_0);
        tmp_76_s_fu_8169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_75_1_reg_11454),32));

    tmp_77_fu_8989_p3 <= (tmp_92_fu_8967_p4 & ap_const_lv3_0);
    tmp_78_cast_fu_7442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ref_patch_with_borde_879_reg_10677),9));
    tmp_78_fu_9001_p2 <= std_logic_vector(unsigned(tmp_87_cast_fu_8997_p1) + unsigned(tmp_86_cast_fu_8985_p1));
    tmp_79_fu_8607_p2 <= (tmp_72_fu_8273_p2 or ap_const_lv7_1);
    tmp_80_fu_8663_p101 <= std_logic_vector(unsigned(tmp_79_fu_8607_p2) + unsigned(tmp_76_cast1_fu_8279_p1));
    tmp_82_fu_9335_p2 <= (tmp_78_fu_9001_p2 or ap_const_lv7_1);
    tmp_83_fu_9391_p101 <= std_logic_vector(unsigned(tmp_82_fu_9335_p2) + unsigned(tmp_90_cast1_fu_9007_p1));
    tmp_84_cast_fu_4217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cur_px_estimate_ptr5_fu_4203_p4),63));
    tmp_84_fu_4213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cur_px_estimate_ptr5_fu_4203_p4),64));
    tmp_85_fu_6730_p1 <= indvar3_reg_1497(1 - 1 downto 0);
    tmp_86_cast_fu_8985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_fu_8977_p3),7));
    tmp_86_fu_6798_p4 <= ap_phi_mux_i_0_i_phi_fu_1572_p4(5 downto 3);
    tmp_87_cast_fu_8997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_fu_8989_p3),7));
    tmp_87_fu_6794_p1 <= ap_phi_mux_i_0_i_phi_fu_1572_p4(3 - 1 downto 0);
    tmp_88_fu_7511_p4 <= ap_phi_mux_i_0_i_1_phi_fu_1804_p4(5 downto 3);
    tmp_89_fu_4294_p2 <= "1" when (unsigned(next_urem_fu_4288_p2) < unsigned(ap_const_lv9_64)) else "0";
    tmp_90_cast1_fu_9007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_96_fu_8963_p1),7));
    tmp_90_cast_fu_9011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_96_fu_8963_p1),5));
    tmp_90_fu_8239_p4 <= ap_phi_mux_i_0_i_2_phi_fu_2036_p4(5 downto 3);
    tmp_91_fu_7507_p1 <= ap_phi_mux_i_0_i_1_phi_fu_1804_p4(3 - 1 downto 0);
    tmp_92_fu_8967_p4 <= ap_phi_mux_i_0_i_3_phi_fu_2268_p4(5 downto 3);
    tmp_93_cast_fu_7162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ref_patch_with_borde_880_fu_7028_p130),9));
        tmp_93_fu_7451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_54_fu_7445_p2),32));

        tmp_94_fu_7456_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_58_reg_10682),32));

    tmp_95_fu_8235_p1 <= ap_phi_mux_i_0_i_2_phi_fu_2036_p4(3 - 1 downto 0);
    tmp_96_cast_fu_7428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_7222_p102),9));
    tmp_96_fu_8963_p1 <= ap_phi_mux_i_0_i_3_phi_fu_2268_p4(3 - 1 downto 0);
    tmp_97_fu_9745_p1 <= indvar8_reg_2447(3 - 1 downto 0);
    tmp_fu_4284_p1 <= phi_urem_reg_1486(7 - 1 downto 0);
    transfer_pyr_read_read_fu_1284_p2 <= transfer_pyr;
end behav;
