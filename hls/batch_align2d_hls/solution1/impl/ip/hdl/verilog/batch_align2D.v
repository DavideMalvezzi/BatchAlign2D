// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="batch_align2D,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.061600,HLS_SYN_LAT=238855,HLS_SYN_TPT=none,HLS_SYN_MEM=240,HLS_SYN_DSP=16,HLS_SYN_FF=10582,HLS_SYN_LUT=8956,HLS_VERSION=2018_3}" *)

module batch_align2D (
        ap_clk,
        ap_rst_n,
        m_axi_pyr_AWVALID,
        m_axi_pyr_AWREADY,
        m_axi_pyr_AWADDR,
        m_axi_pyr_AWID,
        m_axi_pyr_AWLEN,
        m_axi_pyr_AWSIZE,
        m_axi_pyr_AWBURST,
        m_axi_pyr_AWLOCK,
        m_axi_pyr_AWCACHE,
        m_axi_pyr_AWPROT,
        m_axi_pyr_AWQOS,
        m_axi_pyr_AWREGION,
        m_axi_pyr_AWUSER,
        m_axi_pyr_WVALID,
        m_axi_pyr_WREADY,
        m_axi_pyr_WDATA,
        m_axi_pyr_WSTRB,
        m_axi_pyr_WLAST,
        m_axi_pyr_WID,
        m_axi_pyr_WUSER,
        m_axi_pyr_ARVALID,
        m_axi_pyr_ARREADY,
        m_axi_pyr_ARADDR,
        m_axi_pyr_ARID,
        m_axi_pyr_ARLEN,
        m_axi_pyr_ARSIZE,
        m_axi_pyr_ARBURST,
        m_axi_pyr_ARLOCK,
        m_axi_pyr_ARCACHE,
        m_axi_pyr_ARPROT,
        m_axi_pyr_ARQOS,
        m_axi_pyr_ARREGION,
        m_axi_pyr_ARUSER,
        m_axi_pyr_RVALID,
        m_axi_pyr_RREADY,
        m_axi_pyr_RDATA,
        m_axi_pyr_RLAST,
        m_axi_pyr_RID,
        m_axi_pyr_RUSER,
        m_axi_pyr_RRESP,
        m_axi_pyr_BVALID,
        m_axi_pyr_BREADY,
        m_axi_pyr_BRESP,
        m_axi_pyr_BID,
        m_axi_pyr_BUSER,
        m_axi_patches_AWVALID,
        m_axi_patches_AWREADY,
        m_axi_patches_AWADDR,
        m_axi_patches_AWID,
        m_axi_patches_AWLEN,
        m_axi_patches_AWSIZE,
        m_axi_patches_AWBURST,
        m_axi_patches_AWLOCK,
        m_axi_patches_AWCACHE,
        m_axi_patches_AWPROT,
        m_axi_patches_AWQOS,
        m_axi_patches_AWREGION,
        m_axi_patches_AWUSER,
        m_axi_patches_WVALID,
        m_axi_patches_WREADY,
        m_axi_patches_WDATA,
        m_axi_patches_WSTRB,
        m_axi_patches_WLAST,
        m_axi_patches_WID,
        m_axi_patches_WUSER,
        m_axi_patches_ARVALID,
        m_axi_patches_ARREADY,
        m_axi_patches_ARADDR,
        m_axi_patches_ARID,
        m_axi_patches_ARLEN,
        m_axi_patches_ARSIZE,
        m_axi_patches_ARBURST,
        m_axi_patches_ARLOCK,
        m_axi_patches_ARCACHE,
        m_axi_patches_ARPROT,
        m_axi_patches_ARQOS,
        m_axi_patches_ARREGION,
        m_axi_patches_ARUSER,
        m_axi_patches_RVALID,
        m_axi_patches_RREADY,
        m_axi_patches_RDATA,
        m_axi_patches_RLAST,
        m_axi_patches_RID,
        m_axi_patches_RUSER,
        m_axi_patches_RRESP,
        m_axi_patches_BVALID,
        m_axi_patches_BREADY,
        m_axi_patches_BRESP,
        m_axi_patches_BID,
        m_axi_patches_BUSER,
        m_axi_pos_r_AWVALID,
        m_axi_pos_r_AWREADY,
        m_axi_pos_r_AWADDR,
        m_axi_pos_r_AWID,
        m_axi_pos_r_AWLEN,
        m_axi_pos_r_AWSIZE,
        m_axi_pos_r_AWBURST,
        m_axi_pos_r_AWLOCK,
        m_axi_pos_r_AWCACHE,
        m_axi_pos_r_AWPROT,
        m_axi_pos_r_AWQOS,
        m_axi_pos_r_AWREGION,
        m_axi_pos_r_AWUSER,
        m_axi_pos_r_WVALID,
        m_axi_pos_r_WREADY,
        m_axi_pos_r_WDATA,
        m_axi_pos_r_WSTRB,
        m_axi_pos_r_WLAST,
        m_axi_pos_r_WID,
        m_axi_pos_r_WUSER,
        m_axi_pos_r_ARVALID,
        m_axi_pos_r_ARREADY,
        m_axi_pos_r_ARADDR,
        m_axi_pos_r_ARID,
        m_axi_pos_r_ARLEN,
        m_axi_pos_r_ARSIZE,
        m_axi_pos_r_ARBURST,
        m_axi_pos_r_ARLOCK,
        m_axi_pos_r_ARCACHE,
        m_axi_pos_r_ARPROT,
        m_axi_pos_r_ARQOS,
        m_axi_pos_r_ARREGION,
        m_axi_pos_r_ARUSER,
        m_axi_pos_r_RVALID,
        m_axi_pos_r_RREADY,
        m_axi_pos_r_RDATA,
        m_axi_pos_r_RLAST,
        m_axi_pos_r_RID,
        m_axi_pos_r_RUSER,
        m_axi_pos_r_RRESP,
        m_axi_pos_r_BVALID,
        m_axi_pos_r_BREADY,
        m_axi_pos_r_BRESP,
        m_axi_pos_r_BID,
        m_axi_pos_r_BUSER,
        m_axi_debug_AWVALID,
        m_axi_debug_AWREADY,
        m_axi_debug_AWADDR,
        m_axi_debug_AWID,
        m_axi_debug_AWLEN,
        m_axi_debug_AWSIZE,
        m_axi_debug_AWBURST,
        m_axi_debug_AWLOCK,
        m_axi_debug_AWCACHE,
        m_axi_debug_AWPROT,
        m_axi_debug_AWQOS,
        m_axi_debug_AWREGION,
        m_axi_debug_AWUSER,
        m_axi_debug_WVALID,
        m_axi_debug_WREADY,
        m_axi_debug_WDATA,
        m_axi_debug_WSTRB,
        m_axi_debug_WLAST,
        m_axi_debug_WID,
        m_axi_debug_WUSER,
        m_axi_debug_ARVALID,
        m_axi_debug_ARREADY,
        m_axi_debug_ARADDR,
        m_axi_debug_ARID,
        m_axi_debug_ARLEN,
        m_axi_debug_ARSIZE,
        m_axi_debug_ARBURST,
        m_axi_debug_ARLOCK,
        m_axi_debug_ARCACHE,
        m_axi_debug_ARPROT,
        m_axi_debug_ARQOS,
        m_axi_debug_ARREGION,
        m_axi_debug_ARUSER,
        m_axi_debug_RVALID,
        m_axi_debug_RREADY,
        m_axi_debug_RDATA,
        m_axi_debug_RLAST,
        m_axi_debug_RID,
        m_axi_debug_RUSER,
        m_axi_debug_RRESP,
        m_axi_debug_BVALID,
        m_axi_debug_BREADY,
        m_axi_debug_BRESP,
        m_axi_debug_BID,
        m_axi_debug_BUSER,
        s_axi_ctrl_AWVALID,
        s_axi_ctrl_AWREADY,
        s_axi_ctrl_AWADDR,
        s_axi_ctrl_WVALID,
        s_axi_ctrl_WREADY,
        s_axi_ctrl_WDATA,
        s_axi_ctrl_WSTRB,
        s_axi_ctrl_ARVALID,
        s_axi_ctrl_ARREADY,
        s_axi_ctrl_ARADDR,
        s_axi_ctrl_RVALID,
        s_axi_ctrl_RREADY,
        s_axi_ctrl_RDATA,
        s_axi_ctrl_RRESP,
        s_axi_ctrl_BVALID,
        s_axi_ctrl_BREADY,
        s_axi_ctrl_BRESP,
        interrupt,
        s_axi_param_AWVALID,
        s_axi_param_AWREADY,
        s_axi_param_AWADDR,
        s_axi_param_WVALID,
        s_axi_param_WREADY,
        s_axi_param_WDATA,
        s_axi_param_WSTRB,
        s_axi_param_ARVALID,
        s_axi_param_ARREADY,
        s_axi_param_ARADDR,
        s_axi_param_RVALID,
        s_axi_param_RREADY,
        s_axi_param_RDATA,
        s_axi_param_RRESP,
        s_axi_param_BVALID,
        s_axi_param_BREADY,
        s_axi_param_BRESP
);

parameter    ap_ST_fsm_state1 = 150'd1;
parameter    ap_ST_fsm_state2 = 150'd2;
parameter    ap_ST_fsm_state3 = 150'd4;
parameter    ap_ST_fsm_state4 = 150'd8;
parameter    ap_ST_fsm_state5 = 150'd16;
parameter    ap_ST_fsm_state6 = 150'd32;
parameter    ap_ST_fsm_state7 = 150'd64;
parameter    ap_ST_fsm_state8 = 150'd128;
parameter    ap_ST_fsm_pp0_stage0 = 150'd256;
parameter    ap_ST_fsm_state12 = 150'd512;
parameter    ap_ST_fsm_state13 = 150'd1024;
parameter    ap_ST_fsm_state14 = 150'd2048;
parameter    ap_ST_fsm_state15 = 150'd4096;
parameter    ap_ST_fsm_state16 = 150'd8192;
parameter    ap_ST_fsm_state17 = 150'd16384;
parameter    ap_ST_fsm_state18 = 150'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 150'd65536;
parameter    ap_ST_fsm_state21 = 150'd131072;
parameter    ap_ST_fsm_state22 = 150'd262144;
parameter    ap_ST_fsm_state23 = 150'd524288;
parameter    ap_ST_fsm_state24 = 150'd1048576;
parameter    ap_ST_fsm_state25 = 150'd2097152;
parameter    ap_ST_fsm_state26 = 150'd4194304;
parameter    ap_ST_fsm_state27 = 150'd8388608;
parameter    ap_ST_fsm_pp2_stage0 = 150'd16777216;
parameter    ap_ST_fsm_state30 = 150'd33554432;
parameter    ap_ST_fsm_state31 = 150'd67108864;
parameter    ap_ST_fsm_pp3_stage0 = 150'd134217728;
parameter    ap_ST_fsm_pp3_stage1 = 150'd268435456;
parameter    ap_ST_fsm_pp3_stage2 = 150'd536870912;
parameter    ap_ST_fsm_pp3_stage3 = 150'd1073741824;
parameter    ap_ST_fsm_state44 = 150'd2147483648;
parameter    ap_ST_fsm_state45 = 150'd4294967296;
parameter    ap_ST_fsm_state46 = 150'd8589934592;
parameter    ap_ST_fsm_state47 = 150'd17179869184;
parameter    ap_ST_fsm_state48 = 150'd34359738368;
parameter    ap_ST_fsm_state49 = 150'd68719476736;
parameter    ap_ST_fsm_state50 = 150'd137438953472;
parameter    ap_ST_fsm_state51 = 150'd274877906944;
parameter    ap_ST_fsm_state52 = 150'd549755813888;
parameter    ap_ST_fsm_state53 = 150'd1099511627776;
parameter    ap_ST_fsm_state54 = 150'd2199023255552;
parameter    ap_ST_fsm_state55 = 150'd4398046511104;
parameter    ap_ST_fsm_state56 = 150'd8796093022208;
parameter    ap_ST_fsm_state57 = 150'd17592186044416;
parameter    ap_ST_fsm_state58 = 150'd35184372088832;
parameter    ap_ST_fsm_state59 = 150'd70368744177664;
parameter    ap_ST_fsm_state60 = 150'd140737488355328;
parameter    ap_ST_fsm_state61 = 150'd281474976710656;
parameter    ap_ST_fsm_state62 = 150'd562949953421312;
parameter    ap_ST_fsm_state63 = 150'd1125899906842624;
parameter    ap_ST_fsm_state64 = 150'd2251799813685248;
parameter    ap_ST_fsm_state65 = 150'd4503599627370496;
parameter    ap_ST_fsm_state66 = 150'd9007199254740992;
parameter    ap_ST_fsm_state67 = 150'd18014398509481984;
parameter    ap_ST_fsm_state68 = 150'd36028797018963968;
parameter    ap_ST_fsm_state69 = 150'd72057594037927936;
parameter    ap_ST_fsm_state70 = 150'd144115188075855872;
parameter    ap_ST_fsm_state71 = 150'd288230376151711744;
parameter    ap_ST_fsm_state72 = 150'd576460752303423488;
parameter    ap_ST_fsm_state73 = 150'd1152921504606846976;
parameter    ap_ST_fsm_state74 = 150'd2305843009213693952;
parameter    ap_ST_fsm_state75 = 150'd4611686018427387904;
parameter    ap_ST_fsm_state76 = 150'd9223372036854775808;
parameter    ap_ST_fsm_state77 = 150'd18446744073709551616;
parameter    ap_ST_fsm_state78 = 150'd36893488147419103232;
parameter    ap_ST_fsm_state79 = 150'd73786976294838206464;
parameter    ap_ST_fsm_state80 = 150'd147573952589676412928;
parameter    ap_ST_fsm_state81 = 150'd295147905179352825856;
parameter    ap_ST_fsm_state82 = 150'd590295810358705651712;
parameter    ap_ST_fsm_state83 = 150'd1180591620717411303424;
parameter    ap_ST_fsm_state84 = 150'd2361183241434822606848;
parameter    ap_ST_fsm_state85 = 150'd4722366482869645213696;
parameter    ap_ST_fsm_state86 = 150'd9444732965739290427392;
parameter    ap_ST_fsm_state87 = 150'd18889465931478580854784;
parameter    ap_ST_fsm_state88 = 150'd37778931862957161709568;
parameter    ap_ST_fsm_state89 = 150'd75557863725914323419136;
parameter    ap_ST_fsm_state90 = 150'd151115727451828646838272;
parameter    ap_ST_fsm_state91 = 150'd302231454903657293676544;
parameter    ap_ST_fsm_state92 = 150'd604462909807314587353088;
parameter    ap_ST_fsm_state93 = 150'd1208925819614629174706176;
parameter    ap_ST_fsm_state94 = 150'd2417851639229258349412352;
parameter    ap_ST_fsm_state95 = 150'd4835703278458516698824704;
parameter    ap_ST_fsm_state96 = 150'd9671406556917033397649408;
parameter    ap_ST_fsm_state97 = 150'd19342813113834066795298816;
parameter    ap_ST_fsm_state98 = 150'd38685626227668133590597632;
parameter    ap_ST_fsm_state99 = 150'd77371252455336267181195264;
parameter    ap_ST_fsm_state100 = 150'd154742504910672534362390528;
parameter    ap_ST_fsm_state101 = 150'd309485009821345068724781056;
parameter    ap_ST_fsm_state102 = 150'd618970019642690137449562112;
parameter    ap_ST_fsm_state103 = 150'd1237940039285380274899124224;
parameter    ap_ST_fsm_state104 = 150'd2475880078570760549798248448;
parameter    ap_ST_fsm_state105 = 150'd4951760157141521099596496896;
parameter    ap_ST_fsm_state106 = 150'd9903520314283042199192993792;
parameter    ap_ST_fsm_state107 = 150'd19807040628566084398385987584;
parameter    ap_ST_fsm_state108 = 150'd39614081257132168796771975168;
parameter    ap_ST_fsm_state109 = 150'd79228162514264337593543950336;
parameter    ap_ST_fsm_state110 = 150'd158456325028528675187087900672;
parameter    ap_ST_fsm_state111 = 150'd316912650057057350374175801344;
parameter    ap_ST_fsm_state112 = 150'd633825300114114700748351602688;
parameter    ap_ST_fsm_state113 = 150'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state114 = 150'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state115 = 150'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state116 = 150'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state117 = 150'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state118 = 150'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state119 = 150'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state120 = 150'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state121 = 150'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state122 = 150'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state123 = 150'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state124 = 150'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state125 = 150'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state126 = 150'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state127 = 150'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state128 = 150'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state129 = 150'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state130 = 150'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state131 = 150'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state132 = 150'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state133 = 150'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state134 = 150'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state135 = 150'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state136 = 150'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state137 = 150'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state138 = 150'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state139 = 150'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state140 = 150'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state141 = 150'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state142 = 150'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state143 = 150'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state144 = 150'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state145 = 150'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state146 = 150'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state147 = 150'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state148 = 150'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state149 = 150'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state150 = 150'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_pp4_stage0 = 150'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state153 = 150'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state154 = 150'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state155 = 150'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state156 = 150'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state157 = 150'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_pp5_stage0 = 150'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state160 = 150'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state161 = 150'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state162 = 150'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state163 = 150'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state164 = 150'd713623846352979940529142984724747568191373312;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_PARAM_DATA_WIDTH = 32;
parameter    C_S_AXI_PARAM_ADDR_WIDTH = 7;
parameter    C_M_AXI_PYR_ID_WIDTH = 1;
parameter    C_M_AXI_PYR_ADDR_WIDTH = 64;
parameter    C_M_AXI_PYR_DATA_WIDTH = 32;
parameter    C_M_AXI_PYR_AWUSER_WIDTH = 1;
parameter    C_M_AXI_PYR_ARUSER_WIDTH = 1;
parameter    C_M_AXI_PYR_WUSER_WIDTH = 1;
parameter    C_M_AXI_PYR_RUSER_WIDTH = 1;
parameter    C_M_AXI_PYR_BUSER_WIDTH = 1;
parameter    C_M_AXI_PYR_USER_VALUE = 0;
parameter    C_M_AXI_PYR_PROT_VALUE = 0;
parameter    C_M_AXI_PYR_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_PATCHES_ID_WIDTH = 1;
parameter    C_M_AXI_PATCHES_ADDR_WIDTH = 64;
parameter    C_M_AXI_PATCHES_DATA_WIDTH = 32;
parameter    C_M_AXI_PATCHES_AWUSER_WIDTH = 1;
parameter    C_M_AXI_PATCHES_ARUSER_WIDTH = 1;
parameter    C_M_AXI_PATCHES_WUSER_WIDTH = 1;
parameter    C_M_AXI_PATCHES_RUSER_WIDTH = 1;
parameter    C_M_AXI_PATCHES_BUSER_WIDTH = 1;
parameter    C_M_AXI_PATCHES_USER_VALUE = 0;
parameter    C_M_AXI_PATCHES_PROT_VALUE = 0;
parameter    C_M_AXI_PATCHES_CACHE_VALUE = 3;
parameter    C_M_AXI_POS_R_ID_WIDTH = 1;
parameter    C_M_AXI_POS_R_ADDR_WIDTH = 64;
parameter    C_M_AXI_POS_R_DATA_WIDTH = 32;
parameter    C_M_AXI_POS_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_POS_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_POS_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_POS_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_POS_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_POS_R_USER_VALUE = 0;
parameter    C_M_AXI_POS_R_PROT_VALUE = 0;
parameter    C_M_AXI_POS_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DEBUG_ID_WIDTH = 1;
parameter    C_M_AXI_DEBUG_ADDR_WIDTH = 64;
parameter    C_M_AXI_DEBUG_DATA_WIDTH = 32;
parameter    C_M_AXI_DEBUG_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DEBUG_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DEBUG_WUSER_WIDTH = 1;
parameter    C_M_AXI_DEBUG_RUSER_WIDTH = 1;
parameter    C_M_AXI_DEBUG_BUSER_WIDTH = 1;
parameter    C_M_AXI_DEBUG_USER_VALUE = 0;
parameter    C_M_AXI_DEBUG_PROT_VALUE = 0;
parameter    C_M_AXI_DEBUG_CACHE_VALUE = 3;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_PARAM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_PYR_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_PATCHES_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_POS_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DEBUG_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_pyr_AWVALID;
input   m_axi_pyr_AWREADY;
output  [C_M_AXI_PYR_ADDR_WIDTH - 1:0] m_axi_pyr_AWADDR;
output  [C_M_AXI_PYR_ID_WIDTH - 1:0] m_axi_pyr_AWID;
output  [7:0] m_axi_pyr_AWLEN;
output  [2:0] m_axi_pyr_AWSIZE;
output  [1:0] m_axi_pyr_AWBURST;
output  [1:0] m_axi_pyr_AWLOCK;
output  [3:0] m_axi_pyr_AWCACHE;
output  [2:0] m_axi_pyr_AWPROT;
output  [3:0] m_axi_pyr_AWQOS;
output  [3:0] m_axi_pyr_AWREGION;
output  [C_M_AXI_PYR_AWUSER_WIDTH - 1:0] m_axi_pyr_AWUSER;
output   m_axi_pyr_WVALID;
input   m_axi_pyr_WREADY;
output  [C_M_AXI_PYR_DATA_WIDTH - 1:0] m_axi_pyr_WDATA;
output  [C_M_AXI_PYR_WSTRB_WIDTH - 1:0] m_axi_pyr_WSTRB;
output   m_axi_pyr_WLAST;
output  [C_M_AXI_PYR_ID_WIDTH - 1:0] m_axi_pyr_WID;
output  [C_M_AXI_PYR_WUSER_WIDTH - 1:0] m_axi_pyr_WUSER;
output   m_axi_pyr_ARVALID;
input   m_axi_pyr_ARREADY;
output  [C_M_AXI_PYR_ADDR_WIDTH - 1:0] m_axi_pyr_ARADDR;
output  [C_M_AXI_PYR_ID_WIDTH - 1:0] m_axi_pyr_ARID;
output  [7:0] m_axi_pyr_ARLEN;
output  [2:0] m_axi_pyr_ARSIZE;
output  [1:0] m_axi_pyr_ARBURST;
output  [1:0] m_axi_pyr_ARLOCK;
output  [3:0] m_axi_pyr_ARCACHE;
output  [2:0] m_axi_pyr_ARPROT;
output  [3:0] m_axi_pyr_ARQOS;
output  [3:0] m_axi_pyr_ARREGION;
output  [C_M_AXI_PYR_ARUSER_WIDTH - 1:0] m_axi_pyr_ARUSER;
input   m_axi_pyr_RVALID;
output   m_axi_pyr_RREADY;
input  [C_M_AXI_PYR_DATA_WIDTH - 1:0] m_axi_pyr_RDATA;
input   m_axi_pyr_RLAST;
input  [C_M_AXI_PYR_ID_WIDTH - 1:0] m_axi_pyr_RID;
input  [C_M_AXI_PYR_RUSER_WIDTH - 1:0] m_axi_pyr_RUSER;
input  [1:0] m_axi_pyr_RRESP;
input   m_axi_pyr_BVALID;
output   m_axi_pyr_BREADY;
input  [1:0] m_axi_pyr_BRESP;
input  [C_M_AXI_PYR_ID_WIDTH - 1:0] m_axi_pyr_BID;
input  [C_M_AXI_PYR_BUSER_WIDTH - 1:0] m_axi_pyr_BUSER;
output   m_axi_patches_AWVALID;
input   m_axi_patches_AWREADY;
output  [C_M_AXI_PATCHES_ADDR_WIDTH - 1:0] m_axi_patches_AWADDR;
output  [C_M_AXI_PATCHES_ID_WIDTH - 1:0] m_axi_patches_AWID;
output  [7:0] m_axi_patches_AWLEN;
output  [2:0] m_axi_patches_AWSIZE;
output  [1:0] m_axi_patches_AWBURST;
output  [1:0] m_axi_patches_AWLOCK;
output  [3:0] m_axi_patches_AWCACHE;
output  [2:0] m_axi_patches_AWPROT;
output  [3:0] m_axi_patches_AWQOS;
output  [3:0] m_axi_patches_AWREGION;
output  [C_M_AXI_PATCHES_AWUSER_WIDTH - 1:0] m_axi_patches_AWUSER;
output   m_axi_patches_WVALID;
input   m_axi_patches_WREADY;
output  [C_M_AXI_PATCHES_DATA_WIDTH - 1:0] m_axi_patches_WDATA;
output  [C_M_AXI_PATCHES_WSTRB_WIDTH - 1:0] m_axi_patches_WSTRB;
output   m_axi_patches_WLAST;
output  [C_M_AXI_PATCHES_ID_WIDTH - 1:0] m_axi_patches_WID;
output  [C_M_AXI_PATCHES_WUSER_WIDTH - 1:0] m_axi_patches_WUSER;
output   m_axi_patches_ARVALID;
input   m_axi_patches_ARREADY;
output  [C_M_AXI_PATCHES_ADDR_WIDTH - 1:0] m_axi_patches_ARADDR;
output  [C_M_AXI_PATCHES_ID_WIDTH - 1:0] m_axi_patches_ARID;
output  [7:0] m_axi_patches_ARLEN;
output  [2:0] m_axi_patches_ARSIZE;
output  [1:0] m_axi_patches_ARBURST;
output  [1:0] m_axi_patches_ARLOCK;
output  [3:0] m_axi_patches_ARCACHE;
output  [2:0] m_axi_patches_ARPROT;
output  [3:0] m_axi_patches_ARQOS;
output  [3:0] m_axi_patches_ARREGION;
output  [C_M_AXI_PATCHES_ARUSER_WIDTH - 1:0] m_axi_patches_ARUSER;
input   m_axi_patches_RVALID;
output   m_axi_patches_RREADY;
input  [C_M_AXI_PATCHES_DATA_WIDTH - 1:0] m_axi_patches_RDATA;
input   m_axi_patches_RLAST;
input  [C_M_AXI_PATCHES_ID_WIDTH - 1:0] m_axi_patches_RID;
input  [C_M_AXI_PATCHES_RUSER_WIDTH - 1:0] m_axi_patches_RUSER;
input  [1:0] m_axi_patches_RRESP;
input   m_axi_patches_BVALID;
output   m_axi_patches_BREADY;
input  [1:0] m_axi_patches_BRESP;
input  [C_M_AXI_PATCHES_ID_WIDTH - 1:0] m_axi_patches_BID;
input  [C_M_AXI_PATCHES_BUSER_WIDTH - 1:0] m_axi_patches_BUSER;
output   m_axi_pos_r_AWVALID;
input   m_axi_pos_r_AWREADY;
output  [C_M_AXI_POS_R_ADDR_WIDTH - 1:0] m_axi_pos_r_AWADDR;
output  [C_M_AXI_POS_R_ID_WIDTH - 1:0] m_axi_pos_r_AWID;
output  [7:0] m_axi_pos_r_AWLEN;
output  [2:0] m_axi_pos_r_AWSIZE;
output  [1:0] m_axi_pos_r_AWBURST;
output  [1:0] m_axi_pos_r_AWLOCK;
output  [3:0] m_axi_pos_r_AWCACHE;
output  [2:0] m_axi_pos_r_AWPROT;
output  [3:0] m_axi_pos_r_AWQOS;
output  [3:0] m_axi_pos_r_AWREGION;
output  [C_M_AXI_POS_R_AWUSER_WIDTH - 1:0] m_axi_pos_r_AWUSER;
output   m_axi_pos_r_WVALID;
input   m_axi_pos_r_WREADY;
output  [C_M_AXI_POS_R_DATA_WIDTH - 1:0] m_axi_pos_r_WDATA;
output  [C_M_AXI_POS_R_WSTRB_WIDTH - 1:0] m_axi_pos_r_WSTRB;
output   m_axi_pos_r_WLAST;
output  [C_M_AXI_POS_R_ID_WIDTH - 1:0] m_axi_pos_r_WID;
output  [C_M_AXI_POS_R_WUSER_WIDTH - 1:0] m_axi_pos_r_WUSER;
output   m_axi_pos_r_ARVALID;
input   m_axi_pos_r_ARREADY;
output  [C_M_AXI_POS_R_ADDR_WIDTH - 1:0] m_axi_pos_r_ARADDR;
output  [C_M_AXI_POS_R_ID_WIDTH - 1:0] m_axi_pos_r_ARID;
output  [7:0] m_axi_pos_r_ARLEN;
output  [2:0] m_axi_pos_r_ARSIZE;
output  [1:0] m_axi_pos_r_ARBURST;
output  [1:0] m_axi_pos_r_ARLOCK;
output  [3:0] m_axi_pos_r_ARCACHE;
output  [2:0] m_axi_pos_r_ARPROT;
output  [3:0] m_axi_pos_r_ARQOS;
output  [3:0] m_axi_pos_r_ARREGION;
output  [C_M_AXI_POS_R_ARUSER_WIDTH - 1:0] m_axi_pos_r_ARUSER;
input   m_axi_pos_r_RVALID;
output   m_axi_pos_r_RREADY;
input  [C_M_AXI_POS_R_DATA_WIDTH - 1:0] m_axi_pos_r_RDATA;
input   m_axi_pos_r_RLAST;
input  [C_M_AXI_POS_R_ID_WIDTH - 1:0] m_axi_pos_r_RID;
input  [C_M_AXI_POS_R_RUSER_WIDTH - 1:0] m_axi_pos_r_RUSER;
input  [1:0] m_axi_pos_r_RRESP;
input   m_axi_pos_r_BVALID;
output   m_axi_pos_r_BREADY;
input  [1:0] m_axi_pos_r_BRESP;
input  [C_M_AXI_POS_R_ID_WIDTH - 1:0] m_axi_pos_r_BID;
input  [C_M_AXI_POS_R_BUSER_WIDTH - 1:0] m_axi_pos_r_BUSER;
output   m_axi_debug_AWVALID;
input   m_axi_debug_AWREADY;
output  [C_M_AXI_DEBUG_ADDR_WIDTH - 1:0] m_axi_debug_AWADDR;
output  [C_M_AXI_DEBUG_ID_WIDTH - 1:0] m_axi_debug_AWID;
output  [7:0] m_axi_debug_AWLEN;
output  [2:0] m_axi_debug_AWSIZE;
output  [1:0] m_axi_debug_AWBURST;
output  [1:0] m_axi_debug_AWLOCK;
output  [3:0] m_axi_debug_AWCACHE;
output  [2:0] m_axi_debug_AWPROT;
output  [3:0] m_axi_debug_AWQOS;
output  [3:0] m_axi_debug_AWREGION;
output  [C_M_AXI_DEBUG_AWUSER_WIDTH - 1:0] m_axi_debug_AWUSER;
output   m_axi_debug_WVALID;
input   m_axi_debug_WREADY;
output  [C_M_AXI_DEBUG_DATA_WIDTH - 1:0] m_axi_debug_WDATA;
output  [C_M_AXI_DEBUG_WSTRB_WIDTH - 1:0] m_axi_debug_WSTRB;
output   m_axi_debug_WLAST;
output  [C_M_AXI_DEBUG_ID_WIDTH - 1:0] m_axi_debug_WID;
output  [C_M_AXI_DEBUG_WUSER_WIDTH - 1:0] m_axi_debug_WUSER;
output   m_axi_debug_ARVALID;
input   m_axi_debug_ARREADY;
output  [C_M_AXI_DEBUG_ADDR_WIDTH - 1:0] m_axi_debug_ARADDR;
output  [C_M_AXI_DEBUG_ID_WIDTH - 1:0] m_axi_debug_ARID;
output  [7:0] m_axi_debug_ARLEN;
output  [2:0] m_axi_debug_ARSIZE;
output  [1:0] m_axi_debug_ARBURST;
output  [1:0] m_axi_debug_ARLOCK;
output  [3:0] m_axi_debug_ARCACHE;
output  [2:0] m_axi_debug_ARPROT;
output  [3:0] m_axi_debug_ARQOS;
output  [3:0] m_axi_debug_ARREGION;
output  [C_M_AXI_DEBUG_ARUSER_WIDTH - 1:0] m_axi_debug_ARUSER;
input   m_axi_debug_RVALID;
output   m_axi_debug_RREADY;
input  [C_M_AXI_DEBUG_DATA_WIDTH - 1:0] m_axi_debug_RDATA;
input   m_axi_debug_RLAST;
input  [C_M_AXI_DEBUG_ID_WIDTH - 1:0] m_axi_debug_RID;
input  [C_M_AXI_DEBUG_RUSER_WIDTH - 1:0] m_axi_debug_RUSER;
input  [1:0] m_axi_debug_RRESP;
input   m_axi_debug_BVALID;
output   m_axi_debug_BREADY;
input  [1:0] m_axi_debug_BRESP;
input  [C_M_AXI_DEBUG_ID_WIDTH - 1:0] m_axi_debug_BID;
input  [C_M_AXI_DEBUG_BUSER_WIDTH - 1:0] m_axi_debug_BUSER;
input   s_axi_ctrl_AWVALID;
output   s_axi_ctrl_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_AWADDR;
input   s_axi_ctrl_WVALID;
output   s_axi_ctrl_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_ctrl_WSTRB;
input   s_axi_ctrl_ARVALID;
output   s_axi_ctrl_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_ARADDR;
output   s_axi_ctrl_RVALID;
input   s_axi_ctrl_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_RDATA;
output  [1:0] s_axi_ctrl_RRESP;
output   s_axi_ctrl_BVALID;
input   s_axi_ctrl_BREADY;
output  [1:0] s_axi_ctrl_BRESP;
output   interrupt;
input   s_axi_param_AWVALID;
output   s_axi_param_AWREADY;
input  [C_S_AXI_PARAM_ADDR_WIDTH - 1:0] s_axi_param_AWADDR;
input   s_axi_param_WVALID;
output   s_axi_param_WREADY;
input  [C_S_AXI_PARAM_DATA_WIDTH - 1:0] s_axi_param_WDATA;
input  [C_S_AXI_PARAM_WSTRB_WIDTH - 1:0] s_axi_param_WSTRB;
input   s_axi_param_ARVALID;
output   s_axi_param_ARREADY;
input  [C_S_AXI_PARAM_ADDR_WIDTH - 1:0] s_axi_param_ARADDR;
output   s_axi_param_RVALID;
input   s_axi_param_RREADY;
output  [C_S_AXI_PARAM_DATA_WIDTH - 1:0] s_axi_param_RDATA;
output  [1:0] s_axi_param_RRESP;
output   s_axi_param_BVALID;
input   s_axi_param_BREADY;
output  [1:0] s_axi_param_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [149:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] pyr_data_ptr;
wire   [15:0] img_w;
wire   [15:0] img_h;
wire   [63:0] ref_patch_with_border_ptr;
wire   [63:0] cur_px_estimate_ptr;
wire   [127:0] levels;
reg    converged_ap_vld;
wire   [31:0] n_iter;
wire   [0:0] transfer_pyr;
wire   [63:0] inv_out;
reg   [18:0] pyr_data_address0;
reg    pyr_data_ce0;
reg    pyr_data_we0;
wire   [7:0] pyr_data_q0;
reg   [7:0] ref_patch_with_borde_403;
reg   [7:0] ref_patch_with_borde_404;
reg   [7:0] ref_patch_with_borde_405;
reg   [7:0] ref_patch_with_borde_406;
reg   [7:0] ref_patch_with_borde_407;
reg   [7:0] ref_patch_with_borde_408;
reg   [7:0] ref_patch_with_borde_409;
reg   [7:0] ref_patch_with_borde_410;
reg   [7:0] ref_patch_with_borde_412;
reg   [7:0] ref_patch_with_borde_413;
reg   [7:0] ref_patch_with_borde_414;
reg   [7:0] ref_patch_with_borde_415;
reg   [7:0] ref_patch_with_borde_416;
reg   [7:0] ref_patch_with_borde_417;
reg   [7:0] ref_patch_with_borde_418;
reg   [7:0] ref_patch_with_borde_419;
reg   [7:0] ref_patch_with_borde_420;
reg   [7:0] ref_patch_with_borde_421;
reg   [7:0] ref_patch_with_borde_423;
reg   [7:0] ref_patch_with_borde_424;
reg   [7:0] ref_patch_with_borde_425;
reg   [7:0] ref_patch_with_borde_426;
reg   [7:0] ref_patch_with_borde_427;
reg   [7:0] ref_patch_with_borde_428;
reg   [7:0] ref_patch_with_borde_429;
reg   [7:0] ref_patch_with_borde_430;
reg   [7:0] ref_patch_with_borde_431;
reg   [7:0] ref_patch_with_borde_432;
reg   [7:0] ref_patch_with_borde_434;
reg   [7:0] ref_patch_with_borde_435;
reg   [7:0] ref_patch_with_borde_436;
reg   [7:0] ref_patch_with_borde_437;
reg   [7:0] ref_patch_with_borde_438;
reg   [7:0] ref_patch_with_borde_439;
reg   [7:0] ref_patch_with_borde_440;
reg   [7:0] ref_patch_with_borde_441;
reg   [7:0] ref_patch_with_borde_442;
reg   [7:0] ref_patch_with_borde_443;
reg   [7:0] ref_patch_with_borde_445;
reg   [7:0] ref_patch_with_borde_446;
reg   [7:0] ref_patch_with_borde_447;
reg   [7:0] ref_patch_with_borde_448;
reg   [7:0] ref_patch_with_borde_449;
reg   [7:0] ref_patch_with_borde_450;
reg   [7:0] ref_patch_with_borde_451;
reg   [7:0] ref_patch_with_borde_452;
reg   [7:0] ref_patch_with_borde_453;
reg   [7:0] ref_patch_with_borde_454;
reg   [7:0] ref_patch_with_borde_456;
reg   [7:0] ref_patch_with_borde_457;
reg   [7:0] ref_patch_with_borde_458;
reg   [7:0] ref_patch_with_borde_459;
reg   [7:0] ref_patch_with_borde_460;
reg   [7:0] ref_patch_with_borde_461;
reg   [7:0] ref_patch_with_borde_462;
reg   [7:0] ref_patch_with_borde_463;
reg   [7:0] ref_patch_with_borde_464;
reg   [7:0] ref_patch_with_borde_465;
reg   [7:0] ref_patch_with_borde_467;
reg   [7:0] ref_patch_with_borde_468;
reg   [7:0] ref_patch_with_borde_469;
reg   [7:0] ref_patch_with_borde_470;
reg   [7:0] ref_patch_with_borde_471;
reg   [7:0] ref_patch_with_borde_472;
reg   [7:0] ref_patch_with_borde_473;
reg   [7:0] ref_patch_with_borde_474;
reg   [7:0] ref_patch_with_borde_475;
reg   [7:0] ref_patch_with_borde_476;
reg   [7:0] ref_patch_with_borde_478;
reg   [7:0] ref_patch_with_borde_479;
reg   [7:0] ref_patch_with_borde_480;
reg   [7:0] ref_patch_with_borde_481;
reg   [7:0] ref_patch_with_borde_482;
reg   [7:0] ref_patch_with_borde_483;
reg   [7:0] ref_patch_with_borde_484;
reg   [7:0] ref_patch_with_borde_485;
reg   [7:0] ref_patch_with_borde_486;
reg   [7:0] ref_patch_with_borde_487;
reg   [7:0] ref_patch_with_borde_503;
reg   [7:0] ref_patch_with_borde_504;
reg   [7:0] ref_patch_with_borde_505;
reg   [7:0] ref_patch_with_borde_506;
reg   [7:0] ref_patch_with_borde_507;
reg   [7:0] ref_patch_with_borde_508;
reg   [7:0] ref_patch_with_borde_509;
reg   [7:0] ref_patch_with_borde_510;
reg   [7:0] ref_patch_with_borde_512;
reg   [7:0] ref_patch_with_borde_513;
reg   [7:0] ref_patch_with_borde_514;
reg   [7:0] ref_patch_with_borde_515;
reg   [7:0] ref_patch_with_borde_516;
reg   [7:0] ref_patch_with_borde_517;
reg   [7:0] ref_patch_with_borde_518;
reg   [7:0] ref_patch_with_borde_519;
reg   [7:0] ref_patch_with_borde_520;
reg   [7:0] ref_patch_with_borde_521;
reg   [7:0] ref_patch_with_borde_523;
reg   [7:0] ref_patch_with_borde_524;
reg   [7:0] ref_patch_with_borde_525;
reg   [7:0] ref_patch_with_borde_526;
reg   [7:0] ref_patch_with_borde_527;
reg   [7:0] ref_patch_with_borde_528;
reg   [7:0] ref_patch_with_borde_529;
reg   [7:0] ref_patch_with_borde_530;
reg   [7:0] ref_patch_with_borde_531;
reg   [7:0] ref_patch_with_borde_532;
reg   [7:0] ref_patch_with_borde_534;
reg   [7:0] ref_patch_with_borde_535;
reg   [7:0] ref_patch_with_borde_536;
reg   [7:0] ref_patch_with_borde_537;
reg   [7:0] ref_patch_with_borde_538;
reg   [7:0] ref_patch_with_borde_539;
reg   [7:0] ref_patch_with_borde_540;
reg   [7:0] ref_patch_with_borde_541;
reg   [7:0] ref_patch_with_borde_542;
reg   [7:0] ref_patch_with_borde_543;
reg   [7:0] ref_patch_with_borde_545;
reg   [7:0] ref_patch_with_borde_546;
reg   [7:0] ref_patch_with_borde_547;
reg   [7:0] ref_patch_with_borde_548;
reg   [7:0] ref_patch_with_borde_549;
reg   [7:0] ref_patch_with_borde_550;
reg   [7:0] ref_patch_with_borde_551;
reg   [7:0] ref_patch_with_borde_552;
reg   [7:0] ref_patch_with_borde_553;
reg   [7:0] ref_patch_with_borde_554;
reg   [7:0] ref_patch_with_borde_556;
reg   [7:0] ref_patch_with_borde_557;
reg   [7:0] ref_patch_with_borde_558;
reg   [7:0] ref_patch_with_borde_559;
reg   [7:0] ref_patch_with_borde_560;
reg   [7:0] ref_patch_with_borde_561;
reg   [7:0] ref_patch_with_borde_562;
reg   [7:0] ref_patch_with_borde_563;
reg   [7:0] ref_patch_with_borde_564;
reg   [7:0] ref_patch_with_borde_565;
reg   [7:0] ref_patch_with_borde_567;
reg   [7:0] ref_patch_with_borde_568;
reg   [7:0] ref_patch_with_borde_569;
reg   [7:0] ref_patch_with_borde_570;
reg   [7:0] ref_patch_with_borde_571;
reg   [7:0] ref_patch_with_borde_572;
reg   [7:0] ref_patch_with_borde_573;
reg   [7:0] ref_patch_with_borde_574;
reg   [7:0] ref_patch_with_borde_575;
reg   [7:0] ref_patch_with_borde_576;
reg   [7:0] ref_patch_with_borde_578;
reg   [7:0] ref_patch_with_borde_579;
reg   [7:0] ref_patch_with_borde_580;
reg   [7:0] ref_patch_with_borde_581;
reg   [7:0] ref_patch_with_borde_582;
reg   [7:0] ref_patch_with_borde_583;
reg   [7:0] ref_patch_with_borde_584;
reg   [7:0] ref_patch_with_borde_585;
reg   [7:0] ref_patch_with_borde_586;
reg   [7:0] ref_patch_with_borde_587;
reg   [7:0] ref_patch_with_borde_603;
reg   [7:0] ref_patch_with_borde_604;
reg   [7:0] ref_patch_with_borde_605;
reg   [7:0] ref_patch_with_borde_606;
reg   [7:0] ref_patch_with_borde_607;
reg   [7:0] ref_patch_with_borde_608;
reg   [7:0] ref_patch_with_borde_609;
reg   [7:0] ref_patch_with_borde_610;
reg   [7:0] ref_patch_with_borde_612;
reg   [7:0] ref_patch_with_borde_613;
reg   [7:0] ref_patch_with_borde_614;
reg   [7:0] ref_patch_with_borde_615;
reg   [7:0] ref_patch_with_borde_616;
reg   [7:0] ref_patch_with_borde_617;
reg   [7:0] ref_patch_with_borde_618;
reg   [7:0] ref_patch_with_borde_619;
reg   [7:0] ref_patch_with_borde_620;
reg   [7:0] ref_patch_with_borde_621;
reg   [7:0] ref_patch_with_borde_623;
reg   [7:0] ref_patch_with_borde_624;
reg   [7:0] ref_patch_with_borde_625;
reg   [7:0] ref_patch_with_borde_626;
reg   [7:0] ref_patch_with_borde_627;
reg   [7:0] ref_patch_with_borde_628;
reg   [7:0] ref_patch_with_borde_629;
reg   [7:0] ref_patch_with_borde_630;
reg   [7:0] ref_patch_with_borde_631;
reg   [7:0] ref_patch_with_borde_632;
reg   [7:0] ref_patch_with_borde_634;
reg   [7:0] ref_patch_with_borde_635;
reg   [7:0] ref_patch_with_borde_636;
reg   [7:0] ref_patch_with_borde_637;
reg   [7:0] ref_patch_with_borde_638;
reg   [7:0] ref_patch_with_borde_639;
reg   [7:0] ref_patch_with_borde_640;
reg   [7:0] ref_patch_with_borde_641;
reg   [7:0] ref_patch_with_borde_642;
reg   [7:0] ref_patch_with_borde_643;
reg   [7:0] ref_patch_with_borde_645;
reg   [7:0] ref_patch_with_borde_646;
reg   [7:0] ref_patch_with_borde_647;
reg   [7:0] ref_patch_with_borde_648;
reg   [7:0] ref_patch_with_borde_649;
reg   [7:0] ref_patch_with_borde_650;
reg   [7:0] ref_patch_with_borde_651;
reg   [7:0] ref_patch_with_borde_652;
reg   [7:0] ref_patch_with_borde_653;
reg   [7:0] ref_patch_with_borde_654;
reg   [7:0] ref_patch_with_borde_656;
reg   [7:0] ref_patch_with_borde_657;
reg   [7:0] ref_patch_with_borde_658;
reg   [7:0] ref_patch_with_borde_659;
reg   [7:0] ref_patch_with_borde_660;
reg   [7:0] ref_patch_with_borde_661;
reg   [7:0] ref_patch_with_borde_662;
reg   [7:0] ref_patch_with_borde_663;
reg   [7:0] ref_patch_with_borde_664;
reg   [7:0] ref_patch_with_borde_665;
reg   [7:0] ref_patch_with_borde_667;
reg   [7:0] ref_patch_with_borde_668;
reg   [7:0] ref_patch_with_borde_669;
reg   [7:0] ref_patch_with_borde_670;
reg   [7:0] ref_patch_with_borde_671;
reg   [7:0] ref_patch_with_borde_672;
reg   [7:0] ref_patch_with_borde_673;
reg   [7:0] ref_patch_with_borde_674;
reg   [7:0] ref_patch_with_borde_675;
reg   [7:0] ref_patch_with_borde_676;
reg   [7:0] ref_patch_with_borde_678;
reg   [7:0] ref_patch_with_borde_679;
reg   [7:0] ref_patch_with_borde_680;
reg   [7:0] ref_patch_with_borde_681;
reg   [7:0] ref_patch_with_borde_682;
reg   [7:0] ref_patch_with_borde_683;
reg   [7:0] ref_patch_with_borde_684;
reg   [7:0] ref_patch_with_borde_685;
reg   [7:0] ref_patch_with_borde_686;
reg   [7:0] ref_patch_with_borde_687;
reg   [7:0] ref_patch_with_borde_95;
reg   [7:0] ref_patch_with_borde_94;
reg   [7:0] ref_patch_with_borde_93;
reg   [7:0] ref_patch_with_borde_92;
reg   [7:0] ref_patch_with_borde_91;
reg   [7:0] ref_patch_with_borde_90;
reg   [7:0] ref_patch_with_borde_89;
reg   [7:0] ref_patch_with_borde_88;
reg   [7:0] ref_patch_with_borde_86;
reg   [7:0] ref_patch_with_borde_85;
reg   [7:0] ref_patch_with_borde_84;
reg   [7:0] ref_patch_with_borde_83;
reg   [7:0] ref_patch_with_borde_82;
reg   [7:0] ref_patch_with_borde_81;
reg   [7:0] ref_patch_with_borde_80;
reg   [7:0] ref_patch_with_borde_79;
reg   [7:0] ref_patch_with_borde_78;
reg   [7:0] ref_patch_with_borde_77;
reg   [7:0] ref_patch_with_borde_75;
reg   [7:0] ref_patch_with_borde_74;
reg   [7:0] ref_patch_with_borde_73;
reg   [7:0] ref_patch_with_borde_72;
reg   [7:0] ref_patch_with_borde_71;
reg   [7:0] ref_patch_with_borde_70;
reg   [7:0] ref_patch_with_borde_69;
reg   [7:0] ref_patch_with_borde_68;
reg   [7:0] ref_patch_with_borde_67;
reg   [7:0] ref_patch_with_borde_66;
reg   [7:0] ref_patch_with_borde_64;
reg   [7:0] ref_patch_with_borde_63;
reg   [7:0] ref_patch_with_borde_62;
reg   [7:0] ref_patch_with_borde_61;
reg   [7:0] ref_patch_with_borde_60;
reg   [7:0] ref_patch_with_borde_59;
reg   [7:0] ref_patch_with_borde_58;
reg   [7:0] ref_patch_with_borde_57;
reg   [7:0] ref_patch_with_borde_56;
reg   [7:0] ref_patch_with_borde_55;
reg   [7:0] ref_patch_with_borde_53;
reg   [7:0] ref_patch_with_borde_52;
reg   [7:0] ref_patch_with_borde_51;
reg   [7:0] ref_patch_with_borde_50;
reg   [7:0] ref_patch_with_borde_49;
reg   [7:0] ref_patch_with_borde_48;
reg   [7:0] ref_patch_with_borde_47;
reg   [7:0] ref_patch_with_borde_46;
reg   [7:0] ref_patch_with_borde_45;
reg   [7:0] ref_patch_with_borde_44;
reg   [7:0] ref_patch_with_borde_42;
reg   [7:0] ref_patch_with_borde_41;
reg   [7:0] ref_patch_with_borde_40;
reg   [7:0] ref_patch_with_borde_39;
reg   [7:0] ref_patch_with_borde_38;
reg   [7:0] ref_patch_with_borde_37;
reg   [7:0] ref_patch_with_borde_36;
reg   [7:0] ref_patch_with_borde_35;
reg   [7:0] ref_patch_with_borde_34;
reg   [7:0] ref_patch_with_borde_33;
reg   [7:0] ref_patch_with_borde_31;
reg   [7:0] ref_patch_with_borde_30;
reg   [7:0] ref_patch_with_borde_29;
reg   [7:0] ref_patch_with_borde_28;
reg   [7:0] ref_patch_with_borde_27;
reg   [7:0] ref_patch_with_borde_26;
reg   [7:0] ref_patch_with_borde_25;
reg   [7:0] ref_patch_with_borde_24;
reg   [7:0] ref_patch_with_borde_23;
reg   [7:0] ref_patch_with_borde_22;
reg   [7:0] ref_patch_with_borde_20;
reg   [7:0] ref_patch_with_borde_19;
reg   [7:0] ref_patch_with_borde_18;
reg   [7:0] ref_patch_with_borde_17;
reg   [7:0] ref_patch_with_borde_16;
reg   [7:0] ref_patch_with_borde_15;
reg   [7:0] ref_patch_with_borde_14;
reg   [7:0] ref_patch_with_borde_13;
reg   [7:0] ref_patch_with_borde_12;
reg   [7:0] ref_patch_with_borde_11;
reg   [7:0] ref_patch_with_borde_401;
reg   [7:0] ref_patch_with_borde_402;
reg   [7:0] ref_patch_with_borde_501;
reg   [7:0] ref_patch_with_borde_502;
reg   [7:0] ref_patch_with_borde_601;
reg   [7:0] ref_patch_with_borde_602;
reg   [7:0] ref_patch_with_borde_97;
reg   [7:0] ref_patch_with_borde_96;
reg   [7:0] ref_patch_with_borde_489;
reg   [7:0] ref_patch_with_borde_490;
reg   [7:0] ref_patch_with_borde_491;
reg   [7:0] ref_patch_with_borde_492;
reg   [7:0] ref_patch_with_borde_493;
reg   [7:0] ref_patch_with_borde_494;
reg   [7:0] ref_patch_with_borde_495;
reg   [7:0] ref_patch_with_borde_496;
reg   [7:0] ref_patch_with_borde_497;
reg   [7:0] ref_patch_with_borde_589;
reg   [7:0] ref_patch_with_borde_590;
reg   [7:0] ref_patch_with_borde_591;
reg   [7:0] ref_patch_with_borde_592;
reg   [7:0] ref_patch_with_borde_593;
reg   [7:0] ref_patch_with_borde_594;
reg   [7:0] ref_patch_with_borde_595;
reg   [7:0] ref_patch_with_borde_596;
reg   [7:0] ref_patch_with_borde_597;
reg   [7:0] ref_patch_with_borde_689;
reg   [7:0] ref_patch_with_borde_690;
reg   [7:0] ref_patch_with_borde_691;
reg   [7:0] ref_patch_with_borde_692;
reg   [7:0] ref_patch_with_borde_693;
reg   [7:0] ref_patch_with_borde_694;
reg   [7:0] ref_patch_with_borde_695;
reg   [7:0] ref_patch_with_borde_696;
reg   [7:0] ref_patch_with_borde_697;
reg   [7:0] ref_patch_with_borde_9;
reg   [7:0] ref_patch_with_borde_8;
reg   [7:0] ref_patch_with_borde_7;
reg   [7:0] ref_patch_with_borde_6;
reg   [7:0] ref_patch_with_borde_5;
reg   [7:0] ref_patch_with_borde_4;
reg   [7:0] ref_patch_with_borde_3;
reg   [7:0] ref_patch_with_borde_2;
reg   [7:0] ref_patch_with_borde_1;
reg   [7:0] ref_patch_with_borde_399;
reg   [7:0] ref_patch_with_borde_400;
reg   [7:0] ref_patch_with_borde_411;
reg   [7:0] ref_patch_with_borde_422;
reg   [7:0] ref_patch_with_borde_433;
reg   [7:0] ref_patch_with_borde_444;
reg   [7:0] ref_patch_with_borde_455;
reg   [7:0] ref_patch_with_borde_466;
reg   [7:0] ref_patch_with_borde_477;
reg   [7:0] ref_patch_with_borde_488;
reg   [7:0] ref_patch_with_borde_498;
reg   [7:0] ref_patch_with_borde_499;
reg   [7:0] ref_patch_with_borde_500;
reg   [7:0] ref_patch_with_borde_511;
reg   [7:0] ref_patch_with_borde_522;
reg   [7:0] ref_patch_with_borde_533;
reg   [7:0] ref_patch_with_borde_544;
reg   [7:0] ref_patch_with_borde_555;
reg   [7:0] ref_patch_with_borde_566;
reg   [7:0] ref_patch_with_borde_577;
reg   [7:0] ref_patch_with_borde_588;
reg   [7:0] ref_patch_with_borde_598;
reg   [7:0] ref_patch_with_borde_599;
reg   [7:0] ref_patch_with_borde_600;
reg   [7:0] ref_patch_with_borde_611;
reg   [7:0] ref_patch_with_borde_622;
reg   [7:0] ref_patch_with_borde_633;
reg   [7:0] ref_patch_with_borde_644;
reg   [7:0] ref_patch_with_borde_655;
reg   [7:0] ref_patch_with_borde_666;
reg   [7:0] ref_patch_with_borde_677;
reg   [7:0] ref_patch_with_borde_688;
reg   [7:0] ref_patch_with_borde_698;
reg   [7:0] ref_patch_with_borde_99;
reg   [7:0] ref_patch_with_borde_98;
reg   [7:0] ref_patch_with_borde_87;
reg   [7:0] ref_patch_with_borde_76;
reg   [7:0] ref_patch_with_borde_65;
reg   [7:0] ref_patch_with_borde_54;
reg   [7:0] ref_patch_with_borde_43;
reg   [7:0] ref_patch_with_borde_32;
reg   [7:0] ref_patch_with_borde_21;
reg   [7:0] ref_patch_with_borde_10;
reg   [7:0] ref_patch_with_borde;
reg   [31:0] cur_px_estimate_3_1;
reg   [31:0] cur_px_estimate_0_0;
reg   [31:0] cur_px_estimate_0_1;
reg   [31:0] cur_px_estimate_1_0;
reg   [31:0] cur_px_estimate_1_1;
reg   [31:0] cur_px_estimate_2_0;
reg   [31:0] cur_px_estimate_2_1;
reg   [31:0] cur_px_estimate_3_0;
reg    pyr_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    pyr_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond3_reg_10096;
reg    patches_blk_n_AR;
wire    ap_CS_fsm_state12;
reg    patches_blk_n_R;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond1_reg_10110;
reg    pos_r_blk_n_AR;
wire    ap_CS_fsm_state21;
reg    pos_r_blk_n_R;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg    pos_r_blk_n_AW;
wire    ap_CS_fsm_state153;
reg    pos_r_blk_n_W;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] exitcond5_reg_10556;
reg    pos_r_blk_n_B;
wire    ap_CS_fsm_state164;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state145;
wire    ap_CS_fsm_state150;
reg    debug_blk_n_AW;
wire    ap_CS_fsm_state31;
wire   [0:0] exitcond_fu_4427_p2;
reg    debug_blk_n_B;
wire    ap_CS_fsm_state157;
reg    debug_blk_n_W;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] exitcond4_reg_10542;
wire    pyr_AWREADY;
wire    pyr_WREADY;
reg    pyr_ARVALID;
wire    pyr_ARREADY;
wire    pyr_RVALID;
reg    pyr_RREADY;
wire   [7:0] pyr_RDATA;
wire    pyr_RLAST;
wire   [0:0] pyr_RID;
wire   [0:0] pyr_RUSER;
wire   [1:0] pyr_RRESP;
wire    pyr_BVALID;
wire   [1:0] pyr_BRESP;
wire   [0:0] pyr_BID;
wire   [0:0] pyr_BUSER;
wire    patches_AWREADY;
wire    patches_WREADY;
reg    patches_ARVALID;
wire    patches_ARREADY;
wire    patches_RVALID;
reg    patches_RREADY;
wire   [7:0] patches_RDATA;
wire    patches_RLAST;
wire   [0:0] patches_RID;
wire   [0:0] patches_RUSER;
wire   [1:0] patches_RRESP;
wire    patches_BVALID;
wire   [1:0] patches_BRESP;
wire   [0:0] patches_BID;
wire   [0:0] patches_BUSER;
reg    pos_r_AWVALID;
wire    pos_r_AWREADY;
reg   [63:0] pos_r_AWADDR;
reg   [31:0] pos_r_AWLEN;
reg    pos_r_WVALID;
wire    pos_r_WREADY;
reg   [31:0] pos_r_WDATA;
reg    pos_r_ARVALID;
wire    pos_r_ARREADY;
wire    pos_r_RVALID;
reg    pos_r_RREADY;
wire   [31:0] pos_r_RDATA;
wire    pos_r_RLAST;
wire   [0:0] pos_r_RID;
wire   [0:0] pos_r_RUSER;
wire   [1:0] pos_r_RRESP;
wire    pos_r_BVALID;
reg    pos_r_BREADY;
wire   [1:0] pos_r_BRESP;
wire   [0:0] pos_r_BID;
wire   [0:0] pos_r_BUSER;
reg    debug_AWVALID;
wire    debug_AWREADY;
reg    debug_WVALID;
wire    debug_WREADY;
wire    debug_ARREADY;
wire    debug_RVALID;
wire   [31:0] debug_RDATA;
wire    debug_RLAST;
wire   [0:0] debug_RID;
wire   [0:0] debug_RUSER;
wire   [1:0] debug_RRESP;
wire    debug_BVALID;
reg    debug_BREADY;
wire   [1:0] debug_BRESP;
wire   [0:0] debug_BID;
wire   [0:0] debug_BUSER;
reg   [18:0] indvar_reg_1547;
reg   [18:0] indvar_reg_1547_pp0_iter1_reg;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [8:0] indvar1_reg_1559;
reg   [18:0] phi_mul_reg_1570;
reg   [8:0] phi_urem_reg_1581;
reg   [3:0] indvar3_reg_1592;
reg   [31:0] tmp_2_reg_1615;
reg   [31:0] tmp_s_reg_1627;
reg   [31:0] tmp_4_reg_1639;
reg   [31:0] tmp_5_reg_1651;
reg   [31:0] tmp_10_reg_1663;
reg   [6:0] i_0_i_reg_1675;
reg   [5:0] indvar6_reg_1686;
reg   [3:0] indvar8_reg_1697;
wire   [31:0] grp_fu_1752_p1;
reg   [31:0] reg_1755;
wire    ap_CS_fsm_pp3_stage3;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state35_pp3_stage3_iter0;
wire    ap_block_state39_pp3_stage3_iter1;
wire    ap_block_state43_pp3_stage3_iter2;
wire    ap_block_pp3_stage3_11001;
reg   [0:0] exitcond_i_reg_10396;
wire    ap_CS_fsm_state140;
wire   [31:0] grp_fu_1721_p2;
reg   [31:0] reg_1763;
wire    ap_CS_fsm_pp3_stage1;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state33_pp3_stage1_iter0;
wire    ap_block_state37_pp3_stage1_iter1;
wire    ap_block_state41_pp3_stage1_iter2;
wire    ap_block_pp3_stage1_11001;
reg   [0:0] exitcond_i_reg_10396_pp3_iter1_reg;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state102;
reg   [31:0] reg_1771;
wire    ap_CS_fsm_pp3_stage2;
wire    ap_block_state34_pp3_stage2_iter0;
wire    ap_block_state38_pp3_stage2_iter1;
wire    ap_block_state42_pp3_stage2_iter2;
wire    ap_block_pp3_stage2_11001;
wire    ap_CS_fsm_state47;
reg   [31:0] reg_1777;
wire    ap_CS_fsm_state49;
wire   [31:0] grp_fu_1727_p2;
reg   [31:0] reg_1783;
reg   [31:0] reg_1793;
wire    ap_CS_fsm_state65;
wire   [31:0] grp_fu_1733_p2;
reg   [31:0] reg_1801;
reg   [31:0] reg_1807;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state61;
wire   [31:0] grp_fu_1708_p2;
reg   [31:0] reg_1812;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state144;
reg   [31:0] reg_1819;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state106;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state128;
wire   [31:0] grp_fu_1748_p2;
reg   [31:0] reg_1824;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state101;
wire   [0:0] transfer_pyr_read_read_fu_1416_p2;
reg   [63:0] debug_addr_reg_10066;
wire   [62:0] tmp_6_cast_fu_1862_p1;
reg   [62:0] tmp_6_cast_reg_10072;
reg   [63:0] pos_addr_reg_10077;
reg   [63:0] patches_addr_reg_10084;
reg   [63:0] pyr_addr_reg_10090;
wire   [0:0] exitcond3_fu_1884_p2;
reg   [0:0] exitcond3_reg_10096_pp0_iter1_reg;
wire   [18:0] indvar_next_fu_1890_p2;
reg   [18:0] indvar_next_reg_10100;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] pyr_addr_read_reg_10105;
wire   [0:0] exitcond1_fu_1901_p2;
wire    ap_block_state19_pp1_stage0_iter0;
reg    ap_block_state20_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [8:0] indvar_next1_fu_1907_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [18:0] next_mul_fu_1913_p2;
reg   [1:0] div_t_reg_10124;
wire   [6:0] tmp_fu_1929_p1;
reg   [6:0] tmp_reg_10128;
wire   [8:0] idx_urem_fu_1945_p3;
wire   [0:0] exitcond2_fu_4353_p2;
wire    ap_block_state28_pp2_stage0_iter0;
reg    ap_block_state29_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [3:0] indvar_next2_fu_4359_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [1:0] p_t2_reg_10146;
wire   [0:0] tmp_61_fu_4375_p1;
reg   [0:0] tmp_61_reg_10150;
reg    ap_sig_ioackin_debug_AWREADY;
reg    ap_block_state31_io;
wire   [2:0] k_1_fu_4433_p2;
reg   [2:0] k_1_reg_10374;
wire   [63:0] tmp_7_fu_4439_p1;
reg   [63:0] tmp_7_reg_10379;
wire   [1:0] tmp_80_fu_4443_p1;
reg   [1:0] tmp_80_reg_10384;
wire   [8:0] tmp_9_fu_4451_p2;
reg   [8:0] tmp_9_reg_10388;
wire   [0:0] exitcond_i_fu_4457_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state32_pp3_stage0_iter0;
wire    ap_block_state36_pp3_stage0_iter1;
wire    ap_block_state40_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] exitcond_i_reg_10396_pp3_iter2_reg;
wire   [6:0] i_fu_4463_p2;
reg   [6:0] i_reg_10400;
wire   [8:0] tmp_56_fu_7471_p2;
reg   [8:0] tmp_56_reg_10405;
wire   [8:0] tmp_69_fu_9463_p2;
reg   [8:0] tmp_69_reg_10410;
wire  signed [31:0] tmp_84_fu_9469_p1;
wire  signed [31:0] tmp_85_fu_9473_p1;
reg   [31:0] tmp_70_reg_10425;
reg   [31:0] tmp_75_reg_10432;
reg   [31:0] tmp_78_reg_10437;
reg    ap_enable_reg_pp3_iter2;
reg   [31:0] tmp_72_reg_10442;
reg   [31:0] tmp_74_reg_10447;
wire   [31:0] grp_fu_1716_p2;
reg   [31:0] tmp_16_reg_10457;
reg   [31:0] tmp_21_reg_10466;
wire   [31:0] grp_fu_1742_p2;
reg   [31:0] tmp_22_reg_10472;
reg   [31:0] tmp_17_reg_10477;
wire    ap_CS_fsm_state51;
reg   [31:0] tmp_24_reg_10483;
wire    ap_CS_fsm_state55;
reg   [31:0] tmp_27_reg_10489;
wire    ap_CS_fsm_state59;
reg   [31:0] tmp_30_reg_10495;
wire    ap_CS_fsm_state63;
reg   [31:0] tmp_34_reg_10501;
reg   [31:0] H_inv_0_0_reg_10506;
wire    ap_CS_fsm_state77;
wire   [31:0] tmp_44_fu_9507_p1;
wire    ap_CS_fsm_state83;
wire   [31:0] tmp_53_fu_9602_p1;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state136;
reg   [63:0] pos_addr_1_reg_10526;
reg   [7:0] pyr_data_load_reg_10532;
reg    ap_sig_ioackin_pos_r_AWREADY;
wire   [31:0] tmp_57_fu_9714_p1;
wire    ap_CS_fsm_state138;
wire   [0:0] exitcond4_fu_9718_p2;
wire    ap_block_state151_pp4_stage0_iter0;
wire    ap_block_state152_pp4_stage0_iter1;
reg    ap_sig_ioackin_debug_WREADY;
reg    ap_block_state152_io;
reg    ap_block_pp4_stage0_11001;
wire   [5:0] indvar_next3_fu_9724_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [31:0] tmp_11_fu_9838_p38;
reg   [31:0] tmp_11_reg_10551;
wire   [0:0] exitcond5_fu_9916_p2;
wire    ap_block_state158_pp5_stage0_iter0;
wire    ap_block_state159_pp5_stage0_iter1;
reg    ap_sig_ioackin_pos_r_WREADY;
reg    ap_block_state159_io;
reg    ap_block_pp5_stage0_11001;
wire   [3:0] indvar_next4_fu_9922_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [31:0] UnifiedRetVal_i_fu_10054_p3;
reg   [31:0] UnifiedRetVal_i_reg_10565;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state18;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state19;
wire    ap_CS_fsm_state27;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state28;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state32;
wire    ap_block_pp3_stage3_subdone;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state151;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state158;
reg   [18:0] ap_phi_mux_indvar_phi_fu_1551_p4;
reg   [2:0] k_reg_1603;
wire    ap_CS_fsm_state30;
reg   [31:0] ap_phi_mux_tmp_2_phi_fu_1619_p4;
wire    ap_block_pp3_stage1;
reg   [31:0] ap_phi_mux_tmp_4_phi_fu_1643_p4;
wire    ap_block_pp3_stage0;
reg   [31:0] ap_phi_mux_tmp_5_phi_fu_1655_p4;
wire    ap_block_pp3_stage3;
reg   [31:0] ap_phi_mux_tmp_10_phi_fu_1667_p4;
wire    ap_block_pp3_stage2;
reg   [6:0] ap_phi_mux_i_0_i_phi_fu_1679_p4;
wire   [63:0] indvar4_fu_1896_p1;
wire   [63:0] tmp_1_fu_1838_p1;
wire   [63:0] tmp_6_fu_1858_p1;
wire   [63:0] cur_px_estimate_ptr6_fu_9704_p1;
reg    ap_reg_ioackin_pyr_ARREADY;
reg    ap_sig_ioackin_pyr_ARREADY;
reg    ap_reg_ioackin_patches_ARREADY;
reg    ap_sig_ioackin_patches_ARREADY;
reg    ap_reg_ioackin_pos_r_ARREADY;
reg    ap_sig_ioackin_pos_r_ARREADY;
reg    ap_reg_ioackin_pos_r_AWREADY;
reg    ap_reg_ioackin_debug_AWREADY;
reg    ap_reg_ioackin_pos_r_WREADY;
reg    ap_reg_ioackin_debug_WREADY;
wire    ap_block_pp4_stage0_01001;
wire    ap_block_pp5_stage0_01001;
reg   [31:0] H_inv_3_0_fu_1266;
reg   [31:0] H_inv_3_3_fu_1270;
reg   [31:0] H_inv_3_6_fu_1274;
reg   [31:0] H_inv_3_3_1_fu_1278;
reg   [31:0] H_inv_3_4_fu_1282;
wire    ap_CS_fsm_state114;
reg   [31:0] H_inv_3_7_fu_1286;
wire    ap_CS_fsm_state125;
reg   [31:0] H_inv_3_6_1_fu_1290;
reg   [31:0] H_inv_3_7_1_fu_1294;
reg   [31:0] H_inv_3_8_fu_1298;
reg   [31:0] H_inv_3_0_1_fu_1302;
reg   [31:0] H_inv_3_3_2_fu_1306;
reg   [31:0] H_inv_3_6_2_fu_1310;
reg   [31:0] H_inv_3_3_3_fu_1314;
reg   [31:0] H_inv_3_4_1_fu_1318;
reg   [31:0] H_inv_3_7_2_fu_1322;
reg   [31:0] H_inv_3_6_3_fu_1326;
reg   [31:0] H_inv_3_7_3_fu_1330;
reg   [31:0] H_inv_3_8_1_fu_1334;
reg   [31:0] H_inv_3_0_2_fu_1338;
reg   [31:0] H_inv_3_3_4_fu_1342;
reg   [31:0] H_inv_3_6_4_fu_1346;
reg   [31:0] H_inv_3_3_5_fu_1350;
reg   [31:0] H_inv_3_4_2_fu_1354;
reg   [31:0] H_inv_3_7_4_fu_1358;
reg   [31:0] H_inv_3_6_5_fu_1362;
reg   [31:0] H_inv_3_7_5_fu_1366;
reg   [31:0] H_inv_3_8_2_fu_1370;
reg   [31:0] H_inv_3_0_3_fu_1374;
reg   [31:0] H_inv_3_3_6_fu_1378;
reg   [31:0] H_inv_3_6_6_fu_1382;
reg   [31:0] H_inv_3_3_7_fu_1386;
reg   [31:0] H_inv_3_4_3_fu_1390;
reg   [31:0] H_inv_3_7_6_fu_1394;
reg   [31:0] H_inv_3_6_7_fu_1398;
reg   [31:0] H_inv_3_7_7_fu_1402;
reg   [31:0] H_inv_3_8_3_fu_1406;
reg   [31:0] grp_fu_1708_p0;
reg   [31:0] grp_fu_1708_p1;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state141;
reg   [31:0] grp_fu_1716_p0;
reg   [31:0] grp_fu_1716_p1;
reg   [31:0] grp_fu_1721_p0;
reg   [31:0] grp_fu_1721_p1;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state64;
reg   [31:0] grp_fu_1727_p0;
reg   [31:0] grp_fu_1727_p1;
reg   [31:0] grp_fu_1733_p0;
reg   [31:0] grp_fu_1733_p1;
reg   [31:0] grp_fu_1748_p0;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state129;
reg  signed [31:0] grp_fu_1752_p0;
wire   [61:0] inv_out7_fu_1828_p4;
wire   [61:0] cur_px_estimate_ptr5_fu_1848_p4;
wire   [8:0] next_urem_fu_1933_p2;
wire   [0:0] tmp_82_fu_1939_p2;
wire   [1:0] tmp_9_fu_4451_p1;
wire   [2:0] tmp_79_fu_4473_p4;
wire   [3:0] tmp_36_fu_4483_p3;
wire   [5:0] tmp_37_fu_4495_p3;
wire   [6:0] tmp_51_cast_fu_4503_p1;
wire   [6:0] tmp_47_cast_fu_4491_p1;
wire   [2:0] tmp_83_fu_4469_p1;
wire   [4:0] tmp_60_cast_fu_4517_p1;
wire   [4:0] tmp13_fu_4521_p2;
wire   [6:0] tmp_38_fu_4507_p2;
wire   [6:0] tmp37_cast_fu_4527_p1;
wire   [6:0] tmp_62_t_fu_4531_p2;
wire   [8:0] tmp_39_fu_4537_p1;
wire   [8:0] tmp_45_fu_5794_p401;
wire   [7:0] tmp_45_fu_5794_p402;
wire   [4:0] tmp38_fu_6604_p2;
wire   [6:0] tmp38_cast_fu_6610_p1;
wire   [6:0] tmp_66_t_fu_6614_p2;
wire   [8:0] tmp_47_fu_6620_p1;
wire   [8:0] tmp_54_fu_6661_p401;
wire   [7:0] tmp_54_fu_6661_p402;
wire   [8:0] tmp_40_cast_fu_6600_p1;
wire   [8:0] tmp_64_cast_fu_7467_p1;
wire   [4:0] tmp39_fu_7477_p2;
wire   [6:0] tmp39_cast_fu_7483_p1;
wire   [6:0] tmp_73_t_fu_7487_p2;
wire   [8:0] tmp_62_fu_7493_p1;
wire   [8:0] tmp_64_fu_7646_p401;
wire   [7:0] tmp_64_fu_7646_p402;
wire   [6:0] tmp_60_cast1_fu_4513_p1;
wire   [6:0] tmp_65_fu_8456_p2;
wire   [6:0] tmp_77_t_fu_8462_p2;
wire   [8:0] tmp_66_fu_8468_p1;
wire   [8:0] tmp_68_fu_8653_p401;
wire   [7:0] tmp_68_fu_8653_p402;
wire   [8:0] tmp_70_cast_fu_8452_p1;
wire   [8:0] tmp_75_cast_fu_9459_p1;
wire   [31:0] tmp_44_to_int_fu_9497_p1;
wire   [31:0] tmp_44_neg_fu_9501_p2;
wire   [31:0] tmp_53_to_int_fu_9592_p1;
wire   [31:0] tmp_53_neg_fu_9596_p2;
wire   [3:0] tmp_81_fu_9687_p3;
wire   [62:0] tmp_82_cast_fu_9695_p1;
wire   [62:0] cur_px_estimate_ptr6_1_fu_9699_p2;
wire   [2:0] tmp_86_fu_9928_p1;
wire   [0:0] sel_tmp_i_fu_9964_p2;
wire   [0:0] sel_tmp2_i_fu_9978_p2;
wire   [31:0] sel_tmp1_i_fu_9970_p3;
wire   [0:0] sel_tmp4_i_fu_9992_p2;
wire   [31:0] sel_tmp3_i_fu_9984_p3;
wire   [0:0] sel_tmp6_i_fu_10006_p2;
wire   [31:0] sel_tmp5_i_fu_9998_p3;
wire   [0:0] sel_tmp8_i_fu_10020_p2;
wire   [31:0] sel_tmp7_i_fu_10012_p3;
wire   [0:0] sel_tmp10_i_fu_10034_p2;
wire   [31:0] sel_tmp9_i_fu_10026_p3;
wire   [0:0] sel_tmp12_i_fu_10048_p2;
wire   [31:0] sel_tmp11_i_fu_10040_p3;
reg   [1:0] grp_fu_1708_opcode;
wire    ap_block_pp3_stage0_00001;
wire    ap_block_pp3_stage1_00001;
wire    ap_block_pp3_stage2_00001;
wire    ap_block_pp3_stage3_00001;
reg   [1:0] grp_fu_1716_opcode;
reg   [149:0] ap_NS_fsm;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp3_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
wire   [8:0] tmp_9_fu_4451_p10;
reg    ap_condition_7169;
reg    ap_condition_2015;

// power-on initialization
initial begin
#0 ap_CS_fsm = 150'd1;
#0 ref_patch_with_borde_403 = 8'd0;
#0 ref_patch_with_borde_404 = 8'd0;
#0 ref_patch_with_borde_405 = 8'd0;
#0 ref_patch_with_borde_406 = 8'd0;
#0 ref_patch_with_borde_407 = 8'd0;
#0 ref_patch_with_borde_408 = 8'd0;
#0 ref_patch_with_borde_409 = 8'd0;
#0 ref_patch_with_borde_410 = 8'd0;
#0 ref_patch_with_borde_412 = 8'd0;
#0 ref_patch_with_borde_413 = 8'd0;
#0 ref_patch_with_borde_414 = 8'd0;
#0 ref_patch_with_borde_415 = 8'd0;
#0 ref_patch_with_borde_416 = 8'd0;
#0 ref_patch_with_borde_417 = 8'd0;
#0 ref_patch_with_borde_418 = 8'd0;
#0 ref_patch_with_borde_419 = 8'd0;
#0 ref_patch_with_borde_420 = 8'd0;
#0 ref_patch_with_borde_421 = 8'd0;
#0 ref_patch_with_borde_423 = 8'd0;
#0 ref_patch_with_borde_424 = 8'd0;
#0 ref_patch_with_borde_425 = 8'd0;
#0 ref_patch_with_borde_426 = 8'd0;
#0 ref_patch_with_borde_427 = 8'd0;
#0 ref_patch_with_borde_428 = 8'd0;
#0 ref_patch_with_borde_429 = 8'd0;
#0 ref_patch_with_borde_430 = 8'd0;
#0 ref_patch_with_borde_431 = 8'd0;
#0 ref_patch_with_borde_432 = 8'd0;
#0 ref_patch_with_borde_434 = 8'd0;
#0 ref_patch_with_borde_435 = 8'd0;
#0 ref_patch_with_borde_436 = 8'd0;
#0 ref_patch_with_borde_437 = 8'd0;
#0 ref_patch_with_borde_438 = 8'd0;
#0 ref_patch_with_borde_439 = 8'd0;
#0 ref_patch_with_borde_440 = 8'd0;
#0 ref_patch_with_borde_441 = 8'd0;
#0 ref_patch_with_borde_442 = 8'd0;
#0 ref_patch_with_borde_443 = 8'd0;
#0 ref_patch_with_borde_445 = 8'd0;
#0 ref_patch_with_borde_446 = 8'd0;
#0 ref_patch_with_borde_447 = 8'd0;
#0 ref_patch_with_borde_448 = 8'd0;
#0 ref_patch_with_borde_449 = 8'd0;
#0 ref_patch_with_borde_450 = 8'd0;
#0 ref_patch_with_borde_451 = 8'd0;
#0 ref_patch_with_borde_452 = 8'd0;
#0 ref_patch_with_borde_453 = 8'd0;
#0 ref_patch_with_borde_454 = 8'd0;
#0 ref_patch_with_borde_456 = 8'd0;
#0 ref_patch_with_borde_457 = 8'd0;
#0 ref_patch_with_borde_458 = 8'd0;
#0 ref_patch_with_borde_459 = 8'd0;
#0 ref_patch_with_borde_460 = 8'd0;
#0 ref_patch_with_borde_461 = 8'd0;
#0 ref_patch_with_borde_462 = 8'd0;
#0 ref_patch_with_borde_463 = 8'd0;
#0 ref_patch_with_borde_464 = 8'd0;
#0 ref_patch_with_borde_465 = 8'd0;
#0 ref_patch_with_borde_467 = 8'd0;
#0 ref_patch_with_borde_468 = 8'd0;
#0 ref_patch_with_borde_469 = 8'd0;
#0 ref_patch_with_borde_470 = 8'd0;
#0 ref_patch_with_borde_471 = 8'd0;
#0 ref_patch_with_borde_472 = 8'd0;
#0 ref_patch_with_borde_473 = 8'd0;
#0 ref_patch_with_borde_474 = 8'd0;
#0 ref_patch_with_borde_475 = 8'd0;
#0 ref_patch_with_borde_476 = 8'd0;
#0 ref_patch_with_borde_478 = 8'd0;
#0 ref_patch_with_borde_479 = 8'd0;
#0 ref_patch_with_borde_480 = 8'd0;
#0 ref_patch_with_borde_481 = 8'd0;
#0 ref_patch_with_borde_482 = 8'd0;
#0 ref_patch_with_borde_483 = 8'd0;
#0 ref_patch_with_borde_484 = 8'd0;
#0 ref_patch_with_borde_485 = 8'd0;
#0 ref_patch_with_borde_486 = 8'd0;
#0 ref_patch_with_borde_487 = 8'd0;
#0 ref_patch_with_borde_503 = 8'd0;
#0 ref_patch_with_borde_504 = 8'd0;
#0 ref_patch_with_borde_505 = 8'd0;
#0 ref_patch_with_borde_506 = 8'd0;
#0 ref_patch_with_borde_507 = 8'd0;
#0 ref_patch_with_borde_508 = 8'd0;
#0 ref_patch_with_borde_509 = 8'd0;
#0 ref_patch_with_borde_510 = 8'd0;
#0 ref_patch_with_borde_512 = 8'd0;
#0 ref_patch_with_borde_513 = 8'd0;
#0 ref_patch_with_borde_514 = 8'd0;
#0 ref_patch_with_borde_515 = 8'd0;
#0 ref_patch_with_borde_516 = 8'd0;
#0 ref_patch_with_borde_517 = 8'd0;
#0 ref_patch_with_borde_518 = 8'd0;
#0 ref_patch_with_borde_519 = 8'd0;
#0 ref_patch_with_borde_520 = 8'd0;
#0 ref_patch_with_borde_521 = 8'd0;
#0 ref_patch_with_borde_523 = 8'd0;
#0 ref_patch_with_borde_524 = 8'd0;
#0 ref_patch_with_borde_525 = 8'd0;
#0 ref_patch_with_borde_526 = 8'd0;
#0 ref_patch_with_borde_527 = 8'd0;
#0 ref_patch_with_borde_528 = 8'd0;
#0 ref_patch_with_borde_529 = 8'd0;
#0 ref_patch_with_borde_530 = 8'd0;
#0 ref_patch_with_borde_531 = 8'd0;
#0 ref_patch_with_borde_532 = 8'd0;
#0 ref_patch_with_borde_534 = 8'd0;
#0 ref_patch_with_borde_535 = 8'd0;
#0 ref_patch_with_borde_536 = 8'd0;
#0 ref_patch_with_borde_537 = 8'd0;
#0 ref_patch_with_borde_538 = 8'd0;
#0 ref_patch_with_borde_539 = 8'd0;
#0 ref_patch_with_borde_540 = 8'd0;
#0 ref_patch_with_borde_541 = 8'd0;
#0 ref_patch_with_borde_542 = 8'd0;
#0 ref_patch_with_borde_543 = 8'd0;
#0 ref_patch_with_borde_545 = 8'd0;
#0 ref_patch_with_borde_546 = 8'd0;
#0 ref_patch_with_borde_547 = 8'd0;
#0 ref_patch_with_borde_548 = 8'd0;
#0 ref_patch_with_borde_549 = 8'd0;
#0 ref_patch_with_borde_550 = 8'd0;
#0 ref_patch_with_borde_551 = 8'd0;
#0 ref_patch_with_borde_552 = 8'd0;
#0 ref_patch_with_borde_553 = 8'd0;
#0 ref_patch_with_borde_554 = 8'd0;
#0 ref_patch_with_borde_556 = 8'd0;
#0 ref_patch_with_borde_557 = 8'd0;
#0 ref_patch_with_borde_558 = 8'd0;
#0 ref_patch_with_borde_559 = 8'd0;
#0 ref_patch_with_borde_560 = 8'd0;
#0 ref_patch_with_borde_561 = 8'd0;
#0 ref_patch_with_borde_562 = 8'd0;
#0 ref_patch_with_borde_563 = 8'd0;
#0 ref_patch_with_borde_564 = 8'd0;
#0 ref_patch_with_borde_565 = 8'd0;
#0 ref_patch_with_borde_567 = 8'd0;
#0 ref_patch_with_borde_568 = 8'd0;
#0 ref_patch_with_borde_569 = 8'd0;
#0 ref_patch_with_borde_570 = 8'd0;
#0 ref_patch_with_borde_571 = 8'd0;
#0 ref_patch_with_borde_572 = 8'd0;
#0 ref_patch_with_borde_573 = 8'd0;
#0 ref_patch_with_borde_574 = 8'd0;
#0 ref_patch_with_borde_575 = 8'd0;
#0 ref_patch_with_borde_576 = 8'd0;
#0 ref_patch_with_borde_578 = 8'd0;
#0 ref_patch_with_borde_579 = 8'd0;
#0 ref_patch_with_borde_580 = 8'd0;
#0 ref_patch_with_borde_581 = 8'd0;
#0 ref_patch_with_borde_582 = 8'd0;
#0 ref_patch_with_borde_583 = 8'd0;
#0 ref_patch_with_borde_584 = 8'd0;
#0 ref_patch_with_borde_585 = 8'd0;
#0 ref_patch_with_borde_586 = 8'd0;
#0 ref_patch_with_borde_587 = 8'd0;
#0 ref_patch_with_borde_603 = 8'd0;
#0 ref_patch_with_borde_604 = 8'd0;
#0 ref_patch_with_borde_605 = 8'd0;
#0 ref_patch_with_borde_606 = 8'd0;
#0 ref_patch_with_borde_607 = 8'd0;
#0 ref_patch_with_borde_608 = 8'd0;
#0 ref_patch_with_borde_609 = 8'd0;
#0 ref_patch_with_borde_610 = 8'd0;
#0 ref_patch_with_borde_612 = 8'd0;
#0 ref_patch_with_borde_613 = 8'd0;
#0 ref_patch_with_borde_614 = 8'd0;
#0 ref_patch_with_borde_615 = 8'd0;
#0 ref_patch_with_borde_616 = 8'd0;
#0 ref_patch_with_borde_617 = 8'd0;
#0 ref_patch_with_borde_618 = 8'd0;
#0 ref_patch_with_borde_619 = 8'd0;
#0 ref_patch_with_borde_620 = 8'd0;
#0 ref_patch_with_borde_621 = 8'd0;
#0 ref_patch_with_borde_623 = 8'd0;
#0 ref_patch_with_borde_624 = 8'd0;
#0 ref_patch_with_borde_625 = 8'd0;
#0 ref_patch_with_borde_626 = 8'd0;
#0 ref_patch_with_borde_627 = 8'd0;
#0 ref_patch_with_borde_628 = 8'd0;
#0 ref_patch_with_borde_629 = 8'd0;
#0 ref_patch_with_borde_630 = 8'd0;
#0 ref_patch_with_borde_631 = 8'd0;
#0 ref_patch_with_borde_632 = 8'd0;
#0 ref_patch_with_borde_634 = 8'd0;
#0 ref_patch_with_borde_635 = 8'd0;
#0 ref_patch_with_borde_636 = 8'd0;
#0 ref_patch_with_borde_637 = 8'd0;
#0 ref_patch_with_borde_638 = 8'd0;
#0 ref_patch_with_borde_639 = 8'd0;
#0 ref_patch_with_borde_640 = 8'd0;
#0 ref_patch_with_borde_641 = 8'd0;
#0 ref_patch_with_borde_642 = 8'd0;
#0 ref_patch_with_borde_643 = 8'd0;
#0 ref_patch_with_borde_645 = 8'd0;
#0 ref_patch_with_borde_646 = 8'd0;
#0 ref_patch_with_borde_647 = 8'd0;
#0 ref_patch_with_borde_648 = 8'd0;
#0 ref_patch_with_borde_649 = 8'd0;
#0 ref_patch_with_borde_650 = 8'd0;
#0 ref_patch_with_borde_651 = 8'd0;
#0 ref_patch_with_borde_652 = 8'd0;
#0 ref_patch_with_borde_653 = 8'd0;
#0 ref_patch_with_borde_654 = 8'd0;
#0 ref_patch_with_borde_656 = 8'd0;
#0 ref_patch_with_borde_657 = 8'd0;
#0 ref_patch_with_borde_658 = 8'd0;
#0 ref_patch_with_borde_659 = 8'd0;
#0 ref_patch_with_borde_660 = 8'd0;
#0 ref_patch_with_borde_661 = 8'd0;
#0 ref_patch_with_borde_662 = 8'd0;
#0 ref_patch_with_borde_663 = 8'd0;
#0 ref_patch_with_borde_664 = 8'd0;
#0 ref_patch_with_borde_665 = 8'd0;
#0 ref_patch_with_borde_667 = 8'd0;
#0 ref_patch_with_borde_668 = 8'd0;
#0 ref_patch_with_borde_669 = 8'd0;
#0 ref_patch_with_borde_670 = 8'd0;
#0 ref_patch_with_borde_671 = 8'd0;
#0 ref_patch_with_borde_672 = 8'd0;
#0 ref_patch_with_borde_673 = 8'd0;
#0 ref_patch_with_borde_674 = 8'd0;
#0 ref_patch_with_borde_675 = 8'd0;
#0 ref_patch_with_borde_676 = 8'd0;
#0 ref_patch_with_borde_678 = 8'd0;
#0 ref_patch_with_borde_679 = 8'd0;
#0 ref_patch_with_borde_680 = 8'd0;
#0 ref_patch_with_borde_681 = 8'd0;
#0 ref_patch_with_borde_682 = 8'd0;
#0 ref_patch_with_borde_683 = 8'd0;
#0 ref_patch_with_borde_684 = 8'd0;
#0 ref_patch_with_borde_685 = 8'd0;
#0 ref_patch_with_borde_686 = 8'd0;
#0 ref_patch_with_borde_687 = 8'd0;
#0 ref_patch_with_borde_95 = 8'd0;
#0 ref_patch_with_borde_94 = 8'd0;
#0 ref_patch_with_borde_93 = 8'd0;
#0 ref_patch_with_borde_92 = 8'd0;
#0 ref_patch_with_borde_91 = 8'd0;
#0 ref_patch_with_borde_90 = 8'd0;
#0 ref_patch_with_borde_89 = 8'd0;
#0 ref_patch_with_borde_88 = 8'd0;
#0 ref_patch_with_borde_86 = 8'd0;
#0 ref_patch_with_borde_85 = 8'd0;
#0 ref_patch_with_borde_84 = 8'd0;
#0 ref_patch_with_borde_83 = 8'd0;
#0 ref_patch_with_borde_82 = 8'd0;
#0 ref_patch_with_borde_81 = 8'd0;
#0 ref_patch_with_borde_80 = 8'd0;
#0 ref_patch_with_borde_79 = 8'd0;
#0 ref_patch_with_borde_78 = 8'd0;
#0 ref_patch_with_borde_77 = 8'd0;
#0 ref_patch_with_borde_75 = 8'd0;
#0 ref_patch_with_borde_74 = 8'd0;
#0 ref_patch_with_borde_73 = 8'd0;
#0 ref_patch_with_borde_72 = 8'd0;
#0 ref_patch_with_borde_71 = 8'd0;
#0 ref_patch_with_borde_70 = 8'd0;
#0 ref_patch_with_borde_69 = 8'd0;
#0 ref_patch_with_borde_68 = 8'd0;
#0 ref_patch_with_borde_67 = 8'd0;
#0 ref_patch_with_borde_66 = 8'd0;
#0 ref_patch_with_borde_64 = 8'd0;
#0 ref_patch_with_borde_63 = 8'd0;
#0 ref_patch_with_borde_62 = 8'd0;
#0 ref_patch_with_borde_61 = 8'd0;
#0 ref_patch_with_borde_60 = 8'd0;
#0 ref_patch_with_borde_59 = 8'd0;
#0 ref_patch_with_borde_58 = 8'd0;
#0 ref_patch_with_borde_57 = 8'd0;
#0 ref_patch_with_borde_56 = 8'd0;
#0 ref_patch_with_borde_55 = 8'd0;
#0 ref_patch_with_borde_53 = 8'd0;
#0 ref_patch_with_borde_52 = 8'd0;
#0 ref_patch_with_borde_51 = 8'd0;
#0 ref_patch_with_borde_50 = 8'd0;
#0 ref_patch_with_borde_49 = 8'd0;
#0 ref_patch_with_borde_48 = 8'd0;
#0 ref_patch_with_borde_47 = 8'd0;
#0 ref_patch_with_borde_46 = 8'd0;
#0 ref_patch_with_borde_45 = 8'd0;
#0 ref_patch_with_borde_44 = 8'd0;
#0 ref_patch_with_borde_42 = 8'd0;
#0 ref_patch_with_borde_41 = 8'd0;
#0 ref_patch_with_borde_40 = 8'd0;
#0 ref_patch_with_borde_39 = 8'd0;
#0 ref_patch_with_borde_38 = 8'd0;
#0 ref_patch_with_borde_37 = 8'd0;
#0 ref_patch_with_borde_36 = 8'd0;
#0 ref_patch_with_borde_35 = 8'd0;
#0 ref_patch_with_borde_34 = 8'd0;
#0 ref_patch_with_borde_33 = 8'd0;
#0 ref_patch_with_borde_31 = 8'd0;
#0 ref_patch_with_borde_30 = 8'd0;
#0 ref_patch_with_borde_29 = 8'd0;
#0 ref_patch_with_borde_28 = 8'd0;
#0 ref_patch_with_borde_27 = 8'd0;
#0 ref_patch_with_borde_26 = 8'd0;
#0 ref_patch_with_borde_25 = 8'd0;
#0 ref_patch_with_borde_24 = 8'd0;
#0 ref_patch_with_borde_23 = 8'd0;
#0 ref_patch_with_borde_22 = 8'd0;
#0 ref_patch_with_borde_20 = 8'd0;
#0 ref_patch_with_borde_19 = 8'd0;
#0 ref_patch_with_borde_18 = 8'd0;
#0 ref_patch_with_borde_17 = 8'd0;
#0 ref_patch_with_borde_16 = 8'd0;
#0 ref_patch_with_borde_15 = 8'd0;
#0 ref_patch_with_borde_14 = 8'd0;
#0 ref_patch_with_borde_13 = 8'd0;
#0 ref_patch_with_borde_12 = 8'd0;
#0 ref_patch_with_borde_11 = 8'd0;
#0 ref_patch_with_borde_401 = 8'd0;
#0 ref_patch_with_borde_402 = 8'd0;
#0 ref_patch_with_borde_501 = 8'd0;
#0 ref_patch_with_borde_502 = 8'd0;
#0 ref_patch_with_borde_601 = 8'd0;
#0 ref_patch_with_borde_602 = 8'd0;
#0 ref_patch_with_borde_97 = 8'd0;
#0 ref_patch_with_borde_96 = 8'd0;
#0 ref_patch_with_borde_489 = 8'd0;
#0 ref_patch_with_borde_490 = 8'd0;
#0 ref_patch_with_borde_491 = 8'd0;
#0 ref_patch_with_borde_492 = 8'd0;
#0 ref_patch_with_borde_493 = 8'd0;
#0 ref_patch_with_borde_494 = 8'd0;
#0 ref_patch_with_borde_495 = 8'd0;
#0 ref_patch_with_borde_496 = 8'd0;
#0 ref_patch_with_borde_497 = 8'd0;
#0 ref_patch_with_borde_589 = 8'd0;
#0 ref_patch_with_borde_590 = 8'd0;
#0 ref_patch_with_borde_591 = 8'd0;
#0 ref_patch_with_borde_592 = 8'd0;
#0 ref_patch_with_borde_593 = 8'd0;
#0 ref_patch_with_borde_594 = 8'd0;
#0 ref_patch_with_borde_595 = 8'd0;
#0 ref_patch_with_borde_596 = 8'd0;
#0 ref_patch_with_borde_597 = 8'd0;
#0 ref_patch_with_borde_689 = 8'd0;
#0 ref_patch_with_borde_690 = 8'd0;
#0 ref_patch_with_borde_691 = 8'd0;
#0 ref_patch_with_borde_692 = 8'd0;
#0 ref_patch_with_borde_693 = 8'd0;
#0 ref_patch_with_borde_694 = 8'd0;
#0 ref_patch_with_borde_695 = 8'd0;
#0 ref_patch_with_borde_696 = 8'd0;
#0 ref_patch_with_borde_697 = 8'd0;
#0 ref_patch_with_borde_9 = 8'd0;
#0 ref_patch_with_borde_8 = 8'd0;
#0 ref_patch_with_borde_7 = 8'd0;
#0 ref_patch_with_borde_6 = 8'd0;
#0 ref_patch_with_borde_5 = 8'd0;
#0 ref_patch_with_borde_4 = 8'd0;
#0 ref_patch_with_borde_3 = 8'd0;
#0 ref_patch_with_borde_2 = 8'd0;
#0 ref_patch_with_borde_1 = 8'd0;
#0 ref_patch_with_borde_399 = 8'd0;
#0 ref_patch_with_borde_400 = 8'd0;
#0 ref_patch_with_borde_411 = 8'd0;
#0 ref_patch_with_borde_422 = 8'd0;
#0 ref_patch_with_borde_433 = 8'd0;
#0 ref_patch_with_borde_444 = 8'd0;
#0 ref_patch_with_borde_455 = 8'd0;
#0 ref_patch_with_borde_466 = 8'd0;
#0 ref_patch_with_borde_477 = 8'd0;
#0 ref_patch_with_borde_488 = 8'd0;
#0 ref_patch_with_borde_498 = 8'd0;
#0 ref_patch_with_borde_499 = 8'd0;
#0 ref_patch_with_borde_500 = 8'd0;
#0 ref_patch_with_borde_511 = 8'd0;
#0 ref_patch_with_borde_522 = 8'd0;
#0 ref_patch_with_borde_533 = 8'd0;
#0 ref_patch_with_borde_544 = 8'd0;
#0 ref_patch_with_borde_555 = 8'd0;
#0 ref_patch_with_borde_566 = 8'd0;
#0 ref_patch_with_borde_577 = 8'd0;
#0 ref_patch_with_borde_588 = 8'd0;
#0 ref_patch_with_borde_598 = 8'd0;
#0 ref_patch_with_borde_599 = 8'd0;
#0 ref_patch_with_borde_600 = 8'd0;
#0 ref_patch_with_borde_611 = 8'd0;
#0 ref_patch_with_borde_622 = 8'd0;
#0 ref_patch_with_borde_633 = 8'd0;
#0 ref_patch_with_borde_644 = 8'd0;
#0 ref_patch_with_borde_655 = 8'd0;
#0 ref_patch_with_borde_666 = 8'd0;
#0 ref_patch_with_borde_677 = 8'd0;
#0 ref_patch_with_borde_688 = 8'd0;
#0 ref_patch_with_borde_698 = 8'd0;
#0 ref_patch_with_borde_99 = 8'd0;
#0 ref_patch_with_borde_98 = 8'd0;
#0 ref_patch_with_borde_87 = 8'd0;
#0 ref_patch_with_borde_76 = 8'd0;
#0 ref_patch_with_borde_65 = 8'd0;
#0 ref_patch_with_borde_54 = 8'd0;
#0 ref_patch_with_borde_43 = 8'd0;
#0 ref_patch_with_borde_32 = 8'd0;
#0 ref_patch_with_borde_21 = 8'd0;
#0 ref_patch_with_borde_10 = 8'd0;
#0 ref_patch_with_borde = 8'd0;
#0 cur_px_estimate_3_1 = 32'd0;
#0 cur_px_estimate_0_0 = 32'd0;
#0 cur_px_estimate_0_1 = 32'd0;
#0 cur_px_estimate_1_0 = 32'd0;
#0 cur_px_estimate_1_1 = 32'd0;
#0 cur_px_estimate_2_0 = 32'd0;
#0 cur_px_estimate_2_1 = 32'd0;
#0 cur_px_estimate_3_0 = 32'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_reg_ioackin_pyr_ARREADY = 1'b0;
#0 ap_reg_ioackin_patches_ARREADY = 1'b0;
#0 ap_reg_ioackin_pos_r_ARREADY = 1'b0;
#0 ap_reg_ioackin_pos_r_AWREADY = 1'b0;
#0 ap_reg_ioackin_debug_AWREADY = 1'b0;
#0 ap_reg_ioackin_pos_r_WREADY = 1'b0;
#0 ap_reg_ioackin_debug_WREADY = 1'b0;
end

batch_align2D_pyr_data #(
    .DataWidth( 8 ),
    .AddressRange( 473760 ),
    .AddressWidth( 19 ))
pyr_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pyr_data_address0),
    .ce0(pyr_data_ce0),
    .we0(pyr_data_we0),
    .d0(pyr_addr_read_reg_10105),
    .q0(pyr_data_q0)
);

batch_align2D_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
batch_align2D_ctrl_s_axi_U(
    .AWVALID(s_axi_ctrl_AWVALID),
    .AWREADY(s_axi_ctrl_AWREADY),
    .AWADDR(s_axi_ctrl_AWADDR),
    .WVALID(s_axi_ctrl_WVALID),
    .WREADY(s_axi_ctrl_WREADY),
    .WDATA(s_axi_ctrl_WDATA),
    .WSTRB(s_axi_ctrl_WSTRB),
    .ARVALID(s_axi_ctrl_ARVALID),
    .ARREADY(s_axi_ctrl_ARREADY),
    .ARADDR(s_axi_ctrl_ARADDR),
    .RVALID(s_axi_ctrl_RVALID),
    .RREADY(s_axi_ctrl_RREADY),
    .RDATA(s_axi_ctrl_RDATA),
    .RRESP(s_axi_ctrl_RRESP),
    .BVALID(s_axi_ctrl_BVALID),
    .BREADY(s_axi_ctrl_BREADY),
    .BRESP(s_axi_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .pyr_data_ptr(pyr_data_ptr),
    .ref_patch_with_border_ptr(ref_patch_with_border_ptr),
    .cur_px_estimate_ptr(cur_px_estimate_ptr),
    .inv_out(inv_out)
);

batch_align2D_param_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_PARAM_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_PARAM_DATA_WIDTH ))
batch_align2D_param_s_axi_U(
    .AWVALID(s_axi_param_AWVALID),
    .AWREADY(s_axi_param_AWREADY),
    .AWADDR(s_axi_param_AWADDR),
    .WVALID(s_axi_param_WVALID),
    .WREADY(s_axi_param_WREADY),
    .WDATA(s_axi_param_WDATA),
    .WSTRB(s_axi_param_WSTRB),
    .ARVALID(s_axi_param_ARVALID),
    .ARREADY(s_axi_param_ARREADY),
    .ARADDR(s_axi_param_ARADDR),
    .RVALID(s_axi_param_RVALID),
    .RREADY(s_axi_param_RREADY),
    .RDATA(s_axi_param_RDATA),
    .RRESP(s_axi_param_RRESP),
    .BVALID(s_axi_param_BVALID),
    .BREADY(s_axi_param_BREADY),
    .BRESP(s_axi_param_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .img_w(img_w),
    .img_h(img_h),
    .levels(levels),
    .converged(64'd0),
    .converged_ap_vld(converged_ap_vld),
    .n_iter(n_iter),
    .transfer_pyr(transfer_pyr)
);

batch_align2D_pyr_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_PYR_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_PYR_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_PYR_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_PYR_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_PYR_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_PYR_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_PYR_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_PYR_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_PYR_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_PYR_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_PYR_CACHE_VALUE ))
batch_align2D_pyr_m_axi_U(
    .AWVALID(m_axi_pyr_AWVALID),
    .AWREADY(m_axi_pyr_AWREADY),
    .AWADDR(m_axi_pyr_AWADDR),
    .AWID(m_axi_pyr_AWID),
    .AWLEN(m_axi_pyr_AWLEN),
    .AWSIZE(m_axi_pyr_AWSIZE),
    .AWBURST(m_axi_pyr_AWBURST),
    .AWLOCK(m_axi_pyr_AWLOCK),
    .AWCACHE(m_axi_pyr_AWCACHE),
    .AWPROT(m_axi_pyr_AWPROT),
    .AWQOS(m_axi_pyr_AWQOS),
    .AWREGION(m_axi_pyr_AWREGION),
    .AWUSER(m_axi_pyr_AWUSER),
    .WVALID(m_axi_pyr_WVALID),
    .WREADY(m_axi_pyr_WREADY),
    .WDATA(m_axi_pyr_WDATA),
    .WSTRB(m_axi_pyr_WSTRB),
    .WLAST(m_axi_pyr_WLAST),
    .WID(m_axi_pyr_WID),
    .WUSER(m_axi_pyr_WUSER),
    .ARVALID(m_axi_pyr_ARVALID),
    .ARREADY(m_axi_pyr_ARREADY),
    .ARADDR(m_axi_pyr_ARADDR),
    .ARID(m_axi_pyr_ARID),
    .ARLEN(m_axi_pyr_ARLEN),
    .ARSIZE(m_axi_pyr_ARSIZE),
    .ARBURST(m_axi_pyr_ARBURST),
    .ARLOCK(m_axi_pyr_ARLOCK),
    .ARCACHE(m_axi_pyr_ARCACHE),
    .ARPROT(m_axi_pyr_ARPROT),
    .ARQOS(m_axi_pyr_ARQOS),
    .ARREGION(m_axi_pyr_ARREGION),
    .ARUSER(m_axi_pyr_ARUSER),
    .RVALID(m_axi_pyr_RVALID),
    .RREADY(m_axi_pyr_RREADY),
    .RDATA(m_axi_pyr_RDATA),
    .RLAST(m_axi_pyr_RLAST),
    .RID(m_axi_pyr_RID),
    .RUSER(m_axi_pyr_RUSER),
    .RRESP(m_axi_pyr_RRESP),
    .BVALID(m_axi_pyr_BVALID),
    .BREADY(m_axi_pyr_BREADY),
    .BRESP(m_axi_pyr_BRESP),
    .BID(m_axi_pyr_BID),
    .BUSER(m_axi_pyr_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(pyr_ARVALID),
    .I_ARREADY(pyr_ARREADY),
    .I_ARADDR(pyr_addr_reg_10090),
    .I_ARID(1'd0),
    .I_ARLEN(32'd473760),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(pyr_RVALID),
    .I_RREADY(pyr_RREADY),
    .I_RDATA(pyr_RDATA),
    .I_RID(pyr_RID),
    .I_RUSER(pyr_RUSER),
    .I_RRESP(pyr_RRESP),
    .I_RLAST(pyr_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(pyr_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(pyr_WREADY),
    .I_WDATA(8'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd0),
    .I_BVALID(pyr_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(pyr_BRESP),
    .I_BID(pyr_BID),
    .I_BUSER(pyr_BUSER)
);

batch_align2D_patches_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_PATCHES_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_PATCHES_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_PATCHES_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_PATCHES_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_PATCHES_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_PATCHES_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_PATCHES_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_PATCHES_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_PATCHES_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_PATCHES_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_PATCHES_CACHE_VALUE ))
batch_align2D_patches_m_axi_U(
    .AWVALID(m_axi_patches_AWVALID),
    .AWREADY(m_axi_patches_AWREADY),
    .AWADDR(m_axi_patches_AWADDR),
    .AWID(m_axi_patches_AWID),
    .AWLEN(m_axi_patches_AWLEN),
    .AWSIZE(m_axi_patches_AWSIZE),
    .AWBURST(m_axi_patches_AWBURST),
    .AWLOCK(m_axi_patches_AWLOCK),
    .AWCACHE(m_axi_patches_AWCACHE),
    .AWPROT(m_axi_patches_AWPROT),
    .AWQOS(m_axi_patches_AWQOS),
    .AWREGION(m_axi_patches_AWREGION),
    .AWUSER(m_axi_patches_AWUSER),
    .WVALID(m_axi_patches_WVALID),
    .WREADY(m_axi_patches_WREADY),
    .WDATA(m_axi_patches_WDATA),
    .WSTRB(m_axi_patches_WSTRB),
    .WLAST(m_axi_patches_WLAST),
    .WID(m_axi_patches_WID),
    .WUSER(m_axi_patches_WUSER),
    .ARVALID(m_axi_patches_ARVALID),
    .ARREADY(m_axi_patches_ARREADY),
    .ARADDR(m_axi_patches_ARADDR),
    .ARID(m_axi_patches_ARID),
    .ARLEN(m_axi_patches_ARLEN),
    .ARSIZE(m_axi_patches_ARSIZE),
    .ARBURST(m_axi_patches_ARBURST),
    .ARLOCK(m_axi_patches_ARLOCK),
    .ARCACHE(m_axi_patches_ARCACHE),
    .ARPROT(m_axi_patches_ARPROT),
    .ARQOS(m_axi_patches_ARQOS),
    .ARREGION(m_axi_patches_ARREGION),
    .ARUSER(m_axi_patches_ARUSER),
    .RVALID(m_axi_patches_RVALID),
    .RREADY(m_axi_patches_RREADY),
    .RDATA(m_axi_patches_RDATA),
    .RLAST(m_axi_patches_RLAST),
    .RID(m_axi_patches_RID),
    .RUSER(m_axi_patches_RUSER),
    .RRESP(m_axi_patches_RRESP),
    .BVALID(m_axi_patches_BVALID),
    .BREADY(m_axi_patches_BREADY),
    .BRESP(m_axi_patches_BRESP),
    .BID(m_axi_patches_BID),
    .BUSER(m_axi_patches_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(patches_ARVALID),
    .I_ARREADY(patches_ARREADY),
    .I_ARADDR(patches_addr_reg_10084),
    .I_ARID(1'd0),
    .I_ARLEN(32'd400),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(patches_RVALID),
    .I_RREADY(patches_RREADY),
    .I_RDATA(patches_RDATA),
    .I_RID(patches_RID),
    .I_RUSER(patches_RUSER),
    .I_RRESP(patches_RRESP),
    .I_RLAST(patches_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(patches_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(patches_WREADY),
    .I_WDATA(8'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd0),
    .I_BVALID(patches_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(patches_BRESP),
    .I_BID(patches_BID),
    .I_BUSER(patches_BUSER)
);

batch_align2D_pos_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_POS_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_POS_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_POS_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_POS_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_POS_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_POS_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_POS_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_POS_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_POS_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_POS_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_POS_R_CACHE_VALUE ))
batch_align2D_pos_r_m_axi_U(
    .AWVALID(m_axi_pos_r_AWVALID),
    .AWREADY(m_axi_pos_r_AWREADY),
    .AWADDR(m_axi_pos_r_AWADDR),
    .AWID(m_axi_pos_r_AWID),
    .AWLEN(m_axi_pos_r_AWLEN),
    .AWSIZE(m_axi_pos_r_AWSIZE),
    .AWBURST(m_axi_pos_r_AWBURST),
    .AWLOCK(m_axi_pos_r_AWLOCK),
    .AWCACHE(m_axi_pos_r_AWCACHE),
    .AWPROT(m_axi_pos_r_AWPROT),
    .AWQOS(m_axi_pos_r_AWQOS),
    .AWREGION(m_axi_pos_r_AWREGION),
    .AWUSER(m_axi_pos_r_AWUSER),
    .WVALID(m_axi_pos_r_WVALID),
    .WREADY(m_axi_pos_r_WREADY),
    .WDATA(m_axi_pos_r_WDATA),
    .WSTRB(m_axi_pos_r_WSTRB),
    .WLAST(m_axi_pos_r_WLAST),
    .WID(m_axi_pos_r_WID),
    .WUSER(m_axi_pos_r_WUSER),
    .ARVALID(m_axi_pos_r_ARVALID),
    .ARREADY(m_axi_pos_r_ARREADY),
    .ARADDR(m_axi_pos_r_ARADDR),
    .ARID(m_axi_pos_r_ARID),
    .ARLEN(m_axi_pos_r_ARLEN),
    .ARSIZE(m_axi_pos_r_ARSIZE),
    .ARBURST(m_axi_pos_r_ARBURST),
    .ARLOCK(m_axi_pos_r_ARLOCK),
    .ARCACHE(m_axi_pos_r_ARCACHE),
    .ARPROT(m_axi_pos_r_ARPROT),
    .ARQOS(m_axi_pos_r_ARQOS),
    .ARREGION(m_axi_pos_r_ARREGION),
    .ARUSER(m_axi_pos_r_ARUSER),
    .RVALID(m_axi_pos_r_RVALID),
    .RREADY(m_axi_pos_r_RREADY),
    .RDATA(m_axi_pos_r_RDATA),
    .RLAST(m_axi_pos_r_RLAST),
    .RID(m_axi_pos_r_RID),
    .RUSER(m_axi_pos_r_RUSER),
    .RRESP(m_axi_pos_r_RRESP),
    .BVALID(m_axi_pos_r_BVALID),
    .BREADY(m_axi_pos_r_BREADY),
    .BRESP(m_axi_pos_r_BRESP),
    .BID(m_axi_pos_r_BID),
    .BUSER(m_axi_pos_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(pos_r_ARVALID),
    .I_ARREADY(pos_r_ARREADY),
    .I_ARADDR(pos_addr_reg_10077),
    .I_ARID(1'd0),
    .I_ARLEN(32'd8),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(pos_r_RVALID),
    .I_RREADY(pos_r_RREADY),
    .I_RDATA(pos_r_RDATA),
    .I_RID(pos_r_RID),
    .I_RUSER(pos_r_RUSER),
    .I_RRESP(pos_r_RRESP),
    .I_RLAST(pos_r_RLAST),
    .I_AWVALID(pos_r_AWVALID),
    .I_AWREADY(pos_r_AWREADY),
    .I_AWADDR(pos_r_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(pos_r_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(pos_r_WVALID),
    .I_WREADY(pos_r_WREADY),
    .I_WDATA(pos_r_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(pos_r_BVALID),
    .I_BREADY(pos_r_BREADY),
    .I_BRESP(pos_r_BRESP),
    .I_BID(pos_r_BID),
    .I_BUSER(pos_r_BUSER)
);

batch_align2D_debug_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DEBUG_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DEBUG_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DEBUG_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DEBUG_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DEBUG_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DEBUG_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DEBUG_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DEBUG_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DEBUG_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DEBUG_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DEBUG_CACHE_VALUE ))
batch_align2D_debug_m_axi_U(
    .AWVALID(m_axi_debug_AWVALID),
    .AWREADY(m_axi_debug_AWREADY),
    .AWADDR(m_axi_debug_AWADDR),
    .AWID(m_axi_debug_AWID),
    .AWLEN(m_axi_debug_AWLEN),
    .AWSIZE(m_axi_debug_AWSIZE),
    .AWBURST(m_axi_debug_AWBURST),
    .AWLOCK(m_axi_debug_AWLOCK),
    .AWCACHE(m_axi_debug_AWCACHE),
    .AWPROT(m_axi_debug_AWPROT),
    .AWQOS(m_axi_debug_AWQOS),
    .AWREGION(m_axi_debug_AWREGION),
    .AWUSER(m_axi_debug_AWUSER),
    .WVALID(m_axi_debug_WVALID),
    .WREADY(m_axi_debug_WREADY),
    .WDATA(m_axi_debug_WDATA),
    .WSTRB(m_axi_debug_WSTRB),
    .WLAST(m_axi_debug_WLAST),
    .WID(m_axi_debug_WID),
    .WUSER(m_axi_debug_WUSER),
    .ARVALID(m_axi_debug_ARVALID),
    .ARREADY(m_axi_debug_ARREADY),
    .ARADDR(m_axi_debug_ARADDR),
    .ARID(m_axi_debug_ARID),
    .ARLEN(m_axi_debug_ARLEN),
    .ARSIZE(m_axi_debug_ARSIZE),
    .ARBURST(m_axi_debug_ARBURST),
    .ARLOCK(m_axi_debug_ARLOCK),
    .ARCACHE(m_axi_debug_ARCACHE),
    .ARPROT(m_axi_debug_ARPROT),
    .ARQOS(m_axi_debug_ARQOS),
    .ARREGION(m_axi_debug_ARREGION),
    .ARUSER(m_axi_debug_ARUSER),
    .RVALID(m_axi_debug_RVALID),
    .RREADY(m_axi_debug_RREADY),
    .RDATA(m_axi_debug_RDATA),
    .RLAST(m_axi_debug_RLAST),
    .RID(m_axi_debug_RID),
    .RUSER(m_axi_debug_RUSER),
    .RRESP(m_axi_debug_RRESP),
    .BVALID(m_axi_debug_BVALID),
    .BREADY(m_axi_debug_BREADY),
    .BRESP(m_axi_debug_BRESP),
    .BID(m_axi_debug_BID),
    .BUSER(m_axi_debug_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(debug_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(debug_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(debug_RDATA),
    .I_RID(debug_RID),
    .I_RUSER(debug_RUSER),
    .I_RRESP(debug_RRESP),
    .I_RLAST(debug_RLAST),
    .I_AWVALID(debug_AWVALID),
    .I_AWREADY(debug_AWREADY),
    .I_AWADDR(debug_addr_reg_10066),
    .I_AWID(1'd0),
    .I_AWLEN(32'd36),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(debug_WVALID),
    .I_WREADY(debug_WREADY),
    .I_WDATA(tmp_11_reg_10551),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(debug_BVALID),
    .I_BREADY(debug_BREADY),
    .I_BRESP(debug_BRESP),
    .I_BID(debug_BID),
    .I_BUSER(debug_BUSER)
);

batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1708_p0),
    .din1(grp_fu_1708_p1),
    .opcode(grp_fu_1708_opcode),
    .ce(1'b1),
    .dout(grp_fu_1708_p2)
);

batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1716_p0),
    .din1(grp_fu_1716_p1),
    .opcode(grp_fu_1716_opcode),
    .ce(1'b1),
    .dout(grp_fu_1716_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1721_p0),
    .din1(grp_fu_1721_p1),
    .ce(1'b1),
    .dout(grp_fu_1721_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1727_p0),
    .din1(grp_fu_1727_p1),
    .ce(1'b1),
    .dout(grp_fu_1727_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1733_p0),
    .din1(grp_fu_1733_p1),
    .ce(1'b1),
    .dout(grp_fu_1733_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(tmp_21_reg_10466),
    .din1(tmp_16_reg_10457),
    .ce(1'b1),
    .dout(grp_fu_1742_p2)
);

batch_align2D_fdiv_32ns_32ns_32_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fdiv_32ns_32ns_32_8_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1748_p0),
    .din1(reg_1812),
    .ce(1'b1),
    .dout(grp_fu_1748_p2)
);

batch_align2D_sitofp_32s_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_sitofp_32s_32_3_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1752_p0),
    .ce(1'b1),
    .dout(grp_fu_1752_p1)
);

batch_align2D_mux_4009_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 8 ),
    .din101_WIDTH( 8 ),
    .din102_WIDTH( 8 ),
    .din103_WIDTH( 8 ),
    .din104_WIDTH( 8 ),
    .din105_WIDTH( 8 ),
    .din106_WIDTH( 8 ),
    .din107_WIDTH( 8 ),
    .din108_WIDTH( 8 ),
    .din109_WIDTH( 8 ),
    .din110_WIDTH( 8 ),
    .din111_WIDTH( 8 ),
    .din112_WIDTH( 8 ),
    .din113_WIDTH( 8 ),
    .din114_WIDTH( 8 ),
    .din115_WIDTH( 8 ),
    .din116_WIDTH( 8 ),
    .din117_WIDTH( 8 ),
    .din118_WIDTH( 8 ),
    .din119_WIDTH( 8 ),
    .din120_WIDTH( 8 ),
    .din121_WIDTH( 8 ),
    .din122_WIDTH( 8 ),
    .din123_WIDTH( 8 ),
    .din124_WIDTH( 8 ),
    .din125_WIDTH( 8 ),
    .din126_WIDTH( 8 ),
    .din127_WIDTH( 8 ),
    .din128_WIDTH( 8 ),
    .din129_WIDTH( 8 ),
    .din130_WIDTH( 8 ),
    .din131_WIDTH( 8 ),
    .din132_WIDTH( 8 ),
    .din133_WIDTH( 8 ),
    .din134_WIDTH( 8 ),
    .din135_WIDTH( 8 ),
    .din136_WIDTH( 8 ),
    .din137_WIDTH( 8 ),
    .din138_WIDTH( 8 ),
    .din139_WIDTH( 8 ),
    .din140_WIDTH( 8 ),
    .din141_WIDTH( 8 ),
    .din142_WIDTH( 8 ),
    .din143_WIDTH( 8 ),
    .din144_WIDTH( 8 ),
    .din145_WIDTH( 8 ),
    .din146_WIDTH( 8 ),
    .din147_WIDTH( 8 ),
    .din148_WIDTH( 8 ),
    .din149_WIDTH( 8 ),
    .din150_WIDTH( 8 ),
    .din151_WIDTH( 8 ),
    .din152_WIDTH( 8 ),
    .din153_WIDTH( 8 ),
    .din154_WIDTH( 8 ),
    .din155_WIDTH( 8 ),
    .din156_WIDTH( 8 ),
    .din157_WIDTH( 8 ),
    .din158_WIDTH( 8 ),
    .din159_WIDTH( 8 ),
    .din160_WIDTH( 8 ),
    .din161_WIDTH( 8 ),
    .din162_WIDTH( 8 ),
    .din163_WIDTH( 8 ),
    .din164_WIDTH( 8 ),
    .din165_WIDTH( 8 ),
    .din166_WIDTH( 8 ),
    .din167_WIDTH( 8 ),
    .din168_WIDTH( 8 ),
    .din169_WIDTH( 8 ),
    .din170_WIDTH( 8 ),
    .din171_WIDTH( 8 ),
    .din172_WIDTH( 8 ),
    .din173_WIDTH( 8 ),
    .din174_WIDTH( 8 ),
    .din175_WIDTH( 8 ),
    .din176_WIDTH( 8 ),
    .din177_WIDTH( 8 ),
    .din178_WIDTH( 8 ),
    .din179_WIDTH( 8 ),
    .din180_WIDTH( 8 ),
    .din181_WIDTH( 8 ),
    .din182_WIDTH( 8 ),
    .din183_WIDTH( 8 ),
    .din184_WIDTH( 8 ),
    .din185_WIDTH( 8 ),
    .din186_WIDTH( 8 ),
    .din187_WIDTH( 8 ),
    .din188_WIDTH( 8 ),
    .din189_WIDTH( 8 ),
    .din190_WIDTH( 8 ),
    .din191_WIDTH( 8 ),
    .din192_WIDTH( 8 ),
    .din193_WIDTH( 8 ),
    .din194_WIDTH( 8 ),
    .din195_WIDTH( 8 ),
    .din196_WIDTH( 8 ),
    .din197_WIDTH( 8 ),
    .din198_WIDTH( 8 ),
    .din199_WIDTH( 8 ),
    .din200_WIDTH( 8 ),
    .din201_WIDTH( 8 ),
    .din202_WIDTH( 8 ),
    .din203_WIDTH( 8 ),
    .din204_WIDTH( 8 ),
    .din205_WIDTH( 8 ),
    .din206_WIDTH( 8 ),
    .din207_WIDTH( 8 ),
    .din208_WIDTH( 8 ),
    .din209_WIDTH( 8 ),
    .din210_WIDTH( 8 ),
    .din211_WIDTH( 8 ),
    .din212_WIDTH( 8 ),
    .din213_WIDTH( 8 ),
    .din214_WIDTH( 8 ),
    .din215_WIDTH( 8 ),
    .din216_WIDTH( 8 ),
    .din217_WIDTH( 8 ),
    .din218_WIDTH( 8 ),
    .din219_WIDTH( 8 ),
    .din220_WIDTH( 8 ),
    .din221_WIDTH( 8 ),
    .din222_WIDTH( 8 ),
    .din223_WIDTH( 8 ),
    .din224_WIDTH( 8 ),
    .din225_WIDTH( 8 ),
    .din226_WIDTH( 8 ),
    .din227_WIDTH( 8 ),
    .din228_WIDTH( 8 ),
    .din229_WIDTH( 8 ),
    .din230_WIDTH( 8 ),
    .din231_WIDTH( 8 ),
    .din232_WIDTH( 8 ),
    .din233_WIDTH( 8 ),
    .din234_WIDTH( 8 ),
    .din235_WIDTH( 8 ),
    .din236_WIDTH( 8 ),
    .din237_WIDTH( 8 ),
    .din238_WIDTH( 8 ),
    .din239_WIDTH( 8 ),
    .din240_WIDTH( 8 ),
    .din241_WIDTH( 8 ),
    .din242_WIDTH( 8 ),
    .din243_WIDTH( 8 ),
    .din244_WIDTH( 8 ),
    .din245_WIDTH( 8 ),
    .din246_WIDTH( 8 ),
    .din247_WIDTH( 8 ),
    .din248_WIDTH( 8 ),
    .din249_WIDTH( 8 ),
    .din250_WIDTH( 8 ),
    .din251_WIDTH( 8 ),
    .din252_WIDTH( 8 ),
    .din253_WIDTH( 8 ),
    .din254_WIDTH( 8 ),
    .din255_WIDTH( 8 ),
    .din256_WIDTH( 8 ),
    .din257_WIDTH( 8 ),
    .din258_WIDTH( 8 ),
    .din259_WIDTH( 8 ),
    .din260_WIDTH( 8 ),
    .din261_WIDTH( 8 ),
    .din262_WIDTH( 8 ),
    .din263_WIDTH( 8 ),
    .din264_WIDTH( 8 ),
    .din265_WIDTH( 8 ),
    .din266_WIDTH( 8 ),
    .din267_WIDTH( 8 ),
    .din268_WIDTH( 8 ),
    .din269_WIDTH( 8 ),
    .din270_WIDTH( 8 ),
    .din271_WIDTH( 8 ),
    .din272_WIDTH( 8 ),
    .din273_WIDTH( 8 ),
    .din274_WIDTH( 8 ),
    .din275_WIDTH( 8 ),
    .din276_WIDTH( 8 ),
    .din277_WIDTH( 8 ),
    .din278_WIDTH( 8 ),
    .din279_WIDTH( 8 ),
    .din280_WIDTH( 8 ),
    .din281_WIDTH( 8 ),
    .din282_WIDTH( 8 ),
    .din283_WIDTH( 8 ),
    .din284_WIDTH( 8 ),
    .din285_WIDTH( 8 ),
    .din286_WIDTH( 8 ),
    .din287_WIDTH( 8 ),
    .din288_WIDTH( 8 ),
    .din289_WIDTH( 8 ),
    .din290_WIDTH( 8 ),
    .din291_WIDTH( 8 ),
    .din292_WIDTH( 8 ),
    .din293_WIDTH( 8 ),
    .din294_WIDTH( 8 ),
    .din295_WIDTH( 8 ),
    .din296_WIDTH( 8 ),
    .din297_WIDTH( 8 ),
    .din298_WIDTH( 8 ),
    .din299_WIDTH( 8 ),
    .din300_WIDTH( 8 ),
    .din301_WIDTH( 8 ),
    .din302_WIDTH( 8 ),
    .din303_WIDTH( 8 ),
    .din304_WIDTH( 8 ),
    .din305_WIDTH( 8 ),
    .din306_WIDTH( 8 ),
    .din307_WIDTH( 8 ),
    .din308_WIDTH( 8 ),
    .din309_WIDTH( 8 ),
    .din310_WIDTH( 8 ),
    .din311_WIDTH( 8 ),
    .din312_WIDTH( 8 ),
    .din313_WIDTH( 8 ),
    .din314_WIDTH( 8 ),
    .din315_WIDTH( 8 ),
    .din316_WIDTH( 8 ),
    .din317_WIDTH( 8 ),
    .din318_WIDTH( 8 ),
    .din319_WIDTH( 8 ),
    .din320_WIDTH( 8 ),
    .din321_WIDTH( 8 ),
    .din322_WIDTH( 8 ),
    .din323_WIDTH( 8 ),
    .din324_WIDTH( 8 ),
    .din325_WIDTH( 8 ),
    .din326_WIDTH( 8 ),
    .din327_WIDTH( 8 ),
    .din328_WIDTH( 8 ),
    .din329_WIDTH( 8 ),
    .din330_WIDTH( 8 ),
    .din331_WIDTH( 8 ),
    .din332_WIDTH( 8 ),
    .din333_WIDTH( 8 ),
    .din334_WIDTH( 8 ),
    .din335_WIDTH( 8 ),
    .din336_WIDTH( 8 ),
    .din337_WIDTH( 8 ),
    .din338_WIDTH( 8 ),
    .din339_WIDTH( 8 ),
    .din340_WIDTH( 8 ),
    .din341_WIDTH( 8 ),
    .din342_WIDTH( 8 ),
    .din343_WIDTH( 8 ),
    .din344_WIDTH( 8 ),
    .din345_WIDTH( 8 ),
    .din346_WIDTH( 8 ),
    .din347_WIDTH( 8 ),
    .din348_WIDTH( 8 ),
    .din349_WIDTH( 8 ),
    .din350_WIDTH( 8 ),
    .din351_WIDTH( 8 ),
    .din352_WIDTH( 8 ),
    .din353_WIDTH( 8 ),
    .din354_WIDTH( 8 ),
    .din355_WIDTH( 8 ),
    .din356_WIDTH( 8 ),
    .din357_WIDTH( 8 ),
    .din358_WIDTH( 8 ),
    .din359_WIDTH( 8 ),
    .din360_WIDTH( 8 ),
    .din361_WIDTH( 8 ),
    .din362_WIDTH( 8 ),
    .din363_WIDTH( 8 ),
    .din364_WIDTH( 8 ),
    .din365_WIDTH( 8 ),
    .din366_WIDTH( 8 ),
    .din367_WIDTH( 8 ),
    .din368_WIDTH( 8 ),
    .din369_WIDTH( 8 ),
    .din370_WIDTH( 8 ),
    .din371_WIDTH( 8 ),
    .din372_WIDTH( 8 ),
    .din373_WIDTH( 8 ),
    .din374_WIDTH( 8 ),
    .din375_WIDTH( 8 ),
    .din376_WIDTH( 8 ),
    .din377_WIDTH( 8 ),
    .din378_WIDTH( 8 ),
    .din379_WIDTH( 8 ),
    .din380_WIDTH( 8 ),
    .din381_WIDTH( 8 ),
    .din382_WIDTH( 8 ),
    .din383_WIDTH( 8 ),
    .din384_WIDTH( 8 ),
    .din385_WIDTH( 8 ),
    .din386_WIDTH( 8 ),
    .din387_WIDTH( 8 ),
    .din388_WIDTH( 8 ),
    .din389_WIDTH( 8 ),
    .din390_WIDTH( 8 ),
    .din391_WIDTH( 8 ),
    .din392_WIDTH( 8 ),
    .din393_WIDTH( 8 ),
    .din394_WIDTH( 8 ),
    .din395_WIDTH( 8 ),
    .din396_WIDTH( 8 ),
    .din397_WIDTH( 8 ),
    .din398_WIDTH( 8 ),
    .din399_WIDTH( 8 ),
    .din400_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_4009_8_1_1_U9(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(ref_patch_with_borde_403),
    .din13(ref_patch_with_borde_404),
    .din14(ref_patch_with_borde_405),
    .din15(ref_patch_with_borde_406),
    .din16(ref_patch_with_borde_407),
    .din17(ref_patch_with_borde_408),
    .din18(ref_patch_with_borde_409),
    .din19(ref_patch_with_borde_410),
    .din20(ref_patch_with_borde_412),
    .din21(ref_patch_with_borde_413),
    .din22(ref_patch_with_borde_414),
    .din23(ref_patch_with_borde_415),
    .din24(ref_patch_with_borde_416),
    .din25(ref_patch_with_borde_417),
    .din26(ref_patch_with_borde_418),
    .din27(ref_patch_with_borde_419),
    .din28(ref_patch_with_borde_420),
    .din29(ref_patch_with_borde_421),
    .din30(ref_patch_with_borde_423),
    .din31(ref_patch_with_borde_424),
    .din32(ref_patch_with_borde_425),
    .din33(ref_patch_with_borde_426),
    .din34(ref_patch_with_borde_427),
    .din35(ref_patch_with_borde_428),
    .din36(ref_patch_with_borde_429),
    .din37(ref_patch_with_borde_430),
    .din38(ref_patch_with_borde_431),
    .din39(ref_patch_with_borde_432),
    .din40(ref_patch_with_borde_434),
    .din41(ref_patch_with_borde_435),
    .din42(ref_patch_with_borde_436),
    .din43(ref_patch_with_borde_437),
    .din44(ref_patch_with_borde_438),
    .din45(ref_patch_with_borde_439),
    .din46(ref_patch_with_borde_440),
    .din47(ref_patch_with_borde_441),
    .din48(ref_patch_with_borde_442),
    .din49(ref_patch_with_borde_443),
    .din50(ref_patch_with_borde_445),
    .din51(ref_patch_with_borde_446),
    .din52(ref_patch_with_borde_447),
    .din53(ref_patch_with_borde_448),
    .din54(ref_patch_with_borde_449),
    .din55(ref_patch_with_borde_450),
    .din56(ref_patch_with_borde_451),
    .din57(ref_patch_with_borde_452),
    .din58(ref_patch_with_borde_453),
    .din59(ref_patch_with_borde_454),
    .din60(ref_patch_with_borde_456),
    .din61(ref_patch_with_borde_457),
    .din62(ref_patch_with_borde_458),
    .din63(ref_patch_with_borde_459),
    .din64(ref_patch_with_borde_460),
    .din65(ref_patch_with_borde_461),
    .din66(ref_patch_with_borde_462),
    .din67(ref_patch_with_borde_463),
    .din68(ref_patch_with_borde_464),
    .din69(ref_patch_with_borde_465),
    .din70(ref_patch_with_borde_467),
    .din71(ref_patch_with_borde_468),
    .din72(ref_patch_with_borde_469),
    .din73(ref_patch_with_borde_470),
    .din74(ref_patch_with_borde_471),
    .din75(ref_patch_with_borde_472),
    .din76(ref_patch_with_borde_473),
    .din77(ref_patch_with_borde_474),
    .din78(ref_patch_with_borde_475),
    .din79(ref_patch_with_borde_476),
    .din80(ref_patch_with_borde_478),
    .din81(ref_patch_with_borde_479),
    .din82(ref_patch_with_borde_480),
    .din83(ref_patch_with_borde_481),
    .din84(ref_patch_with_borde_482),
    .din85(ref_patch_with_borde_483),
    .din86(ref_patch_with_borde_484),
    .din87(ref_patch_with_borde_485),
    .din88(ref_patch_with_borde_486),
    .din89(ref_patch_with_borde_487),
    .din90(8'd0),
    .din91(8'd0),
    .din92(8'd0),
    .din93(8'd0),
    .din94(8'd0),
    .din95(8'd0),
    .din96(8'd0),
    .din97(8'd0),
    .din98(8'd0),
    .din99(8'd0),
    .din100(8'd0),
    .din101(8'd0),
    .din102(8'd0),
    .din103(8'd0),
    .din104(8'd0),
    .din105(8'd0),
    .din106(8'd0),
    .din107(8'd0),
    .din108(8'd0),
    .din109(8'd0),
    .din110(8'd0),
    .din111(8'd0),
    .din112(ref_patch_with_borde_503),
    .din113(ref_patch_with_borde_504),
    .din114(ref_patch_with_borde_505),
    .din115(ref_patch_with_borde_506),
    .din116(ref_patch_with_borde_507),
    .din117(ref_patch_with_borde_508),
    .din118(ref_patch_with_borde_509),
    .din119(ref_patch_with_borde_510),
    .din120(ref_patch_with_borde_512),
    .din121(ref_patch_with_borde_513),
    .din122(ref_patch_with_borde_514),
    .din123(ref_patch_with_borde_515),
    .din124(ref_patch_with_borde_516),
    .din125(ref_patch_with_borde_517),
    .din126(ref_patch_with_borde_518),
    .din127(ref_patch_with_borde_519),
    .din128(ref_patch_with_borde_520),
    .din129(ref_patch_with_borde_521),
    .din130(ref_patch_with_borde_523),
    .din131(ref_patch_with_borde_524),
    .din132(ref_patch_with_borde_525),
    .din133(ref_patch_with_borde_526),
    .din134(ref_patch_with_borde_527),
    .din135(ref_patch_with_borde_528),
    .din136(ref_patch_with_borde_529),
    .din137(ref_patch_with_borde_530),
    .din138(ref_patch_with_borde_531),
    .din139(ref_patch_with_borde_532),
    .din140(ref_patch_with_borde_534),
    .din141(ref_patch_with_borde_535),
    .din142(ref_patch_with_borde_536),
    .din143(ref_patch_with_borde_537),
    .din144(ref_patch_with_borde_538),
    .din145(ref_patch_with_borde_539),
    .din146(ref_patch_with_borde_540),
    .din147(ref_patch_with_borde_541),
    .din148(ref_patch_with_borde_542),
    .din149(ref_patch_with_borde_543),
    .din150(ref_patch_with_borde_545),
    .din151(ref_patch_with_borde_546),
    .din152(ref_patch_with_borde_547),
    .din153(ref_patch_with_borde_548),
    .din154(ref_patch_with_borde_549),
    .din155(ref_patch_with_borde_550),
    .din156(ref_patch_with_borde_551),
    .din157(ref_patch_with_borde_552),
    .din158(ref_patch_with_borde_553),
    .din159(ref_patch_with_borde_554),
    .din160(ref_patch_with_borde_556),
    .din161(ref_patch_with_borde_557),
    .din162(ref_patch_with_borde_558),
    .din163(ref_patch_with_borde_559),
    .din164(ref_patch_with_borde_560),
    .din165(ref_patch_with_borde_561),
    .din166(ref_patch_with_borde_562),
    .din167(ref_patch_with_borde_563),
    .din168(ref_patch_with_borde_564),
    .din169(ref_patch_with_borde_565),
    .din170(ref_patch_with_borde_567),
    .din171(ref_patch_with_borde_568),
    .din172(ref_patch_with_borde_569),
    .din173(ref_patch_with_borde_570),
    .din174(ref_patch_with_borde_571),
    .din175(ref_patch_with_borde_572),
    .din176(ref_patch_with_borde_573),
    .din177(ref_patch_with_borde_574),
    .din178(ref_patch_with_borde_575),
    .din179(ref_patch_with_borde_576),
    .din180(ref_patch_with_borde_578),
    .din181(ref_patch_with_borde_579),
    .din182(ref_patch_with_borde_580),
    .din183(ref_patch_with_borde_581),
    .din184(ref_patch_with_borde_582),
    .din185(ref_patch_with_borde_583),
    .din186(ref_patch_with_borde_584),
    .din187(ref_patch_with_borde_585),
    .din188(ref_patch_with_borde_586),
    .din189(ref_patch_with_borde_587),
    .din190(8'd0),
    .din191(8'd0),
    .din192(8'd0),
    .din193(8'd0),
    .din194(8'd0),
    .din195(8'd0),
    .din196(8'd0),
    .din197(8'd0),
    .din198(8'd0),
    .din199(8'd0),
    .din200(8'd0),
    .din201(8'd0),
    .din202(8'd0),
    .din203(8'd0),
    .din204(8'd0),
    .din205(8'd0),
    .din206(8'd0),
    .din207(8'd0),
    .din208(8'd0),
    .din209(8'd0),
    .din210(8'd0),
    .din211(8'd0),
    .din212(ref_patch_with_borde_603),
    .din213(ref_patch_with_borde_604),
    .din214(ref_patch_with_borde_605),
    .din215(ref_patch_with_borde_606),
    .din216(ref_patch_with_borde_607),
    .din217(ref_patch_with_borde_608),
    .din218(ref_patch_with_borde_609),
    .din219(ref_patch_with_borde_610),
    .din220(ref_patch_with_borde_612),
    .din221(ref_patch_with_borde_613),
    .din222(ref_patch_with_borde_614),
    .din223(ref_patch_with_borde_615),
    .din224(ref_patch_with_borde_616),
    .din225(ref_patch_with_borde_617),
    .din226(ref_patch_with_borde_618),
    .din227(ref_patch_with_borde_619),
    .din228(ref_patch_with_borde_620),
    .din229(ref_patch_with_borde_621),
    .din230(ref_patch_with_borde_623),
    .din231(ref_patch_with_borde_624),
    .din232(ref_patch_with_borde_625),
    .din233(ref_patch_with_borde_626),
    .din234(ref_patch_with_borde_627),
    .din235(ref_patch_with_borde_628),
    .din236(ref_patch_with_borde_629),
    .din237(ref_patch_with_borde_630),
    .din238(ref_patch_with_borde_631),
    .din239(ref_patch_with_borde_632),
    .din240(ref_patch_with_borde_634),
    .din241(ref_patch_with_borde_635),
    .din242(ref_patch_with_borde_636),
    .din243(ref_patch_with_borde_637),
    .din244(ref_patch_with_borde_638),
    .din245(ref_patch_with_borde_639),
    .din246(ref_patch_with_borde_640),
    .din247(ref_patch_with_borde_641),
    .din248(ref_patch_with_borde_642),
    .din249(ref_patch_with_borde_643),
    .din250(ref_patch_with_borde_645),
    .din251(ref_patch_with_borde_646),
    .din252(ref_patch_with_borde_647),
    .din253(ref_patch_with_borde_648),
    .din254(ref_patch_with_borde_649),
    .din255(ref_patch_with_borde_650),
    .din256(ref_patch_with_borde_651),
    .din257(ref_patch_with_borde_652),
    .din258(ref_patch_with_borde_653),
    .din259(ref_patch_with_borde_654),
    .din260(ref_patch_with_borde_656),
    .din261(ref_patch_with_borde_657),
    .din262(ref_patch_with_borde_658),
    .din263(ref_patch_with_borde_659),
    .din264(ref_patch_with_borde_660),
    .din265(ref_patch_with_borde_661),
    .din266(ref_patch_with_borde_662),
    .din267(ref_patch_with_borde_663),
    .din268(ref_patch_with_borde_664),
    .din269(ref_patch_with_borde_665),
    .din270(ref_patch_with_borde_667),
    .din271(ref_patch_with_borde_668),
    .din272(ref_patch_with_borde_669),
    .din273(ref_patch_with_borde_670),
    .din274(ref_patch_with_borde_671),
    .din275(ref_patch_with_borde_672),
    .din276(ref_patch_with_borde_673),
    .din277(ref_patch_with_borde_674),
    .din278(ref_patch_with_borde_675),
    .din279(ref_patch_with_borde_676),
    .din280(ref_patch_with_borde_678),
    .din281(ref_patch_with_borde_679),
    .din282(ref_patch_with_borde_680),
    .din283(ref_patch_with_borde_681),
    .din284(ref_patch_with_borde_682),
    .din285(ref_patch_with_borde_683),
    .din286(ref_patch_with_borde_684),
    .din287(ref_patch_with_borde_685),
    .din288(ref_patch_with_borde_686),
    .din289(ref_patch_with_borde_687),
    .din290(8'd0),
    .din291(8'd0),
    .din292(8'd0),
    .din293(8'd0),
    .din294(8'd0),
    .din295(8'd0),
    .din296(8'd0),
    .din297(8'd0),
    .din298(8'd0),
    .din299(8'd0),
    .din300(8'd0),
    .din301(8'd0),
    .din302(8'd0),
    .din303(8'd0),
    .din304(8'd0),
    .din305(8'd0),
    .din306(8'd0),
    .din307(8'd0),
    .din308(8'd0),
    .din309(8'd0),
    .din310(8'd0),
    .din311(8'd0),
    .din312(ref_patch_with_borde_95),
    .din313(ref_patch_with_borde_94),
    .din314(ref_patch_with_borde_93),
    .din315(ref_patch_with_borde_92),
    .din316(ref_patch_with_borde_91),
    .din317(ref_patch_with_borde_90),
    .din318(ref_patch_with_borde_89),
    .din319(ref_patch_with_borde_88),
    .din320(ref_patch_with_borde_86),
    .din321(ref_patch_with_borde_85),
    .din322(ref_patch_with_borde_84),
    .din323(ref_patch_with_borde_83),
    .din324(ref_patch_with_borde_82),
    .din325(ref_patch_with_borde_81),
    .din326(ref_patch_with_borde_80),
    .din327(ref_patch_with_borde_79),
    .din328(ref_patch_with_borde_78),
    .din329(ref_patch_with_borde_77),
    .din330(ref_patch_with_borde_75),
    .din331(ref_patch_with_borde_74),
    .din332(ref_patch_with_borde_73),
    .din333(ref_patch_with_borde_72),
    .din334(ref_patch_with_borde_71),
    .din335(ref_patch_with_borde_70),
    .din336(ref_patch_with_borde_69),
    .din337(ref_patch_with_borde_68),
    .din338(ref_patch_with_borde_67),
    .din339(ref_patch_with_borde_66),
    .din340(ref_patch_with_borde_64),
    .din341(ref_patch_with_borde_63),
    .din342(ref_patch_with_borde_62),
    .din343(ref_patch_with_borde_61),
    .din344(ref_patch_with_borde_60),
    .din345(ref_patch_with_borde_59),
    .din346(ref_patch_with_borde_58),
    .din347(ref_patch_with_borde_57),
    .din348(ref_patch_with_borde_56),
    .din349(ref_patch_with_borde_55),
    .din350(ref_patch_with_borde_53),
    .din351(ref_patch_with_borde_52),
    .din352(ref_patch_with_borde_51),
    .din353(ref_patch_with_borde_50),
    .din354(ref_patch_with_borde_49),
    .din355(ref_patch_with_borde_48),
    .din356(ref_patch_with_borde_47),
    .din357(ref_patch_with_borde_46),
    .din358(ref_patch_with_borde_45),
    .din359(ref_patch_with_borde_44),
    .din360(ref_patch_with_borde_42),
    .din361(ref_patch_with_borde_41),
    .din362(ref_patch_with_borde_40),
    .din363(ref_patch_with_borde_39),
    .din364(ref_patch_with_borde_38),
    .din365(ref_patch_with_borde_37),
    .din366(ref_patch_with_borde_36),
    .din367(ref_patch_with_borde_35),
    .din368(ref_patch_with_borde_34),
    .din369(ref_patch_with_borde_33),
    .din370(ref_patch_with_borde_31),
    .din371(ref_patch_with_borde_30),
    .din372(ref_patch_with_borde_29),
    .din373(ref_patch_with_borde_28),
    .din374(ref_patch_with_borde_27),
    .din375(ref_patch_with_borde_26),
    .din376(ref_patch_with_borde_25),
    .din377(ref_patch_with_borde_24),
    .din378(ref_patch_with_borde_23),
    .din379(ref_patch_with_borde_22),
    .din380(ref_patch_with_borde_20),
    .din381(ref_patch_with_borde_19),
    .din382(ref_patch_with_borde_18),
    .din383(ref_patch_with_borde_17),
    .din384(ref_patch_with_borde_16),
    .din385(ref_patch_with_borde_15),
    .din386(ref_patch_with_borde_14),
    .din387(ref_patch_with_borde_13),
    .din388(ref_patch_with_borde_12),
    .din389(ref_patch_with_borde_11),
    .din390(8'd0),
    .din391(8'd0),
    .din392(8'd0),
    .din393(8'd0),
    .din394(8'd0),
    .din395(8'd0),
    .din396(8'd0),
    .din397(8'd0),
    .din398(8'd0),
    .din399(8'd0),
    .din400(tmp_45_fu_5794_p401),
    .dout(tmp_45_fu_5794_p402)
);

batch_align2D_mux_4009_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 8 ),
    .din101_WIDTH( 8 ),
    .din102_WIDTH( 8 ),
    .din103_WIDTH( 8 ),
    .din104_WIDTH( 8 ),
    .din105_WIDTH( 8 ),
    .din106_WIDTH( 8 ),
    .din107_WIDTH( 8 ),
    .din108_WIDTH( 8 ),
    .din109_WIDTH( 8 ),
    .din110_WIDTH( 8 ),
    .din111_WIDTH( 8 ),
    .din112_WIDTH( 8 ),
    .din113_WIDTH( 8 ),
    .din114_WIDTH( 8 ),
    .din115_WIDTH( 8 ),
    .din116_WIDTH( 8 ),
    .din117_WIDTH( 8 ),
    .din118_WIDTH( 8 ),
    .din119_WIDTH( 8 ),
    .din120_WIDTH( 8 ),
    .din121_WIDTH( 8 ),
    .din122_WIDTH( 8 ),
    .din123_WIDTH( 8 ),
    .din124_WIDTH( 8 ),
    .din125_WIDTH( 8 ),
    .din126_WIDTH( 8 ),
    .din127_WIDTH( 8 ),
    .din128_WIDTH( 8 ),
    .din129_WIDTH( 8 ),
    .din130_WIDTH( 8 ),
    .din131_WIDTH( 8 ),
    .din132_WIDTH( 8 ),
    .din133_WIDTH( 8 ),
    .din134_WIDTH( 8 ),
    .din135_WIDTH( 8 ),
    .din136_WIDTH( 8 ),
    .din137_WIDTH( 8 ),
    .din138_WIDTH( 8 ),
    .din139_WIDTH( 8 ),
    .din140_WIDTH( 8 ),
    .din141_WIDTH( 8 ),
    .din142_WIDTH( 8 ),
    .din143_WIDTH( 8 ),
    .din144_WIDTH( 8 ),
    .din145_WIDTH( 8 ),
    .din146_WIDTH( 8 ),
    .din147_WIDTH( 8 ),
    .din148_WIDTH( 8 ),
    .din149_WIDTH( 8 ),
    .din150_WIDTH( 8 ),
    .din151_WIDTH( 8 ),
    .din152_WIDTH( 8 ),
    .din153_WIDTH( 8 ),
    .din154_WIDTH( 8 ),
    .din155_WIDTH( 8 ),
    .din156_WIDTH( 8 ),
    .din157_WIDTH( 8 ),
    .din158_WIDTH( 8 ),
    .din159_WIDTH( 8 ),
    .din160_WIDTH( 8 ),
    .din161_WIDTH( 8 ),
    .din162_WIDTH( 8 ),
    .din163_WIDTH( 8 ),
    .din164_WIDTH( 8 ),
    .din165_WIDTH( 8 ),
    .din166_WIDTH( 8 ),
    .din167_WIDTH( 8 ),
    .din168_WIDTH( 8 ),
    .din169_WIDTH( 8 ),
    .din170_WIDTH( 8 ),
    .din171_WIDTH( 8 ),
    .din172_WIDTH( 8 ),
    .din173_WIDTH( 8 ),
    .din174_WIDTH( 8 ),
    .din175_WIDTH( 8 ),
    .din176_WIDTH( 8 ),
    .din177_WIDTH( 8 ),
    .din178_WIDTH( 8 ),
    .din179_WIDTH( 8 ),
    .din180_WIDTH( 8 ),
    .din181_WIDTH( 8 ),
    .din182_WIDTH( 8 ),
    .din183_WIDTH( 8 ),
    .din184_WIDTH( 8 ),
    .din185_WIDTH( 8 ),
    .din186_WIDTH( 8 ),
    .din187_WIDTH( 8 ),
    .din188_WIDTH( 8 ),
    .din189_WIDTH( 8 ),
    .din190_WIDTH( 8 ),
    .din191_WIDTH( 8 ),
    .din192_WIDTH( 8 ),
    .din193_WIDTH( 8 ),
    .din194_WIDTH( 8 ),
    .din195_WIDTH( 8 ),
    .din196_WIDTH( 8 ),
    .din197_WIDTH( 8 ),
    .din198_WIDTH( 8 ),
    .din199_WIDTH( 8 ),
    .din200_WIDTH( 8 ),
    .din201_WIDTH( 8 ),
    .din202_WIDTH( 8 ),
    .din203_WIDTH( 8 ),
    .din204_WIDTH( 8 ),
    .din205_WIDTH( 8 ),
    .din206_WIDTH( 8 ),
    .din207_WIDTH( 8 ),
    .din208_WIDTH( 8 ),
    .din209_WIDTH( 8 ),
    .din210_WIDTH( 8 ),
    .din211_WIDTH( 8 ),
    .din212_WIDTH( 8 ),
    .din213_WIDTH( 8 ),
    .din214_WIDTH( 8 ),
    .din215_WIDTH( 8 ),
    .din216_WIDTH( 8 ),
    .din217_WIDTH( 8 ),
    .din218_WIDTH( 8 ),
    .din219_WIDTH( 8 ),
    .din220_WIDTH( 8 ),
    .din221_WIDTH( 8 ),
    .din222_WIDTH( 8 ),
    .din223_WIDTH( 8 ),
    .din224_WIDTH( 8 ),
    .din225_WIDTH( 8 ),
    .din226_WIDTH( 8 ),
    .din227_WIDTH( 8 ),
    .din228_WIDTH( 8 ),
    .din229_WIDTH( 8 ),
    .din230_WIDTH( 8 ),
    .din231_WIDTH( 8 ),
    .din232_WIDTH( 8 ),
    .din233_WIDTH( 8 ),
    .din234_WIDTH( 8 ),
    .din235_WIDTH( 8 ),
    .din236_WIDTH( 8 ),
    .din237_WIDTH( 8 ),
    .din238_WIDTH( 8 ),
    .din239_WIDTH( 8 ),
    .din240_WIDTH( 8 ),
    .din241_WIDTH( 8 ),
    .din242_WIDTH( 8 ),
    .din243_WIDTH( 8 ),
    .din244_WIDTH( 8 ),
    .din245_WIDTH( 8 ),
    .din246_WIDTH( 8 ),
    .din247_WIDTH( 8 ),
    .din248_WIDTH( 8 ),
    .din249_WIDTH( 8 ),
    .din250_WIDTH( 8 ),
    .din251_WIDTH( 8 ),
    .din252_WIDTH( 8 ),
    .din253_WIDTH( 8 ),
    .din254_WIDTH( 8 ),
    .din255_WIDTH( 8 ),
    .din256_WIDTH( 8 ),
    .din257_WIDTH( 8 ),
    .din258_WIDTH( 8 ),
    .din259_WIDTH( 8 ),
    .din260_WIDTH( 8 ),
    .din261_WIDTH( 8 ),
    .din262_WIDTH( 8 ),
    .din263_WIDTH( 8 ),
    .din264_WIDTH( 8 ),
    .din265_WIDTH( 8 ),
    .din266_WIDTH( 8 ),
    .din267_WIDTH( 8 ),
    .din268_WIDTH( 8 ),
    .din269_WIDTH( 8 ),
    .din270_WIDTH( 8 ),
    .din271_WIDTH( 8 ),
    .din272_WIDTH( 8 ),
    .din273_WIDTH( 8 ),
    .din274_WIDTH( 8 ),
    .din275_WIDTH( 8 ),
    .din276_WIDTH( 8 ),
    .din277_WIDTH( 8 ),
    .din278_WIDTH( 8 ),
    .din279_WIDTH( 8 ),
    .din280_WIDTH( 8 ),
    .din281_WIDTH( 8 ),
    .din282_WIDTH( 8 ),
    .din283_WIDTH( 8 ),
    .din284_WIDTH( 8 ),
    .din285_WIDTH( 8 ),
    .din286_WIDTH( 8 ),
    .din287_WIDTH( 8 ),
    .din288_WIDTH( 8 ),
    .din289_WIDTH( 8 ),
    .din290_WIDTH( 8 ),
    .din291_WIDTH( 8 ),
    .din292_WIDTH( 8 ),
    .din293_WIDTH( 8 ),
    .din294_WIDTH( 8 ),
    .din295_WIDTH( 8 ),
    .din296_WIDTH( 8 ),
    .din297_WIDTH( 8 ),
    .din298_WIDTH( 8 ),
    .din299_WIDTH( 8 ),
    .din300_WIDTH( 8 ),
    .din301_WIDTH( 8 ),
    .din302_WIDTH( 8 ),
    .din303_WIDTH( 8 ),
    .din304_WIDTH( 8 ),
    .din305_WIDTH( 8 ),
    .din306_WIDTH( 8 ),
    .din307_WIDTH( 8 ),
    .din308_WIDTH( 8 ),
    .din309_WIDTH( 8 ),
    .din310_WIDTH( 8 ),
    .din311_WIDTH( 8 ),
    .din312_WIDTH( 8 ),
    .din313_WIDTH( 8 ),
    .din314_WIDTH( 8 ),
    .din315_WIDTH( 8 ),
    .din316_WIDTH( 8 ),
    .din317_WIDTH( 8 ),
    .din318_WIDTH( 8 ),
    .din319_WIDTH( 8 ),
    .din320_WIDTH( 8 ),
    .din321_WIDTH( 8 ),
    .din322_WIDTH( 8 ),
    .din323_WIDTH( 8 ),
    .din324_WIDTH( 8 ),
    .din325_WIDTH( 8 ),
    .din326_WIDTH( 8 ),
    .din327_WIDTH( 8 ),
    .din328_WIDTH( 8 ),
    .din329_WIDTH( 8 ),
    .din330_WIDTH( 8 ),
    .din331_WIDTH( 8 ),
    .din332_WIDTH( 8 ),
    .din333_WIDTH( 8 ),
    .din334_WIDTH( 8 ),
    .din335_WIDTH( 8 ),
    .din336_WIDTH( 8 ),
    .din337_WIDTH( 8 ),
    .din338_WIDTH( 8 ),
    .din339_WIDTH( 8 ),
    .din340_WIDTH( 8 ),
    .din341_WIDTH( 8 ),
    .din342_WIDTH( 8 ),
    .din343_WIDTH( 8 ),
    .din344_WIDTH( 8 ),
    .din345_WIDTH( 8 ),
    .din346_WIDTH( 8 ),
    .din347_WIDTH( 8 ),
    .din348_WIDTH( 8 ),
    .din349_WIDTH( 8 ),
    .din350_WIDTH( 8 ),
    .din351_WIDTH( 8 ),
    .din352_WIDTH( 8 ),
    .din353_WIDTH( 8 ),
    .din354_WIDTH( 8 ),
    .din355_WIDTH( 8 ),
    .din356_WIDTH( 8 ),
    .din357_WIDTH( 8 ),
    .din358_WIDTH( 8 ),
    .din359_WIDTH( 8 ),
    .din360_WIDTH( 8 ),
    .din361_WIDTH( 8 ),
    .din362_WIDTH( 8 ),
    .din363_WIDTH( 8 ),
    .din364_WIDTH( 8 ),
    .din365_WIDTH( 8 ),
    .din366_WIDTH( 8 ),
    .din367_WIDTH( 8 ),
    .din368_WIDTH( 8 ),
    .din369_WIDTH( 8 ),
    .din370_WIDTH( 8 ),
    .din371_WIDTH( 8 ),
    .din372_WIDTH( 8 ),
    .din373_WIDTH( 8 ),
    .din374_WIDTH( 8 ),
    .din375_WIDTH( 8 ),
    .din376_WIDTH( 8 ),
    .din377_WIDTH( 8 ),
    .din378_WIDTH( 8 ),
    .din379_WIDTH( 8 ),
    .din380_WIDTH( 8 ),
    .din381_WIDTH( 8 ),
    .din382_WIDTH( 8 ),
    .din383_WIDTH( 8 ),
    .din384_WIDTH( 8 ),
    .din385_WIDTH( 8 ),
    .din386_WIDTH( 8 ),
    .din387_WIDTH( 8 ),
    .din388_WIDTH( 8 ),
    .din389_WIDTH( 8 ),
    .din390_WIDTH( 8 ),
    .din391_WIDTH( 8 ),
    .din392_WIDTH( 8 ),
    .din393_WIDTH( 8 ),
    .din394_WIDTH( 8 ),
    .din395_WIDTH( 8 ),
    .din396_WIDTH( 8 ),
    .din397_WIDTH( 8 ),
    .din398_WIDTH( 8 ),
    .din399_WIDTH( 8 ),
    .din400_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_4009_8_1_1_U10(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(ref_patch_with_borde_401),
    .din11(ref_patch_with_borde_402),
    .din12(ref_patch_with_borde_403),
    .din13(ref_patch_with_borde_404),
    .din14(ref_patch_with_borde_405),
    .din15(ref_patch_with_borde_406),
    .din16(ref_patch_with_borde_407),
    .din17(ref_patch_with_borde_408),
    .din18(ref_patch_with_borde_409),
    .din19(ref_patch_with_borde_410),
    .din20(ref_patch_with_borde_412),
    .din21(ref_patch_with_borde_413),
    .din22(ref_patch_with_borde_414),
    .din23(ref_patch_with_borde_415),
    .din24(ref_patch_with_borde_416),
    .din25(ref_patch_with_borde_417),
    .din26(ref_patch_with_borde_418),
    .din27(ref_patch_with_borde_419),
    .din28(ref_patch_with_borde_420),
    .din29(ref_patch_with_borde_421),
    .din30(ref_patch_with_borde_423),
    .din31(ref_patch_with_borde_424),
    .din32(ref_patch_with_borde_425),
    .din33(ref_patch_with_borde_426),
    .din34(ref_patch_with_borde_427),
    .din35(ref_patch_with_borde_428),
    .din36(ref_patch_with_borde_429),
    .din37(ref_patch_with_borde_430),
    .din38(ref_patch_with_borde_431),
    .din39(ref_patch_with_borde_432),
    .din40(ref_patch_with_borde_434),
    .din41(ref_patch_with_borde_435),
    .din42(ref_patch_with_borde_436),
    .din43(ref_patch_with_borde_437),
    .din44(ref_patch_with_borde_438),
    .din45(ref_patch_with_borde_439),
    .din46(ref_patch_with_borde_440),
    .din47(ref_patch_with_borde_441),
    .din48(ref_patch_with_borde_442),
    .din49(ref_patch_with_borde_443),
    .din50(ref_patch_with_borde_445),
    .din51(ref_patch_with_borde_446),
    .din52(ref_patch_with_borde_447),
    .din53(ref_patch_with_borde_448),
    .din54(ref_patch_with_borde_449),
    .din55(ref_patch_with_borde_450),
    .din56(ref_patch_with_borde_451),
    .din57(ref_patch_with_borde_452),
    .din58(ref_patch_with_borde_453),
    .din59(ref_patch_with_borde_454),
    .din60(ref_patch_with_borde_456),
    .din61(ref_patch_with_borde_457),
    .din62(ref_patch_with_borde_458),
    .din63(ref_patch_with_borde_459),
    .din64(ref_patch_with_borde_460),
    .din65(ref_patch_with_borde_461),
    .din66(ref_patch_with_borde_462),
    .din67(ref_patch_with_borde_463),
    .din68(ref_patch_with_borde_464),
    .din69(ref_patch_with_borde_465),
    .din70(ref_patch_with_borde_467),
    .din71(ref_patch_with_borde_468),
    .din72(ref_patch_with_borde_469),
    .din73(ref_patch_with_borde_470),
    .din74(ref_patch_with_borde_471),
    .din75(ref_patch_with_borde_472),
    .din76(ref_patch_with_borde_473),
    .din77(ref_patch_with_borde_474),
    .din78(ref_patch_with_borde_475),
    .din79(ref_patch_with_borde_476),
    .din80(ref_patch_with_borde_478),
    .din81(ref_patch_with_borde_479),
    .din82(ref_patch_with_borde_480),
    .din83(ref_patch_with_borde_481),
    .din84(ref_patch_with_borde_482),
    .din85(ref_patch_with_borde_483),
    .din86(ref_patch_with_borde_484),
    .din87(ref_patch_with_borde_485),
    .din88(8'd0),
    .din89(8'd0),
    .din90(8'd0),
    .din91(8'd0),
    .din92(8'd0),
    .din93(8'd0),
    .din94(8'd0),
    .din95(8'd0),
    .din96(8'd0),
    .din97(8'd0),
    .din98(8'd0),
    .din99(8'd0),
    .din100(8'd0),
    .din101(8'd0),
    .din102(8'd0),
    .din103(8'd0),
    .din104(8'd0),
    .din105(8'd0),
    .din106(8'd0),
    .din107(8'd0),
    .din108(8'd0),
    .din109(8'd0),
    .din110(ref_patch_with_borde_501),
    .din111(ref_patch_with_borde_502),
    .din112(ref_patch_with_borde_503),
    .din113(ref_patch_with_borde_504),
    .din114(ref_patch_with_borde_505),
    .din115(ref_patch_with_borde_506),
    .din116(ref_patch_with_borde_507),
    .din117(ref_patch_with_borde_508),
    .din118(ref_patch_with_borde_509),
    .din119(ref_patch_with_borde_510),
    .din120(ref_patch_with_borde_512),
    .din121(ref_patch_with_borde_513),
    .din122(ref_patch_with_borde_514),
    .din123(ref_patch_with_borde_515),
    .din124(ref_patch_with_borde_516),
    .din125(ref_patch_with_borde_517),
    .din126(ref_patch_with_borde_518),
    .din127(ref_patch_with_borde_519),
    .din128(ref_patch_with_borde_520),
    .din129(ref_patch_with_borde_521),
    .din130(ref_patch_with_borde_523),
    .din131(ref_patch_with_borde_524),
    .din132(ref_patch_with_borde_525),
    .din133(ref_patch_with_borde_526),
    .din134(ref_patch_with_borde_527),
    .din135(ref_patch_with_borde_528),
    .din136(ref_patch_with_borde_529),
    .din137(ref_patch_with_borde_530),
    .din138(ref_patch_with_borde_531),
    .din139(ref_patch_with_borde_532),
    .din140(ref_patch_with_borde_534),
    .din141(ref_patch_with_borde_535),
    .din142(ref_patch_with_borde_536),
    .din143(ref_patch_with_borde_537),
    .din144(ref_patch_with_borde_538),
    .din145(ref_patch_with_borde_539),
    .din146(ref_patch_with_borde_540),
    .din147(ref_patch_with_borde_541),
    .din148(ref_patch_with_borde_542),
    .din149(ref_patch_with_borde_543),
    .din150(ref_patch_with_borde_545),
    .din151(ref_patch_with_borde_546),
    .din152(ref_patch_with_borde_547),
    .din153(ref_patch_with_borde_548),
    .din154(ref_patch_with_borde_549),
    .din155(ref_patch_with_borde_550),
    .din156(ref_patch_with_borde_551),
    .din157(ref_patch_with_borde_552),
    .din158(ref_patch_with_borde_553),
    .din159(ref_patch_with_borde_554),
    .din160(ref_patch_with_borde_556),
    .din161(ref_patch_with_borde_557),
    .din162(ref_patch_with_borde_558),
    .din163(ref_patch_with_borde_559),
    .din164(ref_patch_with_borde_560),
    .din165(ref_patch_with_borde_561),
    .din166(ref_patch_with_borde_562),
    .din167(ref_patch_with_borde_563),
    .din168(ref_patch_with_borde_564),
    .din169(ref_patch_with_borde_565),
    .din170(ref_patch_with_borde_567),
    .din171(ref_patch_with_borde_568),
    .din172(ref_patch_with_borde_569),
    .din173(ref_patch_with_borde_570),
    .din174(ref_patch_with_borde_571),
    .din175(ref_patch_with_borde_572),
    .din176(ref_patch_with_borde_573),
    .din177(ref_patch_with_borde_574),
    .din178(ref_patch_with_borde_575),
    .din179(ref_patch_with_borde_576),
    .din180(ref_patch_with_borde_578),
    .din181(ref_patch_with_borde_579),
    .din182(ref_patch_with_borde_580),
    .din183(ref_patch_with_borde_581),
    .din184(ref_patch_with_borde_582),
    .din185(ref_patch_with_borde_583),
    .din186(ref_patch_with_borde_584),
    .din187(ref_patch_with_borde_585),
    .din188(8'd0),
    .din189(8'd0),
    .din190(8'd0),
    .din191(8'd0),
    .din192(8'd0),
    .din193(8'd0),
    .din194(8'd0),
    .din195(8'd0),
    .din196(8'd0),
    .din197(8'd0),
    .din198(8'd0),
    .din199(8'd0),
    .din200(8'd0),
    .din201(8'd0),
    .din202(8'd0),
    .din203(8'd0),
    .din204(8'd0),
    .din205(8'd0),
    .din206(8'd0),
    .din207(8'd0),
    .din208(8'd0),
    .din209(8'd0),
    .din210(ref_patch_with_borde_601),
    .din211(ref_patch_with_borde_602),
    .din212(ref_patch_with_borde_603),
    .din213(ref_patch_with_borde_604),
    .din214(ref_patch_with_borde_605),
    .din215(ref_patch_with_borde_606),
    .din216(ref_patch_with_borde_607),
    .din217(ref_patch_with_borde_608),
    .din218(ref_patch_with_borde_609),
    .din219(ref_patch_with_borde_610),
    .din220(ref_patch_with_borde_612),
    .din221(ref_patch_with_borde_613),
    .din222(ref_patch_with_borde_614),
    .din223(ref_patch_with_borde_615),
    .din224(ref_patch_with_borde_616),
    .din225(ref_patch_with_borde_617),
    .din226(ref_patch_with_borde_618),
    .din227(ref_patch_with_borde_619),
    .din228(ref_patch_with_borde_620),
    .din229(ref_patch_with_borde_621),
    .din230(ref_patch_with_borde_623),
    .din231(ref_patch_with_borde_624),
    .din232(ref_patch_with_borde_625),
    .din233(ref_patch_with_borde_626),
    .din234(ref_patch_with_borde_627),
    .din235(ref_patch_with_borde_628),
    .din236(ref_patch_with_borde_629),
    .din237(ref_patch_with_borde_630),
    .din238(ref_patch_with_borde_631),
    .din239(ref_patch_with_borde_632),
    .din240(ref_patch_with_borde_634),
    .din241(ref_patch_with_borde_635),
    .din242(ref_patch_with_borde_636),
    .din243(ref_patch_with_borde_637),
    .din244(ref_patch_with_borde_638),
    .din245(ref_patch_with_borde_639),
    .din246(ref_patch_with_borde_640),
    .din247(ref_patch_with_borde_641),
    .din248(ref_patch_with_borde_642),
    .din249(ref_patch_with_borde_643),
    .din250(ref_patch_with_borde_645),
    .din251(ref_patch_with_borde_646),
    .din252(ref_patch_with_borde_647),
    .din253(ref_patch_with_borde_648),
    .din254(ref_patch_with_borde_649),
    .din255(ref_patch_with_borde_650),
    .din256(ref_patch_with_borde_651),
    .din257(ref_patch_with_borde_652),
    .din258(ref_patch_with_borde_653),
    .din259(ref_patch_with_borde_654),
    .din260(ref_patch_with_borde_656),
    .din261(ref_patch_with_borde_657),
    .din262(ref_patch_with_borde_658),
    .din263(ref_patch_with_borde_659),
    .din264(ref_patch_with_borde_660),
    .din265(ref_patch_with_borde_661),
    .din266(ref_patch_with_borde_662),
    .din267(ref_patch_with_borde_663),
    .din268(ref_patch_with_borde_664),
    .din269(ref_patch_with_borde_665),
    .din270(ref_patch_with_borde_667),
    .din271(ref_patch_with_borde_668),
    .din272(ref_patch_with_borde_669),
    .din273(ref_patch_with_borde_670),
    .din274(ref_patch_with_borde_671),
    .din275(ref_patch_with_borde_672),
    .din276(ref_patch_with_borde_673),
    .din277(ref_patch_with_borde_674),
    .din278(ref_patch_with_borde_675),
    .din279(ref_patch_with_borde_676),
    .din280(ref_patch_with_borde_678),
    .din281(ref_patch_with_borde_679),
    .din282(ref_patch_with_borde_680),
    .din283(ref_patch_with_borde_681),
    .din284(ref_patch_with_borde_682),
    .din285(ref_patch_with_borde_683),
    .din286(ref_patch_with_borde_684),
    .din287(ref_patch_with_borde_685),
    .din288(8'd0),
    .din289(8'd0),
    .din290(8'd0),
    .din291(8'd0),
    .din292(8'd0),
    .din293(8'd0),
    .din294(8'd0),
    .din295(8'd0),
    .din296(8'd0),
    .din297(8'd0),
    .din298(8'd0),
    .din299(8'd0),
    .din300(8'd0),
    .din301(8'd0),
    .din302(8'd0),
    .din303(8'd0),
    .din304(8'd0),
    .din305(8'd0),
    .din306(8'd0),
    .din307(8'd0),
    .din308(8'd0),
    .din309(8'd0),
    .din310(ref_patch_with_borde_97),
    .din311(ref_patch_with_borde_96),
    .din312(ref_patch_with_borde_95),
    .din313(ref_patch_with_borde_94),
    .din314(ref_patch_with_borde_93),
    .din315(ref_patch_with_borde_92),
    .din316(ref_patch_with_borde_91),
    .din317(ref_patch_with_borde_90),
    .din318(ref_patch_with_borde_89),
    .din319(ref_patch_with_borde_88),
    .din320(ref_patch_with_borde_86),
    .din321(ref_patch_with_borde_85),
    .din322(ref_patch_with_borde_84),
    .din323(ref_patch_with_borde_83),
    .din324(ref_patch_with_borde_82),
    .din325(ref_patch_with_borde_81),
    .din326(ref_patch_with_borde_80),
    .din327(ref_patch_with_borde_79),
    .din328(ref_patch_with_borde_78),
    .din329(ref_patch_with_borde_77),
    .din330(ref_patch_with_borde_75),
    .din331(ref_patch_with_borde_74),
    .din332(ref_patch_with_borde_73),
    .din333(ref_patch_with_borde_72),
    .din334(ref_patch_with_borde_71),
    .din335(ref_patch_with_borde_70),
    .din336(ref_patch_with_borde_69),
    .din337(ref_patch_with_borde_68),
    .din338(ref_patch_with_borde_67),
    .din339(ref_patch_with_borde_66),
    .din340(ref_patch_with_borde_64),
    .din341(ref_patch_with_borde_63),
    .din342(ref_patch_with_borde_62),
    .din343(ref_patch_with_borde_61),
    .din344(ref_patch_with_borde_60),
    .din345(ref_patch_with_borde_59),
    .din346(ref_patch_with_borde_58),
    .din347(ref_patch_with_borde_57),
    .din348(ref_patch_with_borde_56),
    .din349(ref_patch_with_borde_55),
    .din350(ref_patch_with_borde_53),
    .din351(ref_patch_with_borde_52),
    .din352(ref_patch_with_borde_51),
    .din353(ref_patch_with_borde_50),
    .din354(ref_patch_with_borde_49),
    .din355(ref_patch_with_borde_48),
    .din356(ref_patch_with_borde_47),
    .din357(ref_patch_with_borde_46),
    .din358(ref_patch_with_borde_45),
    .din359(ref_patch_with_borde_44),
    .din360(ref_patch_with_borde_42),
    .din361(ref_patch_with_borde_41),
    .din362(ref_patch_with_borde_40),
    .din363(ref_patch_with_borde_39),
    .din364(ref_patch_with_borde_38),
    .din365(ref_patch_with_borde_37),
    .din366(ref_patch_with_borde_36),
    .din367(ref_patch_with_borde_35),
    .din368(ref_patch_with_borde_34),
    .din369(ref_patch_with_borde_33),
    .din370(ref_patch_with_borde_31),
    .din371(ref_patch_with_borde_30),
    .din372(ref_patch_with_borde_29),
    .din373(ref_patch_with_borde_28),
    .din374(ref_patch_with_borde_27),
    .din375(ref_patch_with_borde_26),
    .din376(ref_patch_with_borde_25),
    .din377(ref_patch_with_borde_24),
    .din378(ref_patch_with_borde_23),
    .din379(ref_patch_with_borde_22),
    .din380(ref_patch_with_borde_20),
    .din381(ref_patch_with_borde_19),
    .din382(ref_patch_with_borde_18),
    .din383(ref_patch_with_borde_17),
    .din384(ref_patch_with_borde_16),
    .din385(ref_patch_with_borde_15),
    .din386(ref_patch_with_borde_14),
    .din387(ref_patch_with_borde_13),
    .din388(8'd0),
    .din389(8'd0),
    .din390(8'd0),
    .din391(8'd0),
    .din392(8'd0),
    .din393(8'd0),
    .din394(8'd0),
    .din395(8'd0),
    .din396(8'd0),
    .din397(8'd0),
    .din398(8'd0),
    .din399(8'd0),
    .din400(tmp_54_fu_6661_p401),
    .dout(tmp_54_fu_6661_p402)
);

batch_align2D_mux_4009_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 8 ),
    .din101_WIDTH( 8 ),
    .din102_WIDTH( 8 ),
    .din103_WIDTH( 8 ),
    .din104_WIDTH( 8 ),
    .din105_WIDTH( 8 ),
    .din106_WIDTH( 8 ),
    .din107_WIDTH( 8 ),
    .din108_WIDTH( 8 ),
    .din109_WIDTH( 8 ),
    .din110_WIDTH( 8 ),
    .din111_WIDTH( 8 ),
    .din112_WIDTH( 8 ),
    .din113_WIDTH( 8 ),
    .din114_WIDTH( 8 ),
    .din115_WIDTH( 8 ),
    .din116_WIDTH( 8 ),
    .din117_WIDTH( 8 ),
    .din118_WIDTH( 8 ),
    .din119_WIDTH( 8 ),
    .din120_WIDTH( 8 ),
    .din121_WIDTH( 8 ),
    .din122_WIDTH( 8 ),
    .din123_WIDTH( 8 ),
    .din124_WIDTH( 8 ),
    .din125_WIDTH( 8 ),
    .din126_WIDTH( 8 ),
    .din127_WIDTH( 8 ),
    .din128_WIDTH( 8 ),
    .din129_WIDTH( 8 ),
    .din130_WIDTH( 8 ),
    .din131_WIDTH( 8 ),
    .din132_WIDTH( 8 ),
    .din133_WIDTH( 8 ),
    .din134_WIDTH( 8 ),
    .din135_WIDTH( 8 ),
    .din136_WIDTH( 8 ),
    .din137_WIDTH( 8 ),
    .din138_WIDTH( 8 ),
    .din139_WIDTH( 8 ),
    .din140_WIDTH( 8 ),
    .din141_WIDTH( 8 ),
    .din142_WIDTH( 8 ),
    .din143_WIDTH( 8 ),
    .din144_WIDTH( 8 ),
    .din145_WIDTH( 8 ),
    .din146_WIDTH( 8 ),
    .din147_WIDTH( 8 ),
    .din148_WIDTH( 8 ),
    .din149_WIDTH( 8 ),
    .din150_WIDTH( 8 ),
    .din151_WIDTH( 8 ),
    .din152_WIDTH( 8 ),
    .din153_WIDTH( 8 ),
    .din154_WIDTH( 8 ),
    .din155_WIDTH( 8 ),
    .din156_WIDTH( 8 ),
    .din157_WIDTH( 8 ),
    .din158_WIDTH( 8 ),
    .din159_WIDTH( 8 ),
    .din160_WIDTH( 8 ),
    .din161_WIDTH( 8 ),
    .din162_WIDTH( 8 ),
    .din163_WIDTH( 8 ),
    .din164_WIDTH( 8 ),
    .din165_WIDTH( 8 ),
    .din166_WIDTH( 8 ),
    .din167_WIDTH( 8 ),
    .din168_WIDTH( 8 ),
    .din169_WIDTH( 8 ),
    .din170_WIDTH( 8 ),
    .din171_WIDTH( 8 ),
    .din172_WIDTH( 8 ),
    .din173_WIDTH( 8 ),
    .din174_WIDTH( 8 ),
    .din175_WIDTH( 8 ),
    .din176_WIDTH( 8 ),
    .din177_WIDTH( 8 ),
    .din178_WIDTH( 8 ),
    .din179_WIDTH( 8 ),
    .din180_WIDTH( 8 ),
    .din181_WIDTH( 8 ),
    .din182_WIDTH( 8 ),
    .din183_WIDTH( 8 ),
    .din184_WIDTH( 8 ),
    .din185_WIDTH( 8 ),
    .din186_WIDTH( 8 ),
    .din187_WIDTH( 8 ),
    .din188_WIDTH( 8 ),
    .din189_WIDTH( 8 ),
    .din190_WIDTH( 8 ),
    .din191_WIDTH( 8 ),
    .din192_WIDTH( 8 ),
    .din193_WIDTH( 8 ),
    .din194_WIDTH( 8 ),
    .din195_WIDTH( 8 ),
    .din196_WIDTH( 8 ),
    .din197_WIDTH( 8 ),
    .din198_WIDTH( 8 ),
    .din199_WIDTH( 8 ),
    .din200_WIDTH( 8 ),
    .din201_WIDTH( 8 ),
    .din202_WIDTH( 8 ),
    .din203_WIDTH( 8 ),
    .din204_WIDTH( 8 ),
    .din205_WIDTH( 8 ),
    .din206_WIDTH( 8 ),
    .din207_WIDTH( 8 ),
    .din208_WIDTH( 8 ),
    .din209_WIDTH( 8 ),
    .din210_WIDTH( 8 ),
    .din211_WIDTH( 8 ),
    .din212_WIDTH( 8 ),
    .din213_WIDTH( 8 ),
    .din214_WIDTH( 8 ),
    .din215_WIDTH( 8 ),
    .din216_WIDTH( 8 ),
    .din217_WIDTH( 8 ),
    .din218_WIDTH( 8 ),
    .din219_WIDTH( 8 ),
    .din220_WIDTH( 8 ),
    .din221_WIDTH( 8 ),
    .din222_WIDTH( 8 ),
    .din223_WIDTH( 8 ),
    .din224_WIDTH( 8 ),
    .din225_WIDTH( 8 ),
    .din226_WIDTH( 8 ),
    .din227_WIDTH( 8 ),
    .din228_WIDTH( 8 ),
    .din229_WIDTH( 8 ),
    .din230_WIDTH( 8 ),
    .din231_WIDTH( 8 ),
    .din232_WIDTH( 8 ),
    .din233_WIDTH( 8 ),
    .din234_WIDTH( 8 ),
    .din235_WIDTH( 8 ),
    .din236_WIDTH( 8 ),
    .din237_WIDTH( 8 ),
    .din238_WIDTH( 8 ),
    .din239_WIDTH( 8 ),
    .din240_WIDTH( 8 ),
    .din241_WIDTH( 8 ),
    .din242_WIDTH( 8 ),
    .din243_WIDTH( 8 ),
    .din244_WIDTH( 8 ),
    .din245_WIDTH( 8 ),
    .din246_WIDTH( 8 ),
    .din247_WIDTH( 8 ),
    .din248_WIDTH( 8 ),
    .din249_WIDTH( 8 ),
    .din250_WIDTH( 8 ),
    .din251_WIDTH( 8 ),
    .din252_WIDTH( 8 ),
    .din253_WIDTH( 8 ),
    .din254_WIDTH( 8 ),
    .din255_WIDTH( 8 ),
    .din256_WIDTH( 8 ),
    .din257_WIDTH( 8 ),
    .din258_WIDTH( 8 ),
    .din259_WIDTH( 8 ),
    .din260_WIDTH( 8 ),
    .din261_WIDTH( 8 ),
    .din262_WIDTH( 8 ),
    .din263_WIDTH( 8 ),
    .din264_WIDTH( 8 ),
    .din265_WIDTH( 8 ),
    .din266_WIDTH( 8 ),
    .din267_WIDTH( 8 ),
    .din268_WIDTH( 8 ),
    .din269_WIDTH( 8 ),
    .din270_WIDTH( 8 ),
    .din271_WIDTH( 8 ),
    .din272_WIDTH( 8 ),
    .din273_WIDTH( 8 ),
    .din274_WIDTH( 8 ),
    .din275_WIDTH( 8 ),
    .din276_WIDTH( 8 ),
    .din277_WIDTH( 8 ),
    .din278_WIDTH( 8 ),
    .din279_WIDTH( 8 ),
    .din280_WIDTH( 8 ),
    .din281_WIDTH( 8 ),
    .din282_WIDTH( 8 ),
    .din283_WIDTH( 8 ),
    .din284_WIDTH( 8 ),
    .din285_WIDTH( 8 ),
    .din286_WIDTH( 8 ),
    .din287_WIDTH( 8 ),
    .din288_WIDTH( 8 ),
    .din289_WIDTH( 8 ),
    .din290_WIDTH( 8 ),
    .din291_WIDTH( 8 ),
    .din292_WIDTH( 8 ),
    .din293_WIDTH( 8 ),
    .din294_WIDTH( 8 ),
    .din295_WIDTH( 8 ),
    .din296_WIDTH( 8 ),
    .din297_WIDTH( 8 ),
    .din298_WIDTH( 8 ),
    .din299_WIDTH( 8 ),
    .din300_WIDTH( 8 ),
    .din301_WIDTH( 8 ),
    .din302_WIDTH( 8 ),
    .din303_WIDTH( 8 ),
    .din304_WIDTH( 8 ),
    .din305_WIDTH( 8 ),
    .din306_WIDTH( 8 ),
    .din307_WIDTH( 8 ),
    .din308_WIDTH( 8 ),
    .din309_WIDTH( 8 ),
    .din310_WIDTH( 8 ),
    .din311_WIDTH( 8 ),
    .din312_WIDTH( 8 ),
    .din313_WIDTH( 8 ),
    .din314_WIDTH( 8 ),
    .din315_WIDTH( 8 ),
    .din316_WIDTH( 8 ),
    .din317_WIDTH( 8 ),
    .din318_WIDTH( 8 ),
    .din319_WIDTH( 8 ),
    .din320_WIDTH( 8 ),
    .din321_WIDTH( 8 ),
    .din322_WIDTH( 8 ),
    .din323_WIDTH( 8 ),
    .din324_WIDTH( 8 ),
    .din325_WIDTH( 8 ),
    .din326_WIDTH( 8 ),
    .din327_WIDTH( 8 ),
    .din328_WIDTH( 8 ),
    .din329_WIDTH( 8 ),
    .din330_WIDTH( 8 ),
    .din331_WIDTH( 8 ),
    .din332_WIDTH( 8 ),
    .din333_WIDTH( 8 ),
    .din334_WIDTH( 8 ),
    .din335_WIDTH( 8 ),
    .din336_WIDTH( 8 ),
    .din337_WIDTH( 8 ),
    .din338_WIDTH( 8 ),
    .din339_WIDTH( 8 ),
    .din340_WIDTH( 8 ),
    .din341_WIDTH( 8 ),
    .din342_WIDTH( 8 ),
    .din343_WIDTH( 8 ),
    .din344_WIDTH( 8 ),
    .din345_WIDTH( 8 ),
    .din346_WIDTH( 8 ),
    .din347_WIDTH( 8 ),
    .din348_WIDTH( 8 ),
    .din349_WIDTH( 8 ),
    .din350_WIDTH( 8 ),
    .din351_WIDTH( 8 ),
    .din352_WIDTH( 8 ),
    .din353_WIDTH( 8 ),
    .din354_WIDTH( 8 ),
    .din355_WIDTH( 8 ),
    .din356_WIDTH( 8 ),
    .din357_WIDTH( 8 ),
    .din358_WIDTH( 8 ),
    .din359_WIDTH( 8 ),
    .din360_WIDTH( 8 ),
    .din361_WIDTH( 8 ),
    .din362_WIDTH( 8 ),
    .din363_WIDTH( 8 ),
    .din364_WIDTH( 8 ),
    .din365_WIDTH( 8 ),
    .din366_WIDTH( 8 ),
    .din367_WIDTH( 8 ),
    .din368_WIDTH( 8 ),
    .din369_WIDTH( 8 ),
    .din370_WIDTH( 8 ),
    .din371_WIDTH( 8 ),
    .din372_WIDTH( 8 ),
    .din373_WIDTH( 8 ),
    .din374_WIDTH( 8 ),
    .din375_WIDTH( 8 ),
    .din376_WIDTH( 8 ),
    .din377_WIDTH( 8 ),
    .din378_WIDTH( 8 ),
    .din379_WIDTH( 8 ),
    .din380_WIDTH( 8 ),
    .din381_WIDTH( 8 ),
    .din382_WIDTH( 8 ),
    .din383_WIDTH( 8 ),
    .din384_WIDTH( 8 ),
    .din385_WIDTH( 8 ),
    .din386_WIDTH( 8 ),
    .din387_WIDTH( 8 ),
    .din388_WIDTH( 8 ),
    .din389_WIDTH( 8 ),
    .din390_WIDTH( 8 ),
    .din391_WIDTH( 8 ),
    .din392_WIDTH( 8 ),
    .din393_WIDTH( 8 ),
    .din394_WIDTH( 8 ),
    .din395_WIDTH( 8 ),
    .din396_WIDTH( 8 ),
    .din397_WIDTH( 8 ),
    .din398_WIDTH( 8 ),
    .din399_WIDTH( 8 ),
    .din400_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_4009_8_1_1_U11(
    .din0(8'd0),
    .din1(8'd0),
    .din2(8'd0),
    .din3(8'd0),
    .din4(8'd0),
    .din5(8'd0),
    .din6(8'd0),
    .din7(8'd0),
    .din8(8'd0),
    .din9(8'd0),
    .din10(8'd0),
    .din11(8'd0),
    .din12(8'd0),
    .din13(8'd0),
    .din14(8'd0),
    .din15(8'd0),
    .din16(8'd0),
    .din17(8'd0),
    .din18(8'd0),
    .din19(8'd0),
    .din20(8'd0),
    .din21(ref_patch_with_borde_413),
    .din22(ref_patch_with_borde_414),
    .din23(ref_patch_with_borde_415),
    .din24(ref_patch_with_borde_416),
    .din25(ref_patch_with_borde_417),
    .din26(ref_patch_with_borde_418),
    .din27(ref_patch_with_borde_419),
    .din28(ref_patch_with_borde_420),
    .din29(ref_patch_with_borde_421),
    .din30(ref_patch_with_borde_423),
    .din31(ref_patch_with_borde_424),
    .din32(ref_patch_with_borde_425),
    .din33(ref_patch_with_borde_426),
    .din34(ref_patch_with_borde_427),
    .din35(ref_patch_with_borde_428),
    .din36(ref_patch_with_borde_429),
    .din37(ref_patch_with_borde_430),
    .din38(ref_patch_with_borde_431),
    .din39(ref_patch_with_borde_432),
    .din40(ref_patch_with_borde_434),
    .din41(ref_patch_with_borde_435),
    .din42(ref_patch_with_borde_436),
    .din43(ref_patch_with_borde_437),
    .din44(ref_patch_with_borde_438),
    .din45(ref_patch_with_borde_439),
    .din46(ref_patch_with_borde_440),
    .din47(ref_patch_with_borde_441),
    .din48(ref_patch_with_borde_442),
    .din49(ref_patch_with_borde_443),
    .din50(ref_patch_with_borde_445),
    .din51(ref_patch_with_borde_446),
    .din52(ref_patch_with_borde_447),
    .din53(ref_patch_with_borde_448),
    .din54(ref_patch_with_borde_449),
    .din55(ref_patch_with_borde_450),
    .din56(ref_patch_with_borde_451),
    .din57(ref_patch_with_borde_452),
    .din58(ref_patch_with_borde_453),
    .din59(ref_patch_with_borde_454),
    .din60(ref_patch_with_borde_456),
    .din61(ref_patch_with_borde_457),
    .din62(ref_patch_with_borde_458),
    .din63(ref_patch_with_borde_459),
    .din64(ref_patch_with_borde_460),
    .din65(ref_patch_with_borde_461),
    .din66(ref_patch_with_borde_462),
    .din67(ref_patch_with_borde_463),
    .din68(ref_patch_with_borde_464),
    .din69(ref_patch_with_borde_465),
    .din70(ref_patch_with_borde_467),
    .din71(ref_patch_with_borde_468),
    .din72(ref_patch_with_borde_469),
    .din73(ref_patch_with_borde_470),
    .din74(ref_patch_with_borde_471),
    .din75(ref_patch_with_borde_472),
    .din76(ref_patch_with_borde_473),
    .din77(ref_patch_with_borde_474),
    .din78(ref_patch_with_borde_475),
    .din79(ref_patch_with_borde_476),
    .din80(ref_patch_with_borde_478),
    .din81(ref_patch_with_borde_479),
    .din82(ref_patch_with_borde_480),
    .din83(ref_patch_with_borde_481),
    .din84(ref_patch_with_borde_482),
    .din85(ref_patch_with_borde_483),
    .din86(ref_patch_with_borde_484),
    .din87(ref_patch_with_borde_485),
    .din88(ref_patch_with_borde_486),
    .din89(ref_patch_with_borde_487),
    .din90(ref_patch_with_borde_489),
    .din91(ref_patch_with_borde_490),
    .din92(ref_patch_with_borde_491),
    .din93(ref_patch_with_borde_492),
    .din94(ref_patch_with_borde_493),
    .din95(ref_patch_with_borde_494),
    .din96(ref_patch_with_borde_495),
    .din97(ref_patch_with_borde_496),
    .din98(ref_patch_with_borde_497),
    .din99(8'd0),
    .din100(8'd0),
    .din101(8'd0),
    .din102(8'd0),
    .din103(8'd0),
    .din104(8'd0),
    .din105(8'd0),
    .din106(8'd0),
    .din107(8'd0),
    .din108(8'd0),
    .din109(8'd0),
    .din110(8'd0),
    .din111(8'd0),
    .din112(8'd0),
    .din113(8'd0),
    .din114(8'd0),
    .din115(8'd0),
    .din116(8'd0),
    .din117(8'd0),
    .din118(8'd0),
    .din119(8'd0),
    .din120(8'd0),
    .din121(ref_patch_with_borde_513),
    .din122(ref_patch_with_borde_514),
    .din123(ref_patch_with_borde_515),
    .din124(ref_patch_with_borde_516),
    .din125(ref_patch_with_borde_517),
    .din126(ref_patch_with_borde_518),
    .din127(ref_patch_with_borde_519),
    .din128(ref_patch_with_borde_520),
    .din129(ref_patch_with_borde_521),
    .din130(ref_patch_with_borde_523),
    .din131(ref_patch_with_borde_524),
    .din132(ref_patch_with_borde_525),
    .din133(ref_patch_with_borde_526),
    .din134(ref_patch_with_borde_527),
    .din135(ref_patch_with_borde_528),
    .din136(ref_patch_with_borde_529),
    .din137(ref_patch_with_borde_530),
    .din138(ref_patch_with_borde_531),
    .din139(ref_patch_with_borde_532),
    .din140(ref_patch_with_borde_534),
    .din141(ref_patch_with_borde_535),
    .din142(ref_patch_with_borde_536),
    .din143(ref_patch_with_borde_537),
    .din144(ref_patch_with_borde_538),
    .din145(ref_patch_with_borde_539),
    .din146(ref_patch_with_borde_540),
    .din147(ref_patch_with_borde_541),
    .din148(ref_patch_with_borde_542),
    .din149(ref_patch_with_borde_543),
    .din150(ref_patch_with_borde_545),
    .din151(ref_patch_with_borde_546),
    .din152(ref_patch_with_borde_547),
    .din153(ref_patch_with_borde_548),
    .din154(ref_patch_with_borde_549),
    .din155(ref_patch_with_borde_550),
    .din156(ref_patch_with_borde_551),
    .din157(ref_patch_with_borde_552),
    .din158(ref_patch_with_borde_553),
    .din159(ref_patch_with_borde_554),
    .din160(ref_patch_with_borde_556),
    .din161(ref_patch_with_borde_557),
    .din162(ref_patch_with_borde_558),
    .din163(ref_patch_with_borde_559),
    .din164(ref_patch_with_borde_560),
    .din165(ref_patch_with_borde_561),
    .din166(ref_patch_with_borde_562),
    .din167(ref_patch_with_borde_563),
    .din168(ref_patch_with_borde_564),
    .din169(ref_patch_with_borde_565),
    .din170(ref_patch_with_borde_567),
    .din171(ref_patch_with_borde_568),
    .din172(ref_patch_with_borde_569),
    .din173(ref_patch_with_borde_570),
    .din174(ref_patch_with_borde_571),
    .din175(ref_patch_with_borde_572),
    .din176(ref_patch_with_borde_573),
    .din177(ref_patch_with_borde_574),
    .din178(ref_patch_with_borde_575),
    .din179(ref_patch_with_borde_576),
    .din180(ref_patch_with_borde_578),
    .din181(ref_patch_with_borde_579),
    .din182(ref_patch_with_borde_580),
    .din183(ref_patch_with_borde_581),
    .din184(ref_patch_with_borde_582),
    .din185(ref_patch_with_borde_583),
    .din186(ref_patch_with_borde_584),
    .din187(ref_patch_with_borde_585),
    .din188(ref_patch_with_borde_586),
    .din189(ref_patch_with_borde_587),
    .din190(ref_patch_with_borde_589),
    .din191(ref_patch_with_borde_590),
    .din192(ref_patch_with_borde_591),
    .din193(ref_patch_with_borde_592),
    .din194(ref_patch_with_borde_593),
    .din195(ref_patch_with_borde_594),
    .din196(ref_patch_with_borde_595),
    .din197(ref_patch_with_borde_596),
    .din198(ref_patch_with_borde_597),
    .din199(8'd0),
    .din200(8'd0),
    .din201(8'd0),
    .din202(8'd0),
    .din203(8'd0),
    .din204(8'd0),
    .din205(8'd0),
    .din206(8'd0),
    .din207(8'd0),
    .din208(8'd0),
    .din209(8'd0),
    .din210(8'd0),
    .din211(8'd0),
    .din212(8'd0),
    .din213(8'd0),
    .din214(8'd0),
    .din215(8'd0),
    .din216(8'd0),
    .din217(8'd0),
    .din218(8'd0),
    .din219(8'd0),
    .din220(8'd0),
    .din221(ref_patch_with_borde_613),
    .din222(ref_patch_with_borde_614),
    .din223(ref_patch_with_borde_615),
    .din224(ref_patch_with_borde_616),
    .din225(ref_patch_with_borde_617),
    .din226(ref_patch_with_borde_618),
    .din227(ref_patch_with_borde_619),
    .din228(ref_patch_with_borde_620),
    .din229(ref_patch_with_borde_621),
    .din230(ref_patch_with_borde_623),
    .din231(ref_patch_with_borde_624),
    .din232(ref_patch_with_borde_625),
    .din233(ref_patch_with_borde_626),
    .din234(ref_patch_with_borde_627),
    .din235(ref_patch_with_borde_628),
    .din236(ref_patch_with_borde_629),
    .din237(ref_patch_with_borde_630),
    .din238(ref_patch_with_borde_631),
    .din239(ref_patch_with_borde_632),
    .din240(ref_patch_with_borde_634),
    .din241(ref_patch_with_borde_635),
    .din242(ref_patch_with_borde_636),
    .din243(ref_patch_with_borde_637),
    .din244(ref_patch_with_borde_638),
    .din245(ref_patch_with_borde_639),
    .din246(ref_patch_with_borde_640),
    .din247(ref_patch_with_borde_641),
    .din248(ref_patch_with_borde_642),
    .din249(ref_patch_with_borde_643),
    .din250(ref_patch_with_borde_645),
    .din251(ref_patch_with_borde_646),
    .din252(ref_patch_with_borde_647),
    .din253(ref_patch_with_borde_648),
    .din254(ref_patch_with_borde_649),
    .din255(ref_patch_with_borde_650),
    .din256(ref_patch_with_borde_651),
    .din257(ref_patch_with_borde_652),
    .din258(ref_patch_with_borde_653),
    .din259(ref_patch_with_borde_654),
    .din260(ref_patch_with_borde_656),
    .din261(ref_patch_with_borde_657),
    .din262(ref_patch_with_borde_658),
    .din263(ref_patch_with_borde_659),
    .din264(ref_patch_with_borde_660),
    .din265(ref_patch_with_borde_661),
    .din266(ref_patch_with_borde_662),
    .din267(ref_patch_with_borde_663),
    .din268(ref_patch_with_borde_664),
    .din269(ref_patch_with_borde_665),
    .din270(ref_patch_with_borde_667),
    .din271(ref_patch_with_borde_668),
    .din272(ref_patch_with_borde_669),
    .din273(ref_patch_with_borde_670),
    .din274(ref_patch_with_borde_671),
    .din275(ref_patch_with_borde_672),
    .din276(ref_patch_with_borde_673),
    .din277(ref_patch_with_borde_674),
    .din278(ref_patch_with_borde_675),
    .din279(ref_patch_with_borde_676),
    .din280(ref_patch_with_borde_678),
    .din281(ref_patch_with_borde_679),
    .din282(ref_patch_with_borde_680),
    .din283(ref_patch_with_borde_681),
    .din284(ref_patch_with_borde_682),
    .din285(ref_patch_with_borde_683),
    .din286(ref_patch_with_borde_684),
    .din287(ref_patch_with_borde_685),
    .din288(ref_patch_with_borde_686),
    .din289(ref_patch_with_borde_687),
    .din290(ref_patch_with_borde_689),
    .din291(ref_patch_with_borde_690),
    .din292(ref_patch_with_borde_691),
    .din293(ref_patch_with_borde_692),
    .din294(ref_patch_with_borde_693),
    .din295(ref_patch_with_borde_694),
    .din296(ref_patch_with_borde_695),
    .din297(ref_patch_with_borde_696),
    .din298(ref_patch_with_borde_697),
    .din299(8'd0),
    .din300(8'd0),
    .din301(8'd0),
    .din302(8'd0),
    .din303(8'd0),
    .din304(8'd0),
    .din305(8'd0),
    .din306(8'd0),
    .din307(8'd0),
    .din308(8'd0),
    .din309(8'd0),
    .din310(8'd0),
    .din311(8'd0),
    .din312(8'd0),
    .din313(8'd0),
    .din314(8'd0),
    .din315(8'd0),
    .din316(8'd0),
    .din317(8'd0),
    .din318(8'd0),
    .din319(8'd0),
    .din320(8'd0),
    .din321(ref_patch_with_borde_85),
    .din322(ref_patch_with_borde_84),
    .din323(ref_patch_with_borde_83),
    .din324(ref_patch_with_borde_82),
    .din325(ref_patch_with_borde_81),
    .din326(ref_patch_with_borde_80),
    .din327(ref_patch_with_borde_79),
    .din328(ref_patch_with_borde_78),
    .din329(ref_patch_with_borde_77),
    .din330(ref_patch_with_borde_75),
    .din331(ref_patch_with_borde_74),
    .din332(ref_patch_with_borde_73),
    .din333(ref_patch_with_borde_72),
    .din334(ref_patch_with_borde_71),
    .din335(ref_patch_with_borde_70),
    .din336(ref_patch_with_borde_69),
    .din337(ref_patch_with_borde_68),
    .din338(ref_patch_with_borde_67),
    .din339(ref_patch_with_borde_66),
    .din340(ref_patch_with_borde_64),
    .din341(ref_patch_with_borde_63),
    .din342(ref_patch_with_borde_62),
    .din343(ref_patch_with_borde_61),
    .din344(ref_patch_with_borde_60),
    .din345(ref_patch_with_borde_59),
    .din346(ref_patch_with_borde_58),
    .din347(ref_patch_with_borde_57),
    .din348(ref_patch_with_borde_56),
    .din349(ref_patch_with_borde_55),
    .din350(ref_patch_with_borde_53),
    .din351(ref_patch_with_borde_52),
    .din352(ref_patch_with_borde_51),
    .din353(ref_patch_with_borde_50),
    .din354(ref_patch_with_borde_49),
    .din355(ref_patch_with_borde_48),
    .din356(ref_patch_with_borde_47),
    .din357(ref_patch_with_borde_46),
    .din358(ref_patch_with_borde_45),
    .din359(ref_patch_with_borde_44),
    .din360(ref_patch_with_borde_42),
    .din361(ref_patch_with_borde_41),
    .din362(ref_patch_with_borde_40),
    .din363(ref_patch_with_borde_39),
    .din364(ref_patch_with_borde_38),
    .din365(ref_patch_with_borde_37),
    .din366(ref_patch_with_borde_36),
    .din367(ref_patch_with_borde_35),
    .din368(ref_patch_with_borde_34),
    .din369(ref_patch_with_borde_33),
    .din370(ref_patch_with_borde_31),
    .din371(ref_patch_with_borde_30),
    .din372(ref_patch_with_borde_29),
    .din373(ref_patch_with_borde_28),
    .din374(ref_patch_with_borde_27),
    .din375(ref_patch_with_borde_26),
    .din376(ref_patch_with_borde_25),
    .din377(ref_patch_with_borde_24),
    .din378(ref_patch_with_borde_23),
    .din379(ref_patch_with_borde_22),
    .din380(ref_patch_with_borde_20),
    .din381(ref_patch_with_borde_19),
    .din382(ref_patch_with_borde_18),
    .din383(ref_patch_with_borde_17),
    .din384(ref_patch_with_borde_16),
    .din385(ref_patch_with_borde_15),
    .din386(ref_patch_with_borde_14),
    .din387(ref_patch_with_borde_13),
    .din388(ref_patch_with_borde_12),
    .din389(ref_patch_with_borde_11),
    .din390(ref_patch_with_borde_9),
    .din391(ref_patch_with_borde_8),
    .din392(ref_patch_with_borde_7),
    .din393(ref_patch_with_borde_6),
    .din394(ref_patch_with_borde_5),
    .din395(ref_patch_with_borde_4),
    .din396(ref_patch_with_borde_3),
    .din397(ref_patch_with_borde_2),
    .din398(ref_patch_with_borde_1),
    .din399(8'd0),
    .din400(tmp_64_fu_7646_p401),
    .dout(tmp_64_fu_7646_p402)
);

batch_align2D_mux_4009_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 8 ),
    .din101_WIDTH( 8 ),
    .din102_WIDTH( 8 ),
    .din103_WIDTH( 8 ),
    .din104_WIDTH( 8 ),
    .din105_WIDTH( 8 ),
    .din106_WIDTH( 8 ),
    .din107_WIDTH( 8 ),
    .din108_WIDTH( 8 ),
    .din109_WIDTH( 8 ),
    .din110_WIDTH( 8 ),
    .din111_WIDTH( 8 ),
    .din112_WIDTH( 8 ),
    .din113_WIDTH( 8 ),
    .din114_WIDTH( 8 ),
    .din115_WIDTH( 8 ),
    .din116_WIDTH( 8 ),
    .din117_WIDTH( 8 ),
    .din118_WIDTH( 8 ),
    .din119_WIDTH( 8 ),
    .din120_WIDTH( 8 ),
    .din121_WIDTH( 8 ),
    .din122_WIDTH( 8 ),
    .din123_WIDTH( 8 ),
    .din124_WIDTH( 8 ),
    .din125_WIDTH( 8 ),
    .din126_WIDTH( 8 ),
    .din127_WIDTH( 8 ),
    .din128_WIDTH( 8 ),
    .din129_WIDTH( 8 ),
    .din130_WIDTH( 8 ),
    .din131_WIDTH( 8 ),
    .din132_WIDTH( 8 ),
    .din133_WIDTH( 8 ),
    .din134_WIDTH( 8 ),
    .din135_WIDTH( 8 ),
    .din136_WIDTH( 8 ),
    .din137_WIDTH( 8 ),
    .din138_WIDTH( 8 ),
    .din139_WIDTH( 8 ),
    .din140_WIDTH( 8 ),
    .din141_WIDTH( 8 ),
    .din142_WIDTH( 8 ),
    .din143_WIDTH( 8 ),
    .din144_WIDTH( 8 ),
    .din145_WIDTH( 8 ),
    .din146_WIDTH( 8 ),
    .din147_WIDTH( 8 ),
    .din148_WIDTH( 8 ),
    .din149_WIDTH( 8 ),
    .din150_WIDTH( 8 ),
    .din151_WIDTH( 8 ),
    .din152_WIDTH( 8 ),
    .din153_WIDTH( 8 ),
    .din154_WIDTH( 8 ),
    .din155_WIDTH( 8 ),
    .din156_WIDTH( 8 ),
    .din157_WIDTH( 8 ),
    .din158_WIDTH( 8 ),
    .din159_WIDTH( 8 ),
    .din160_WIDTH( 8 ),
    .din161_WIDTH( 8 ),
    .din162_WIDTH( 8 ),
    .din163_WIDTH( 8 ),
    .din164_WIDTH( 8 ),
    .din165_WIDTH( 8 ),
    .din166_WIDTH( 8 ),
    .din167_WIDTH( 8 ),
    .din168_WIDTH( 8 ),
    .din169_WIDTH( 8 ),
    .din170_WIDTH( 8 ),
    .din171_WIDTH( 8 ),
    .din172_WIDTH( 8 ),
    .din173_WIDTH( 8 ),
    .din174_WIDTH( 8 ),
    .din175_WIDTH( 8 ),
    .din176_WIDTH( 8 ),
    .din177_WIDTH( 8 ),
    .din178_WIDTH( 8 ),
    .din179_WIDTH( 8 ),
    .din180_WIDTH( 8 ),
    .din181_WIDTH( 8 ),
    .din182_WIDTH( 8 ),
    .din183_WIDTH( 8 ),
    .din184_WIDTH( 8 ),
    .din185_WIDTH( 8 ),
    .din186_WIDTH( 8 ),
    .din187_WIDTH( 8 ),
    .din188_WIDTH( 8 ),
    .din189_WIDTH( 8 ),
    .din190_WIDTH( 8 ),
    .din191_WIDTH( 8 ),
    .din192_WIDTH( 8 ),
    .din193_WIDTH( 8 ),
    .din194_WIDTH( 8 ),
    .din195_WIDTH( 8 ),
    .din196_WIDTH( 8 ),
    .din197_WIDTH( 8 ),
    .din198_WIDTH( 8 ),
    .din199_WIDTH( 8 ),
    .din200_WIDTH( 8 ),
    .din201_WIDTH( 8 ),
    .din202_WIDTH( 8 ),
    .din203_WIDTH( 8 ),
    .din204_WIDTH( 8 ),
    .din205_WIDTH( 8 ),
    .din206_WIDTH( 8 ),
    .din207_WIDTH( 8 ),
    .din208_WIDTH( 8 ),
    .din209_WIDTH( 8 ),
    .din210_WIDTH( 8 ),
    .din211_WIDTH( 8 ),
    .din212_WIDTH( 8 ),
    .din213_WIDTH( 8 ),
    .din214_WIDTH( 8 ),
    .din215_WIDTH( 8 ),
    .din216_WIDTH( 8 ),
    .din217_WIDTH( 8 ),
    .din218_WIDTH( 8 ),
    .din219_WIDTH( 8 ),
    .din220_WIDTH( 8 ),
    .din221_WIDTH( 8 ),
    .din222_WIDTH( 8 ),
    .din223_WIDTH( 8 ),
    .din224_WIDTH( 8 ),
    .din225_WIDTH( 8 ),
    .din226_WIDTH( 8 ),
    .din227_WIDTH( 8 ),
    .din228_WIDTH( 8 ),
    .din229_WIDTH( 8 ),
    .din230_WIDTH( 8 ),
    .din231_WIDTH( 8 ),
    .din232_WIDTH( 8 ),
    .din233_WIDTH( 8 ),
    .din234_WIDTH( 8 ),
    .din235_WIDTH( 8 ),
    .din236_WIDTH( 8 ),
    .din237_WIDTH( 8 ),
    .din238_WIDTH( 8 ),
    .din239_WIDTH( 8 ),
    .din240_WIDTH( 8 ),
    .din241_WIDTH( 8 ),
    .din242_WIDTH( 8 ),
    .din243_WIDTH( 8 ),
    .din244_WIDTH( 8 ),
    .din245_WIDTH( 8 ),
    .din246_WIDTH( 8 ),
    .din247_WIDTH( 8 ),
    .din248_WIDTH( 8 ),
    .din249_WIDTH( 8 ),
    .din250_WIDTH( 8 ),
    .din251_WIDTH( 8 ),
    .din252_WIDTH( 8 ),
    .din253_WIDTH( 8 ),
    .din254_WIDTH( 8 ),
    .din255_WIDTH( 8 ),
    .din256_WIDTH( 8 ),
    .din257_WIDTH( 8 ),
    .din258_WIDTH( 8 ),
    .din259_WIDTH( 8 ),
    .din260_WIDTH( 8 ),
    .din261_WIDTH( 8 ),
    .din262_WIDTH( 8 ),
    .din263_WIDTH( 8 ),
    .din264_WIDTH( 8 ),
    .din265_WIDTH( 8 ),
    .din266_WIDTH( 8 ),
    .din267_WIDTH( 8 ),
    .din268_WIDTH( 8 ),
    .din269_WIDTH( 8 ),
    .din270_WIDTH( 8 ),
    .din271_WIDTH( 8 ),
    .din272_WIDTH( 8 ),
    .din273_WIDTH( 8 ),
    .din274_WIDTH( 8 ),
    .din275_WIDTH( 8 ),
    .din276_WIDTH( 8 ),
    .din277_WIDTH( 8 ),
    .din278_WIDTH( 8 ),
    .din279_WIDTH( 8 ),
    .din280_WIDTH( 8 ),
    .din281_WIDTH( 8 ),
    .din282_WIDTH( 8 ),
    .din283_WIDTH( 8 ),
    .din284_WIDTH( 8 ),
    .din285_WIDTH( 8 ),
    .din286_WIDTH( 8 ),
    .din287_WIDTH( 8 ),
    .din288_WIDTH( 8 ),
    .din289_WIDTH( 8 ),
    .din290_WIDTH( 8 ),
    .din291_WIDTH( 8 ),
    .din292_WIDTH( 8 ),
    .din293_WIDTH( 8 ),
    .din294_WIDTH( 8 ),
    .din295_WIDTH( 8 ),
    .din296_WIDTH( 8 ),
    .din297_WIDTH( 8 ),
    .din298_WIDTH( 8 ),
    .din299_WIDTH( 8 ),
    .din300_WIDTH( 8 ),
    .din301_WIDTH( 8 ),
    .din302_WIDTH( 8 ),
    .din303_WIDTH( 8 ),
    .din304_WIDTH( 8 ),
    .din305_WIDTH( 8 ),
    .din306_WIDTH( 8 ),
    .din307_WIDTH( 8 ),
    .din308_WIDTH( 8 ),
    .din309_WIDTH( 8 ),
    .din310_WIDTH( 8 ),
    .din311_WIDTH( 8 ),
    .din312_WIDTH( 8 ),
    .din313_WIDTH( 8 ),
    .din314_WIDTH( 8 ),
    .din315_WIDTH( 8 ),
    .din316_WIDTH( 8 ),
    .din317_WIDTH( 8 ),
    .din318_WIDTH( 8 ),
    .din319_WIDTH( 8 ),
    .din320_WIDTH( 8 ),
    .din321_WIDTH( 8 ),
    .din322_WIDTH( 8 ),
    .din323_WIDTH( 8 ),
    .din324_WIDTH( 8 ),
    .din325_WIDTH( 8 ),
    .din326_WIDTH( 8 ),
    .din327_WIDTH( 8 ),
    .din328_WIDTH( 8 ),
    .din329_WIDTH( 8 ),
    .din330_WIDTH( 8 ),
    .din331_WIDTH( 8 ),
    .din332_WIDTH( 8 ),
    .din333_WIDTH( 8 ),
    .din334_WIDTH( 8 ),
    .din335_WIDTH( 8 ),
    .din336_WIDTH( 8 ),
    .din337_WIDTH( 8 ),
    .din338_WIDTH( 8 ),
    .din339_WIDTH( 8 ),
    .din340_WIDTH( 8 ),
    .din341_WIDTH( 8 ),
    .din342_WIDTH( 8 ),
    .din343_WIDTH( 8 ),
    .din344_WIDTH( 8 ),
    .din345_WIDTH( 8 ),
    .din346_WIDTH( 8 ),
    .din347_WIDTH( 8 ),
    .din348_WIDTH( 8 ),
    .din349_WIDTH( 8 ),
    .din350_WIDTH( 8 ),
    .din351_WIDTH( 8 ),
    .din352_WIDTH( 8 ),
    .din353_WIDTH( 8 ),
    .din354_WIDTH( 8 ),
    .din355_WIDTH( 8 ),
    .din356_WIDTH( 8 ),
    .din357_WIDTH( 8 ),
    .din358_WIDTH( 8 ),
    .din359_WIDTH( 8 ),
    .din360_WIDTH( 8 ),
    .din361_WIDTH( 8 ),
    .din362_WIDTH( 8 ),
    .din363_WIDTH( 8 ),
    .din364_WIDTH( 8 ),
    .din365_WIDTH( 8 ),
    .din366_WIDTH( 8 ),
    .din367_WIDTH( 8 ),
    .din368_WIDTH( 8 ),
    .din369_WIDTH( 8 ),
    .din370_WIDTH( 8 ),
    .din371_WIDTH( 8 ),
    .din372_WIDTH( 8 ),
    .din373_WIDTH( 8 ),
    .din374_WIDTH( 8 ),
    .din375_WIDTH( 8 ),
    .din376_WIDTH( 8 ),
    .din377_WIDTH( 8 ),
    .din378_WIDTH( 8 ),
    .din379_WIDTH( 8 ),
    .din380_WIDTH( 8 ),
    .din381_WIDTH( 8 ),
    .din382_WIDTH( 8 ),
    .din383_WIDTH( 8 ),
    .din384_WIDTH( 8 ),
    .din385_WIDTH( 8 ),
    .din386_WIDTH( 8 ),
    .din387_WIDTH( 8 ),
    .din388_WIDTH( 8 ),
    .din389_WIDTH( 8 ),
    .din390_WIDTH( 8 ),
    .din391_WIDTH( 8 ),
    .din392_WIDTH( 8 ),
    .din393_WIDTH( 8 ),
    .din394_WIDTH( 8 ),
    .din395_WIDTH( 8 ),
    .din396_WIDTH( 8 ),
    .din397_WIDTH( 8 ),
    .din398_WIDTH( 8 ),
    .din399_WIDTH( 8 ),
    .din400_WIDTH( 9 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_4009_8_1_1_U12(
    .din0(ref_patch_with_borde_399),
    .din1(ref_patch_with_borde_400),
    .din2(ref_patch_with_borde_411),
    .din3(ref_patch_with_borde_422),
    .din4(ref_patch_with_borde_433),
    .din5(ref_patch_with_borde_444),
    .din6(ref_patch_with_borde_455),
    .din7(ref_patch_with_borde_466),
    .din8(ref_patch_with_borde_477),
    .din9(ref_patch_with_borde_488),
    .din10(ref_patch_with_borde_401),
    .din11(ref_patch_with_borde_402),
    .din12(ref_patch_with_borde_403),
    .din13(ref_patch_with_borde_404),
    .din14(ref_patch_with_borde_405),
    .din15(ref_patch_with_borde_406),
    .din16(ref_patch_with_borde_407),
    .din17(ref_patch_with_borde_408),
    .din18(ref_patch_with_borde_409),
    .din19(ref_patch_with_borde_410),
    .din20(ref_patch_with_borde_412),
    .din21(ref_patch_with_borde_413),
    .din22(ref_patch_with_borde_414),
    .din23(ref_patch_with_borde_415),
    .din24(ref_patch_with_borde_416),
    .din25(ref_patch_with_borde_417),
    .din26(ref_patch_with_borde_418),
    .din27(ref_patch_with_borde_419),
    .din28(ref_patch_with_borde_420),
    .din29(ref_patch_with_borde_421),
    .din30(ref_patch_with_borde_423),
    .din31(ref_patch_with_borde_424),
    .din32(ref_patch_with_borde_425),
    .din33(ref_patch_with_borde_426),
    .din34(ref_patch_with_borde_427),
    .din35(ref_patch_with_borde_428),
    .din36(ref_patch_with_borde_429),
    .din37(ref_patch_with_borde_430),
    .din38(ref_patch_with_borde_431),
    .din39(ref_patch_with_borde_432),
    .din40(ref_patch_with_borde_434),
    .din41(ref_patch_with_borde_435),
    .din42(ref_patch_with_borde_436),
    .din43(ref_patch_with_borde_437),
    .din44(ref_patch_with_borde_438),
    .din45(ref_patch_with_borde_439),
    .din46(ref_patch_with_borde_440),
    .din47(ref_patch_with_borde_441),
    .din48(ref_patch_with_borde_442),
    .din49(ref_patch_with_borde_443),
    .din50(ref_patch_with_borde_445),
    .din51(ref_patch_with_borde_446),
    .din52(ref_patch_with_borde_447),
    .din53(ref_patch_with_borde_448),
    .din54(ref_patch_with_borde_449),
    .din55(ref_patch_with_borde_450),
    .din56(ref_patch_with_borde_451),
    .din57(ref_patch_with_borde_452),
    .din58(ref_patch_with_borde_453),
    .din59(ref_patch_with_borde_454),
    .din60(ref_patch_with_borde_456),
    .din61(ref_patch_with_borde_457),
    .din62(ref_patch_with_borde_458),
    .din63(ref_patch_with_borde_459),
    .din64(ref_patch_with_borde_460),
    .din65(ref_patch_with_borde_461),
    .din66(ref_patch_with_borde_462),
    .din67(ref_patch_with_borde_463),
    .din68(ref_patch_with_borde_464),
    .din69(ref_patch_with_borde_465),
    .din70(ref_patch_with_borde_467),
    .din71(ref_patch_with_borde_468),
    .din72(ref_patch_with_borde_469),
    .din73(ref_patch_with_borde_470),
    .din74(ref_patch_with_borde_471),
    .din75(ref_patch_with_borde_472),
    .din76(ref_patch_with_borde_473),
    .din77(ref_patch_with_borde_474),
    .din78(ref_patch_with_borde_475),
    .din79(ref_patch_with_borde_476),
    .din80(ref_patch_with_borde_478),
    .din81(ref_patch_with_borde_479),
    .din82(ref_patch_with_borde_480),
    .din83(ref_patch_with_borde_481),
    .din84(ref_patch_with_borde_482),
    .din85(ref_patch_with_borde_483),
    .din86(ref_patch_with_borde_484),
    .din87(ref_patch_with_borde_485),
    .din88(ref_patch_with_borde_486),
    .din89(ref_patch_with_borde_487),
    .din90(ref_patch_with_borde_489),
    .din91(ref_patch_with_borde_490),
    .din92(ref_patch_with_borde_491),
    .din93(ref_patch_with_borde_492),
    .din94(ref_patch_with_borde_493),
    .din95(ref_patch_with_borde_494),
    .din96(ref_patch_with_borde_495),
    .din97(ref_patch_with_borde_496),
    .din98(ref_patch_with_borde_497),
    .din99(ref_patch_with_borde_498),
    .din100(ref_patch_with_borde_499),
    .din101(ref_patch_with_borde_500),
    .din102(ref_patch_with_borde_511),
    .din103(ref_patch_with_borde_522),
    .din104(ref_patch_with_borde_533),
    .din105(ref_patch_with_borde_544),
    .din106(ref_patch_with_borde_555),
    .din107(ref_patch_with_borde_566),
    .din108(ref_patch_with_borde_577),
    .din109(ref_patch_with_borde_588),
    .din110(ref_patch_with_borde_501),
    .din111(ref_patch_with_borde_502),
    .din112(ref_patch_with_borde_503),
    .din113(ref_patch_with_borde_504),
    .din114(ref_patch_with_borde_505),
    .din115(ref_patch_with_borde_506),
    .din116(ref_patch_with_borde_507),
    .din117(ref_patch_with_borde_508),
    .din118(ref_patch_with_borde_509),
    .din119(ref_patch_with_borde_510),
    .din120(ref_patch_with_borde_512),
    .din121(ref_patch_with_borde_513),
    .din122(ref_patch_with_borde_514),
    .din123(ref_patch_with_borde_515),
    .din124(ref_patch_with_borde_516),
    .din125(ref_patch_with_borde_517),
    .din126(ref_patch_with_borde_518),
    .din127(ref_patch_with_borde_519),
    .din128(ref_patch_with_borde_520),
    .din129(ref_patch_with_borde_521),
    .din130(ref_patch_with_borde_523),
    .din131(ref_patch_with_borde_524),
    .din132(ref_patch_with_borde_525),
    .din133(ref_patch_with_borde_526),
    .din134(ref_patch_with_borde_527),
    .din135(ref_patch_with_borde_528),
    .din136(ref_patch_with_borde_529),
    .din137(ref_patch_with_borde_530),
    .din138(ref_patch_with_borde_531),
    .din139(ref_patch_with_borde_532),
    .din140(ref_patch_with_borde_534),
    .din141(ref_patch_with_borde_535),
    .din142(ref_patch_with_borde_536),
    .din143(ref_patch_with_borde_537),
    .din144(ref_patch_with_borde_538),
    .din145(ref_patch_with_borde_539),
    .din146(ref_patch_with_borde_540),
    .din147(ref_patch_with_borde_541),
    .din148(ref_patch_with_borde_542),
    .din149(ref_patch_with_borde_543),
    .din150(ref_patch_with_borde_545),
    .din151(ref_patch_with_borde_546),
    .din152(ref_patch_with_borde_547),
    .din153(ref_patch_with_borde_548),
    .din154(ref_patch_with_borde_549),
    .din155(ref_patch_with_borde_550),
    .din156(ref_patch_with_borde_551),
    .din157(ref_patch_with_borde_552),
    .din158(ref_patch_with_borde_553),
    .din159(ref_patch_with_borde_554),
    .din160(ref_patch_with_borde_556),
    .din161(ref_patch_with_borde_557),
    .din162(ref_patch_with_borde_558),
    .din163(ref_patch_with_borde_559),
    .din164(ref_patch_with_borde_560),
    .din165(ref_patch_with_borde_561),
    .din166(ref_patch_with_borde_562),
    .din167(ref_patch_with_borde_563),
    .din168(ref_patch_with_borde_564),
    .din169(ref_patch_with_borde_565),
    .din170(ref_patch_with_borde_567),
    .din171(ref_patch_with_borde_568),
    .din172(ref_patch_with_borde_569),
    .din173(ref_patch_with_borde_570),
    .din174(ref_patch_with_borde_571),
    .din175(ref_patch_with_borde_572),
    .din176(ref_patch_with_borde_573),
    .din177(ref_patch_with_borde_574),
    .din178(ref_patch_with_borde_575),
    .din179(ref_patch_with_borde_576),
    .din180(ref_patch_with_borde_578),
    .din181(ref_patch_with_borde_579),
    .din182(ref_patch_with_borde_580),
    .din183(ref_patch_with_borde_581),
    .din184(ref_patch_with_borde_582),
    .din185(ref_patch_with_borde_583),
    .din186(ref_patch_with_borde_584),
    .din187(ref_patch_with_borde_585),
    .din188(ref_patch_with_borde_586),
    .din189(ref_patch_with_borde_587),
    .din190(ref_patch_with_borde_589),
    .din191(ref_patch_with_borde_590),
    .din192(ref_patch_with_borde_591),
    .din193(ref_patch_with_borde_592),
    .din194(ref_patch_with_borde_593),
    .din195(ref_patch_with_borde_594),
    .din196(ref_patch_with_borde_595),
    .din197(ref_patch_with_borde_596),
    .din198(ref_patch_with_borde_597),
    .din199(ref_patch_with_borde_598),
    .din200(ref_patch_with_borde_599),
    .din201(ref_patch_with_borde_600),
    .din202(ref_patch_with_borde_611),
    .din203(ref_patch_with_borde_622),
    .din204(ref_patch_with_borde_633),
    .din205(ref_patch_with_borde_644),
    .din206(ref_patch_with_borde_655),
    .din207(ref_patch_with_borde_666),
    .din208(ref_patch_with_borde_677),
    .din209(ref_patch_with_borde_688),
    .din210(ref_patch_with_borde_601),
    .din211(ref_patch_with_borde_602),
    .din212(ref_patch_with_borde_603),
    .din213(ref_patch_with_borde_604),
    .din214(ref_patch_with_borde_605),
    .din215(ref_patch_with_borde_606),
    .din216(ref_patch_with_borde_607),
    .din217(ref_patch_with_borde_608),
    .din218(ref_patch_with_borde_609),
    .din219(ref_patch_with_borde_610),
    .din220(ref_patch_with_borde_612),
    .din221(ref_patch_with_borde_613),
    .din222(ref_patch_with_borde_614),
    .din223(ref_patch_with_borde_615),
    .din224(ref_patch_with_borde_616),
    .din225(ref_patch_with_borde_617),
    .din226(ref_patch_with_borde_618),
    .din227(ref_patch_with_borde_619),
    .din228(ref_patch_with_borde_620),
    .din229(ref_patch_with_borde_621),
    .din230(ref_patch_with_borde_623),
    .din231(ref_patch_with_borde_624),
    .din232(ref_patch_with_borde_625),
    .din233(ref_patch_with_borde_626),
    .din234(ref_patch_with_borde_627),
    .din235(ref_patch_with_borde_628),
    .din236(ref_patch_with_borde_629),
    .din237(ref_patch_with_borde_630),
    .din238(ref_patch_with_borde_631),
    .din239(ref_patch_with_borde_632),
    .din240(ref_patch_with_borde_634),
    .din241(ref_patch_with_borde_635),
    .din242(ref_patch_with_borde_636),
    .din243(ref_patch_with_borde_637),
    .din244(ref_patch_with_borde_638),
    .din245(ref_patch_with_borde_639),
    .din246(ref_patch_with_borde_640),
    .din247(ref_patch_with_borde_641),
    .din248(ref_patch_with_borde_642),
    .din249(ref_patch_with_borde_643),
    .din250(ref_patch_with_borde_645),
    .din251(ref_patch_with_borde_646),
    .din252(ref_patch_with_borde_647),
    .din253(ref_patch_with_borde_648),
    .din254(ref_patch_with_borde_649),
    .din255(ref_patch_with_borde_650),
    .din256(ref_patch_with_borde_651),
    .din257(ref_patch_with_borde_652),
    .din258(ref_patch_with_borde_653),
    .din259(ref_patch_with_borde_654),
    .din260(ref_patch_with_borde_656),
    .din261(ref_patch_with_borde_657),
    .din262(ref_patch_with_borde_658),
    .din263(ref_patch_with_borde_659),
    .din264(ref_patch_with_borde_660),
    .din265(ref_patch_with_borde_661),
    .din266(ref_patch_with_borde_662),
    .din267(ref_patch_with_borde_663),
    .din268(ref_patch_with_borde_664),
    .din269(ref_patch_with_borde_665),
    .din270(ref_patch_with_borde_667),
    .din271(ref_patch_with_borde_668),
    .din272(ref_patch_with_borde_669),
    .din273(ref_patch_with_borde_670),
    .din274(ref_patch_with_borde_671),
    .din275(ref_patch_with_borde_672),
    .din276(ref_patch_with_borde_673),
    .din277(ref_patch_with_borde_674),
    .din278(ref_patch_with_borde_675),
    .din279(ref_patch_with_borde_676),
    .din280(ref_patch_with_borde_678),
    .din281(ref_patch_with_borde_679),
    .din282(ref_patch_with_borde_680),
    .din283(ref_patch_with_borde_681),
    .din284(ref_patch_with_borde_682),
    .din285(ref_patch_with_borde_683),
    .din286(ref_patch_with_borde_684),
    .din287(ref_patch_with_borde_685),
    .din288(ref_patch_with_borde_686),
    .din289(ref_patch_with_borde_687),
    .din290(ref_patch_with_borde_689),
    .din291(ref_patch_with_borde_690),
    .din292(ref_patch_with_borde_691),
    .din293(ref_patch_with_borde_692),
    .din294(ref_patch_with_borde_693),
    .din295(ref_patch_with_borde_694),
    .din296(ref_patch_with_borde_695),
    .din297(ref_patch_with_borde_696),
    .din298(ref_patch_with_borde_697),
    .din299(ref_patch_with_borde_698),
    .din300(ref_patch_with_borde_99),
    .din301(ref_patch_with_borde_98),
    .din302(ref_patch_with_borde_87),
    .din303(ref_patch_with_borde_76),
    .din304(ref_patch_with_borde_65),
    .din305(ref_patch_with_borde_54),
    .din306(ref_patch_with_borde_43),
    .din307(ref_patch_with_borde_32),
    .din308(ref_patch_with_borde_21),
    .din309(ref_patch_with_borde_10),
    .din310(ref_patch_with_borde_97),
    .din311(ref_patch_with_borde_96),
    .din312(ref_patch_with_borde_95),
    .din313(ref_patch_with_borde_94),
    .din314(ref_patch_with_borde_93),
    .din315(ref_patch_with_borde_92),
    .din316(ref_patch_with_borde_91),
    .din317(ref_patch_with_borde_90),
    .din318(ref_patch_with_borde_89),
    .din319(ref_patch_with_borde_88),
    .din320(ref_patch_with_borde_86),
    .din321(ref_patch_with_borde_85),
    .din322(ref_patch_with_borde_84),
    .din323(ref_patch_with_borde_83),
    .din324(ref_patch_with_borde_82),
    .din325(ref_patch_with_borde_81),
    .din326(ref_patch_with_borde_80),
    .din327(ref_patch_with_borde_79),
    .din328(ref_patch_with_borde_78),
    .din329(ref_patch_with_borde_77),
    .din330(ref_patch_with_borde_75),
    .din331(ref_patch_with_borde_74),
    .din332(ref_patch_with_borde_73),
    .din333(ref_patch_with_borde_72),
    .din334(ref_patch_with_borde_71),
    .din335(ref_patch_with_borde_70),
    .din336(ref_patch_with_borde_69),
    .din337(ref_patch_with_borde_68),
    .din338(ref_patch_with_borde_67),
    .din339(ref_patch_with_borde_66),
    .din340(ref_patch_with_borde_64),
    .din341(ref_patch_with_borde_63),
    .din342(ref_patch_with_borde_62),
    .din343(ref_patch_with_borde_61),
    .din344(ref_patch_with_borde_60),
    .din345(ref_patch_with_borde_59),
    .din346(ref_patch_with_borde_58),
    .din347(ref_patch_with_borde_57),
    .din348(ref_patch_with_borde_56),
    .din349(ref_patch_with_borde_55),
    .din350(ref_patch_with_borde_53),
    .din351(ref_patch_with_borde_52),
    .din352(ref_patch_with_borde_51),
    .din353(ref_patch_with_borde_50),
    .din354(ref_patch_with_borde_49),
    .din355(ref_patch_with_borde_48),
    .din356(ref_patch_with_borde_47),
    .din357(ref_patch_with_borde_46),
    .din358(ref_patch_with_borde_45),
    .din359(ref_patch_with_borde_44),
    .din360(ref_patch_with_borde_42),
    .din361(ref_patch_with_borde_41),
    .din362(ref_patch_with_borde_40),
    .din363(ref_patch_with_borde_39),
    .din364(ref_patch_with_borde_38),
    .din365(ref_patch_with_borde_37),
    .din366(ref_patch_with_borde_36),
    .din367(ref_patch_with_borde_35),
    .din368(ref_patch_with_borde_34),
    .din369(ref_patch_with_borde_33),
    .din370(ref_patch_with_borde_31),
    .din371(ref_patch_with_borde_30),
    .din372(ref_patch_with_borde_29),
    .din373(ref_patch_with_borde_28),
    .din374(ref_patch_with_borde_27),
    .din375(ref_patch_with_borde_26),
    .din376(ref_patch_with_borde_25),
    .din377(ref_patch_with_borde_24),
    .din378(ref_patch_with_borde_23),
    .din379(ref_patch_with_borde_22),
    .din380(ref_patch_with_borde_20),
    .din381(ref_patch_with_borde_19),
    .din382(ref_patch_with_borde_18),
    .din383(ref_patch_with_borde_17),
    .din384(ref_patch_with_borde_16),
    .din385(ref_patch_with_borde_15),
    .din386(ref_patch_with_borde_14),
    .din387(ref_patch_with_borde_13),
    .din388(ref_patch_with_borde_12),
    .din389(ref_patch_with_borde_11),
    .din390(ref_patch_with_borde_9),
    .din391(ref_patch_with_borde_8),
    .din392(ref_patch_with_borde_7),
    .din393(ref_patch_with_borde_6),
    .din394(ref_patch_with_borde_5),
    .din395(ref_patch_with_borde_4),
    .din396(ref_patch_with_borde_3),
    .din397(ref_patch_with_borde_2),
    .din398(ref_patch_with_borde_1),
    .din399(ref_patch_with_borde),
    .din400(tmp_68_fu_8653_p401),
    .dout(tmp_68_fu_8653_p402)
);

batch_align2D_mux_366_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
batch_align2D_mux_366_32_1_1_U13(
    .din0(H_inv_3_0_fu_1266),
    .din1(H_inv_3_3_fu_1270),
    .din2(H_inv_3_6_fu_1274),
    .din3(H_inv_3_3_1_fu_1278),
    .din4(H_inv_3_4_fu_1282),
    .din5(H_inv_3_7_fu_1286),
    .din6(H_inv_3_6_1_fu_1290),
    .din7(H_inv_3_7_1_fu_1294),
    .din8(H_inv_3_8_fu_1298),
    .din9(H_inv_3_0_1_fu_1302),
    .din10(H_inv_3_3_2_fu_1306),
    .din11(H_inv_3_6_2_fu_1310),
    .din12(H_inv_3_3_3_fu_1314),
    .din13(H_inv_3_4_1_fu_1318),
    .din14(H_inv_3_7_2_fu_1322),
    .din15(H_inv_3_6_3_fu_1326),
    .din16(H_inv_3_7_3_fu_1330),
    .din17(H_inv_3_8_1_fu_1334),
    .din18(H_inv_3_0_2_fu_1338),
    .din19(H_inv_3_3_4_fu_1342),
    .din20(H_inv_3_6_4_fu_1346),
    .din21(H_inv_3_3_5_fu_1350),
    .din22(H_inv_3_4_2_fu_1354),
    .din23(H_inv_3_7_4_fu_1358),
    .din24(H_inv_3_6_5_fu_1362),
    .din25(H_inv_3_7_5_fu_1366),
    .din26(H_inv_3_8_2_fu_1370),
    .din27(H_inv_3_0_3_fu_1374),
    .din28(H_inv_3_3_6_fu_1378),
    .din29(H_inv_3_6_6_fu_1382),
    .din30(H_inv_3_3_7_fu_1386),
    .din31(H_inv_3_4_3_fu_1390),
    .din32(H_inv_3_7_6_fu_1394),
    .din33(H_inv_3_6_7_fu_1398),
    .din34(H_inv_3_7_7_fu_1402),
    .din35(H_inv_3_8_3_fu_1406),
    .din36(indvar6_reg_1686),
    .dout(tmp_11_fu_9838_p38)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state19) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state19) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state19);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state28) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state28) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state28);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state32) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state151) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((exitcond_fu_4427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state151) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state151);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((exitcond_fu_4427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state158) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state157) & (debug_BVALID == 1'b1))) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state158) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state158);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if (((1'b1 == ap_CS_fsm_state157) & (debug_BVALID == 1'b1))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_debug_AWREADY <= 1'b0;
    end else begin
        if (((exitcond_fu_4427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
            if ((1'b0 == ap_block_state31_io)) begin
                ap_reg_ioackin_debug_AWREADY <= 1'b0;
            end else if ((debug_AWREADY == 1'b1)) begin
                ap_reg_ioackin_debug_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_debug_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_7169)) begin
            if ((1'b0 == ap_block_pp4_stage0_11001)) begin
                ap_reg_ioackin_debug_WREADY <= 1'b0;
            end else if (((1'b0 == ap_block_pp4_stage0_01001) & (debug_WREADY == 1'b1))) begin
                ap_reg_ioackin_debug_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_patches_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            if ((ap_sig_ioackin_patches_ARREADY == 1'b1)) begin
                ap_reg_ioackin_patches_ARREADY <= 1'b0;
            end else if ((patches_ARREADY == 1'b1)) begin
                ap_reg_ioackin_patches_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_pos_r_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            if ((ap_sig_ioackin_pos_r_ARREADY == 1'b1)) begin
                ap_reg_ioackin_pos_r_ARREADY <= 1'b0;
            end else if ((pos_r_ARREADY == 1'b1)) begin
                ap_reg_ioackin_pos_r_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_pos_r_AWREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state137) & (ap_sig_ioackin_pos_r_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state153) & (ap_sig_ioackin_pos_r_AWREADY == 1'b1)))) begin
            ap_reg_ioackin_pos_r_AWREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_state137) & (pos_r_AWREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state153) & (pos_r_AWREADY == 1'b1)))) begin
            ap_reg_ioackin_pos_r_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_pos_r_WREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state145) & (ap_sig_ioackin_pos_r_WREADY == 1'b1)) | ((exitcond5_reg_10556 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)))) begin
            ap_reg_ioackin_pos_r_WREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_state145) & (pos_r_WREADY == 1'b1)) | ((exitcond5_reg_10556 == 1'd0) & (1'b0 == ap_block_pp5_stage0_01001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (pos_r_WREADY == 1'b1)))) begin
            ap_reg_ioackin_pos_r_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_pyr_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_sig_ioackin_pyr_ARREADY == 1'b1)) begin
                ap_reg_ioackin_pyr_ARREADY <= 1'b0;
            end else if ((pyr_ARREADY == 1'b1)) begin
                ap_reg_ioackin_pyr_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
        i_0_i_reg_1675 <= 7'd0;
    end else if (((exitcond_i_reg_10396 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i_0_i_reg_1675 <= i_reg_10400;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar1_reg_1559 <= indvar_next1_fu_1907_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar1_reg_1559 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar3_reg_1592 <= 4'd0;
    end else if (((exitcond2_fu_4353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        indvar3_reg_1592 <= indvar_next2_fu_4359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_4427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
        indvar6_reg_1686 <= 6'd0;
    end else if (((exitcond4_fu_9718_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        indvar6_reg_1686 <= indvar_next3_fu_9724_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state157) & (debug_BVALID == 1'b1))) begin
        indvar8_reg_1697 <= 4'd0;
    end else if (((exitcond5_fu_9916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        indvar8_reg_1697 <= indvar_next4_fu_9922_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_reg_1547 <= 19'd0;
    end else if (((exitcond3_reg_10096 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_reg_1547 <= indvar_next_reg_10100;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state150) & (pos_r_BVALID == 1'b1))) begin
        k_reg_1603 <= k_1_reg_10374;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        k_reg_1603 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        phi_mul_reg_1570 <= next_mul_fu_1913_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        phi_mul_reg_1570 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        phi_urem_reg_1581 <= idx_urem_fu_1945_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        phi_urem_reg_1581 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
        tmp_10_reg_1663 <= 32'd0;
    end else if (((exitcond_i_reg_10396_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001))) begin
        tmp_10_reg_1663 <= tmp_72_reg_10442;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
        tmp_2_reg_1615 <= 32'd0;
    end else if (((exitcond_i_reg_10396_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001))) begin
        tmp_2_reg_1615 <= tmp_78_reg_10437;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
        tmp_4_reg_1639 <= 32'd0;
    end else if (((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        tmp_4_reg_1639 <= tmp_75_reg_10432;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
        tmp_5_reg_1651 <= 32'd0;
    end else if (((exitcond_i_reg_10396_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001))) begin
        tmp_5_reg_1651 <= tmp_74_reg_10447;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
        tmp_s_reg_1627 <= 32'd0;
    end else if (((exitcond_i_reg_10396_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001))) begin
        tmp_s_reg_1627 <= grp_fu_1716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        H_inv_0_0_reg_10506 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) & (tmp_80_reg_10384 == 2'd1))) begin
        H_inv_3_0_1_fu_1302 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) & (tmp_80_reg_10384 == 2'd2))) begin
        H_inv_3_0_2_fu_1338 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) & (tmp_80_reg_10384 == 2'd3))) begin
        H_inv_3_0_3_fu_1374 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) & (tmp_80_reg_10384 == 2'd0))) begin
        H_inv_3_0_fu_1266 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & (tmp_80_reg_10384 == 2'd0))) begin
        H_inv_3_3_1_fu_1278 <= reg_1824;
        H_inv_3_6_fu_1274 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (tmp_80_reg_10384 == 2'd1))) begin
        H_inv_3_3_2_fu_1306 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & (tmp_80_reg_10384 == 2'd1))) begin
        H_inv_3_3_3_fu_1314 <= reg_1824;
        H_inv_3_6_2_fu_1310 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (tmp_80_reg_10384 == 2'd2))) begin
        H_inv_3_3_4_fu_1342 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & (tmp_80_reg_10384 == 2'd2))) begin
        H_inv_3_3_5_fu_1350 <= reg_1824;
        H_inv_3_6_4_fu_1346 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (tmp_80_reg_10384 == 2'd3))) begin
        H_inv_3_3_6_fu_1378 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) & (tmp_80_reg_10384 == 2'd3))) begin
        H_inv_3_3_7_fu_1386 <= reg_1824;
        H_inv_3_6_6_fu_1382 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state90) & (tmp_80_reg_10384 == 2'd0))) begin
        H_inv_3_3_fu_1270 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state114) & (tmp_80_reg_10384 == 2'd1))) begin
        H_inv_3_4_1_fu_1318 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state114) & (tmp_80_reg_10384 == 2'd2))) begin
        H_inv_3_4_2_fu_1354 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state114) & (tmp_80_reg_10384 == 2'd3))) begin
        H_inv_3_4_3_fu_1390 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state114) & (tmp_80_reg_10384 == 2'd0))) begin
        H_inv_3_4_fu_1282 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) & (tmp_80_reg_10384 == 2'd0))) begin
        H_inv_3_6_1_fu_1290 <= reg_1824;
        H_inv_3_7_1_fu_1294 <= grp_fu_1748_p2;
        H_inv_3_7_fu_1286 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) & (tmp_80_reg_10384 == 2'd1))) begin
        H_inv_3_6_3_fu_1326 <= reg_1824;
        H_inv_3_7_2_fu_1322 <= grp_fu_1748_p2;
        H_inv_3_7_3_fu_1330 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) & (tmp_80_reg_10384 == 2'd2))) begin
        H_inv_3_6_5_fu_1362 <= reg_1824;
        H_inv_3_7_4_fu_1358 <= grp_fu_1748_p2;
        H_inv_3_7_5_fu_1366 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state125) & (tmp_80_reg_10384 == 2'd3))) begin
        H_inv_3_6_7_fu_1398 <= reg_1824;
        H_inv_3_7_6_fu_1394 <= grp_fu_1748_p2;
        H_inv_3_7_7_fu_1402 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (tmp_80_reg_10384 == 2'd1))) begin
        H_inv_3_8_1_fu_1334 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (tmp_80_reg_10384 == 2'd2))) begin
        H_inv_3_8_2_fu_1370 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (tmp_80_reg_10384 == 2'd3))) begin
        H_inv_3_8_3_fu_1406 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state136) & (tmp_80_reg_10384 == 2'd0))) begin
        H_inv_3_8_fu_1298 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_9916_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        UnifiedRetVal_i_reg_10565 <= UnifiedRetVal_i_fu_10054_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_10150 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (p_t2_reg_10146 == 2'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        cur_px_estimate_0_0 <= pos_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_10150 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (p_t2_reg_10146 == 2'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        cur_px_estimate_0_1 <= pos_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_10150 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (p_t2_reg_10146 == 2'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        cur_px_estimate_1_0 <= pos_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_10150 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (p_t2_reg_10146 == 2'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        cur_px_estimate_1_1 <= pos_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_10150 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (p_t2_reg_10146 == 2'd2) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        cur_px_estimate_2_0 <= pos_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_10150 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (p_t2_reg_10146 == 2'd2) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        cur_px_estimate_2_1 <= pos_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_10150 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (p_t2_reg_10146 == 2'd3) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        cur_px_estimate_3_0 <= pos_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_10150 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (p_t2_reg_10146 == 2'd3) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        cur_px_estimate_3_1 <= pos_r_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        debug_addr_reg_10066[61 : 0] <= tmp_1_fu_1838_p1[61 : 0];
        patches_addr_reg_10084 <= ref_patch_with_border_ptr;
        pos_addr_reg_10077[61 : 0] <= tmp_6_fu_1858_p1[61 : 0];
        pyr_addr_reg_10090 <= pyr_data_ptr;
        tmp_6_cast_reg_10072[61 : 0] <= tmp_6_cast_fu_1862_p1[61 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        div_t_reg_10124 <= {{phi_mul_reg_1570[17:16]}};
        tmp_reg_10128 <= tmp_fu_1929_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond1_reg_10110 <= exitcond1_fu_1901_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond3_reg_10096 <= exitcond3_fu_1884_p2;
        exitcond3_reg_10096_pp0_iter1_reg <= exitcond3_reg_10096;
        indvar_reg_1547_pp0_iter1_reg <= indvar_reg_1547;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        exitcond4_reg_10542 <= exitcond4_fu_9718_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        exitcond5_reg_10556 <= exitcond5_fu_9916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        exitcond_i_reg_10396 <= exitcond_i_fu_4457_p2;
        exitcond_i_reg_10396_pp3_iter1_reg <= exitcond_i_reg_10396;
        exitcond_i_reg_10396_pp3_iter2_reg <= exitcond_i_reg_10396_pp3_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i_reg_10400 <= i_fu_4463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_next_reg_10100 <= indvar_next_fu_1890_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
        k_1_reg_10374 <= k_1_fu_4433_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_4353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        p_t2_reg_10146 <= {{indvar3_reg_1592[2:1]}};
        tmp_61_reg_10150 <= tmp_61_fu_4375_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        pos_addr_1_reg_10526[62 : 0] <= cur_px_estimate_ptr6_fu_9704_p1[62 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_reg_10096 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pyr_addr_read_reg_10105 <= pyr_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) & (ap_sig_ioackin_pos_r_AWREADY == 1'b1))) begin
        pyr_data_load_reg_10532 <= pyr_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & ((((((((((((((((((((((((((((((tmp_reg_10128 == 7'd126) & (div_t_reg_10124 == 2'd3)) | ((tmp_reg_10128 == 7'd127) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd125) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd124) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd123) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd122) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd121) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd120) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd119) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd118) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd117) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd116) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd115) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd114) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd113) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd112) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd111) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd110) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd109) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd108) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd107) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd106) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd105) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd104) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd103) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd102) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd101) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd100) & (div_t_reg_10124 == 2'd3))) | ((tmp_reg_10128 == 7'd99) & (div_t_reg_10124 == 2'd3))))) begin
        ref_patch_with_borde <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd98) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_1 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd9) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_10 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd89) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_11 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd88) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_12 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd87) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_13 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd86) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_14 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd85) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_15 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd84) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_16 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd83) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_17 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd82) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_18 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd81) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_19 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd97) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_2 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd80) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_20 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd8) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_21 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd79) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_22 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd78) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_23 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd77) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_24 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd76) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_25 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd75) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_26 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd74) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_27 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd73) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_28 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd72) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_29 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd96) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_3 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd71) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_30 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd70) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_31 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd7) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_32 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd69) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_33 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd68) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_34 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd67) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_35 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd66) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_36 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd65) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_37 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd64) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_38 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd63) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_39 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd0) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_399 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd95) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_4 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd62) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_40 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd1) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_400 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd10) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_401 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd11) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_402 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd12) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_403 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd13) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_404 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd14) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_405 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd15) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_406 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd16) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_407 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd17) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_408 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd18) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_409 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd61) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_41 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd19) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_410 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd2) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_411 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd20) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_412 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd21) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_413 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd22) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_414 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd23) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_415 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd24) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_416 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd25) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_417 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd26) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_418 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd27) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_419 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd60) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_42 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd28) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_420 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd29) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_421 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd3) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_422 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd30) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_423 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd31) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_424 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd32) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_425 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd33) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_426 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd34) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_427 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd35) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_428 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd36) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_429 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd6) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_43 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd37) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_430 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd38) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_431 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd39) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_432 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd4) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_433 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd40) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_434 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd41) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_435 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd42) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_436 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd43) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_437 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd44) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_438 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd45) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_439 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd59) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_44 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd46) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_440 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd47) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_441 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd48) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_442 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd49) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_443 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd5) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_444 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd50) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_445 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd51) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_446 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd52) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_447 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd53) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_448 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd54) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_449 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd58) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_45 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd55) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_450 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd56) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_451 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd57) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_452 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd58) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_453 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd59) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_454 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd6) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_455 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd60) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_456 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd61) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_457 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd62) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_458 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd63) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_459 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd57) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_46 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd64) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_460 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd65) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_461 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd66) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_462 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd67) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_463 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd68) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_464 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd69) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_465 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd7) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_466 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd70) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_467 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd71) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_468 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd72) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_469 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd56) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_47 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd73) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_470 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd74) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_471 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd75) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_472 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd76) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_473 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd77) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_474 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd78) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_475 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd79) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_476 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd8) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_477 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd80) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_478 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd81) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_479 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd55) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_48 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd82) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_480 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd83) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_481 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd84) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_482 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd85) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_483 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd86) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_484 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd87) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_485 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd88) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_486 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd89) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_487 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd9) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_488 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd90) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_489 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd54) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_49 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd91) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_490 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd92) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_491 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd93) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_492 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd94) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_493 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd95) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_494 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd96) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_495 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd97) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_496 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd98) & (div_t_reg_10124 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_497 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & ((((((((((((((((((((((((((((((tmp_reg_10128 == 7'd126) & (div_t_reg_10124 == 2'd0)) | ((tmp_reg_10128 == 7'd127) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd125) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd124) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd123) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd122) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd121) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd120) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd119) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd118) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd117) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd116) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd115) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd114) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd113) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd112) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd111) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd110) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd109) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd108) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd107) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd106) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd105) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd104) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd103) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd102) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd101) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd100) & (div_t_reg_10124 == 2'd0))) | ((tmp_reg_10128 == 7'd99) & (div_t_reg_10124 == 2'd0))))) begin
        ref_patch_with_borde_498 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd0) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_499 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd94) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_5 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd53) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_50 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd1) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_500 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd10) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_501 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd11) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_502 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd12) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_503 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd13) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_504 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd14) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_505 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd15) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_506 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd16) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_507 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd17) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_508 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd18) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_509 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd52) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_51 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd19) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_510 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd2) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_511 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd20) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_512 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd21) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_513 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd22) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_514 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd23) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_515 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd24) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_516 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd25) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_517 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd26) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_518 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd27) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_519 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd51) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_52 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd28) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_520 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd29) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_521 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd3) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_522 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd30) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_523 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd31) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_524 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd32) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_525 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd33) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_526 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd34) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_527 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd35) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_528 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd36) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_529 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd50) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_53 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd37) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_530 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd38) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_531 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd39) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_532 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd4) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_533 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd40) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_534 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd41) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_535 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd42) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_536 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd43) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_537 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd44) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_538 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd45) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_539 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd5) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_54 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd46) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_540 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd47) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_541 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd48) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_542 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd49) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_543 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd5) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_544 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd50) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_545 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd51) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_546 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd52) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_547 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd53) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_548 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd54) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_549 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd49) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_55 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd55) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_550 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd56) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_551 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd57) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_552 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd58) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_553 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd59) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_554 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd6) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_555 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd60) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_556 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd61) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_557 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd62) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_558 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd63) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_559 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd48) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_56 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd64) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_560 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd65) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_561 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd66) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_562 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd67) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_563 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd68) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_564 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd69) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_565 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd7) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_566 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd70) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_567 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd71) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_568 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd72) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_569 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd47) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_57 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd73) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_570 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd74) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_571 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd75) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_572 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd76) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_573 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd77) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_574 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd78) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_575 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd79) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_576 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd8) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_577 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd80) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_578 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd81) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_579 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd46) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_58 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd82) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_580 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd83) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_581 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd84) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_582 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd85) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_583 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd86) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_584 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd87) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_585 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd88) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_586 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd89) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_587 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd9) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_588 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd90) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_589 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd45) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_59 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd91) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_590 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd92) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_591 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd93) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_592 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd94) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_593 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd95) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_594 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd96) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_595 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd97) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_596 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd98) & (div_t_reg_10124 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_597 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & ((((((((((((((((((((((((((((((tmp_reg_10128 == 7'd126) & (div_t_reg_10124 == 2'd1)) | ((tmp_reg_10128 == 7'd127) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd125) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd124) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd123) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd122) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd121) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd120) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd119) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd118) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd117) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd116) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd115) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd114) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd113) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd112) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd111) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd110) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd109) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd108) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd107) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd106) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd105) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd104) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd103) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd102) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd101) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd100) & (div_t_reg_10124 == 2'd1))) | ((tmp_reg_10128 == 7'd99) & (div_t_reg_10124 == 2'd1))))) begin
        ref_patch_with_borde_598 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd0) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_599 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd93) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_6 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd44) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_60 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd1) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_600 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd10) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_601 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd11) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_602 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd12) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_603 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd13) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_604 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd14) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_605 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd15) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_606 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd16) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_607 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd17) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_608 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd18) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_609 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd43) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_61 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd19) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_610 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd2) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_611 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd20) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_612 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd21) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_613 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd22) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_614 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd23) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_615 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd24) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_616 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd25) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_617 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd26) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_618 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd27) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_619 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd42) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_62 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd28) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_620 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd29) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_621 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd3) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_622 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd30) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_623 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd31) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_624 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd32) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_625 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd33) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_626 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd34) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_627 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd35) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_628 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd36) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_629 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd41) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_63 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd37) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_630 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd38) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_631 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd39) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_632 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd4) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_633 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd40) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_634 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd41) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_635 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd42) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_636 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd43) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_637 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd44) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_638 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd45) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_639 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd40) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_64 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd46) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_640 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd47) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_641 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd48) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_642 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd49) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_643 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd5) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_644 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd50) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_645 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd51) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_646 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd52) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_647 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd53) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_648 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd54) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_649 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd4) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_65 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd55) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_650 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd56) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_651 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd57) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_652 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd58) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_653 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd59) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_654 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd6) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_655 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd60) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_656 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd61) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_657 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd62) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_658 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd63) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_659 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd39) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_66 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd64) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_660 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd65) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_661 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd66) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_662 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd67) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_663 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd68) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_664 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd69) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_665 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd7) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_666 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd70) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_667 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd71) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_668 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd72) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_669 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd38) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_67 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd73) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_670 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd74) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_671 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd75) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_672 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd76) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_673 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd77) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_674 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd78) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_675 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd79) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_676 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd8) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_677 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd80) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_678 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd81) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_679 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd37) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_68 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd82) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_680 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd83) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_681 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd84) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_682 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd85) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_683 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd86) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_684 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd87) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_685 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd88) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_686 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd89) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_687 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd9) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_688 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd90) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_689 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd36) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_69 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd91) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_690 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd92) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_691 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd93) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_692 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd94) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_693 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd95) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_694 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd96) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_695 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd97) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_696 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd98) & (div_t_reg_10124 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_697 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & ((((((((((((((((((((((((((((((tmp_reg_10128 == 7'd126) & (div_t_reg_10124 == 2'd2)) | ((tmp_reg_10128 == 7'd127) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd125) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd124) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd123) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd122) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd121) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd120) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd119) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd118) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd117) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd116) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd115) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd114) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd113) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd112) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd111) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd110) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd109) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd108) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd107) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd106) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd105) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd104) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd103) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd102) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd101) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd100) & (div_t_reg_10124 == 2'd2))) | ((tmp_reg_10128 == 7'd99) & (div_t_reg_10124 == 2'd2))))) begin
        ref_patch_with_borde_698 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd92) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_7 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd35) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_70 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd34) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_71 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd33) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_72 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd32) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_73 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd31) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_74 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd30) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_75 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd3) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_76 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd29) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_77 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd28) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_78 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd27) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_79 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd91) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_8 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd26) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_80 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd25) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_81 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd24) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_82 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd23) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_83 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd22) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_84 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd21) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_85 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd20) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_86 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd2) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_87 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd19) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_88 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd18) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_89 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd90) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_9 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd17) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_90 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd16) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_91 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd15) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_92 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd14) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_93 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd13) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_94 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd12) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_95 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd11) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_96 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd10) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_97 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd1) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_98 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_reg_10128 == 7'd0) & (div_t_reg_10124 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ref_patch_with_borde_99 <= patches_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state140) | ((exitcond_i_reg_10396 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001)))) begin
        reg_1755 <= grp_fu_1752_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state45) | ((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001)))) begin
        reg_1763 <= grp_fu_1721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage2_11001)))) begin
        reg_1771 <= grp_fu_1721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | ((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001)))) begin
        reg_1777 <= grp_fu_1721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_1783 <= grp_fu_1727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state78))) begin
        reg_1793 <= grp_fu_1727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_1801 <= grp_fu_1733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state65))) begin
        reg_1807 <= grp_fu_1721_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state144) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state65))) begin
        reg_1812 <= grp_fu_1708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state82))) begin
        reg_1819 <= grp_fu_1708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state90))) begin
        reg_1824 <= grp_fu_1748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_9718_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        tmp_11_reg_10551 <= tmp_11_fu_9838_p38;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_16_reg_10457 <= grp_fu_1733_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        tmp_17_reg_10477 <= grp_fu_1721_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        tmp_21_reg_10466 <= grp_fu_1727_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_22_reg_10472 <= grp_fu_1742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        tmp_24_reg_10483 <= grp_fu_1721_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        tmp_27_reg_10489 <= grp_fu_1721_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_30_reg_10495 <= grp_fu_1721_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        tmp_34_reg_10501 <= grp_fu_1716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_4457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        tmp_56_reg_10405 <= tmp_56_fu_7471_p2;
        tmp_69_reg_10410 <= tmp_69_fu_9463_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_10396 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        tmp_70_reg_10425 <= grp_fu_1752_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_10396_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001))) begin
        tmp_72_reg_10442 <= grp_fu_1708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_10396_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001))) begin
        tmp_74_reg_10447 <= grp_fu_1708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001))) begin
        tmp_75_reg_10432 <= grp_fu_1708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        tmp_78_reg_10437 <= grp_fu_1708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
        tmp_7_reg_10379[2 : 0] <= tmp_7_fu_4439_p1[2 : 0];
        tmp_80_reg_10384 <= tmp_80_fu_4443_p1;
        tmp_9_reg_10388 <= tmp_9_fu_4451_p2;
    end
end

always @ (*) begin
    if ((exitcond3_fu_1884_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_1901_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_4353_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_4457_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state32 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state32 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_9718_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state151 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state151 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_fu_9916_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state158 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state158 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state164) & (pos_r_BVALID == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_10396 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_i_0_i_phi_fu_1679_p4 = i_reg_10400;
    end else begin
        ap_phi_mux_i_0_i_phi_fu_1679_p4 = i_0_i_reg_1675;
    end
end

always @ (*) begin
    if (((exitcond3_reg_10096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_phi_fu_1551_p4 = indvar_next_reg_10100;
    end else begin
        ap_phi_mux_indvar_phi_fu_1551_p4 = indvar_reg_1547;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_10396_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2))) begin
        ap_phi_mux_tmp_10_phi_fu_1667_p4 = tmp_72_reg_10442;
    end else begin
        ap_phi_mux_tmp_10_phi_fu_1667_p4 = tmp_10_reg_1663;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_10396_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
        ap_phi_mux_tmp_2_phi_fu_1619_p4 = tmp_78_reg_10437;
    end else begin
        ap_phi_mux_tmp_2_phi_fu_1619_p4 = tmp_2_reg_1615;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_tmp_4_phi_fu_1643_p4 = tmp_75_reg_10432;
    end else begin
        ap_phi_mux_tmp_4_phi_fu_1643_p4 = tmp_4_reg_1639;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_10396_pp3_iter2_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3))) begin
        ap_phi_mux_tmp_5_phi_fu_1655_p4 = tmp_74_reg_10447;
    end else begin
        ap_phi_mux_tmp_5_phi_fu_1655_p4 = tmp_5_reg_1651;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state164) & (pos_r_BVALID == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_debug_AWREADY == 1'b0)) begin
        ap_sig_ioackin_debug_AWREADY = debug_AWREADY;
    end else begin
        ap_sig_ioackin_debug_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_debug_WREADY == 1'b0)) begin
        ap_sig_ioackin_debug_WREADY = debug_WREADY;
    end else begin
        ap_sig_ioackin_debug_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_patches_ARREADY == 1'b0)) begin
        ap_sig_ioackin_patches_ARREADY = patches_ARREADY;
    end else begin
        ap_sig_ioackin_patches_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pos_r_ARREADY == 1'b0)) begin
        ap_sig_ioackin_pos_r_ARREADY = pos_r_ARREADY;
    end else begin
        ap_sig_ioackin_pos_r_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pos_r_AWREADY == 1'b0)) begin
        ap_sig_ioackin_pos_r_AWREADY = pos_r_AWREADY;
    end else begin
        ap_sig_ioackin_pos_r_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pos_r_WREADY == 1'b0)) begin
        ap_sig_ioackin_pos_r_WREADY = pos_r_WREADY;
    end else begin
        ap_sig_ioackin_pos_r_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pyr_ARREADY == 1'b0)) begin
        ap_sig_ioackin_pyr_ARREADY = pyr_ARREADY;
    end else begin
        ap_sig_ioackin_pyr_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        converged_ap_vld = 1'b1;
    end else begin
        converged_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_4427_p2 == 1'd1) & (ap_reg_ioackin_debug_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state31))) begin
        debug_AWVALID = 1'b1;
    end else begin
        debug_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state157) & (debug_BVALID == 1'b1))) begin
        debug_BREADY = 1'b1;
    end else begin
        debug_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_reg_10542 == 1'd0) & (ap_reg_ioackin_debug_WREADY == 1'b0) & (1'b0 == ap_block_pp4_stage0_01001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        debug_WVALID = 1'b1;
    end else begin
        debug_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_4427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        debug_blk_n_AW = m_axi_debug_AWREADY;
    end else begin
        debug_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state157)) begin
        debug_blk_n_B = m_axi_debug_BVALID;
    end else begin
        debug_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (exitcond4_reg_10542 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        debug_blk_n_W = m_axi_debug_WREADY;
    end else begin
        debug_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state90))) begin
        grp_fu_1708_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state141) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | ((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage2_00001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage1_00001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1)) | ((exitcond_i_reg_10396 == 1'd0) & (1'b0 == ap_block_pp3_stage0_00001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage3_00001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3)))) begin
        grp_fu_1708_opcode = 2'd0;
    end else begin
        grp_fu_1708_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        grp_fu_1708_p0 = H_inv_0_0_reg_10506;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_1708_p0 = tmp_17_reg_10477;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_1708_p0 = tmp_30_reg_10495;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_1708_p0 = reg_1812;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_1708_p0 = reg_1801;
    end else if (((1'b1 == ap_CS_fsm_state90) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3)))) begin
        grp_fu_1708_p0 = reg_1771;
    end else if (((1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state79) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage2)))) begin
        grp_fu_1708_p0 = reg_1763;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_1708_p0 = tmp_70_reg_10425;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_1708_p0 = reg_1755;
    end else begin
        grp_fu_1708_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        grp_fu_1708_p1 = reg_1755;
    end else if ((1'b1 == ap_CS_fsm_state125)) begin
        grp_fu_1708_p1 = tmp_27_reg_10489;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_1708_p1 = tmp_21_reg_10466;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_fu_1708_p1 = reg_1783;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        grp_fu_1708_p1 = tmp_24_reg_10483;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_1708_p1 = reg_1793;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54))) begin
        grp_fu_1708_p1 = reg_1807;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_1708_p1 = tmp_22_reg_10472;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3))) begin
        grp_fu_1708_p1 = ap_phi_mux_tmp_5_phi_fu_1655_p4;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage2))) begin
        grp_fu_1708_p1 = ap_phi_mux_tmp_10_phi_fu_1667_p4;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_1708_p1 = ap_phi_mux_tmp_2_phi_fu_1619_p4;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_1708_p1 = ap_phi_mux_tmp_4_phi_fu_1643_p4;
    end else begin
        grp_fu_1708_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_1716_opcode = 2'd1;
    end else if (((exitcond_i_reg_10396_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_00001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_1716_opcode = 2'd0;
    end else begin
        grp_fu_1716_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_1716_p0 = reg_1793;
    end else if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_1716_p0 = reg_1777;
    end else begin
        grp_fu_1716_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_fu_1716_p1 = reg_1801;
    end else if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_1716_p1 = tmp_s_reg_1627;
    end else begin
        grp_fu_1716_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_1721_p0 = tmp_30_reg_10495;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_1721_p0 = tmp_27_reg_10489;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1721_p0 = tmp_24_reg_10483;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_1721_p0 = reg_1783;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_1721_p0 = tmp_17_reg_10477;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state101))) begin
        grp_fu_1721_p0 = reg_1777;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1721_p0 = tmp_10_reg_1663;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state77))) begin
        grp_fu_1721_p0 = reg_1763;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_1721_p0 = tmp_5_reg_1651;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage2))) begin
        grp_fu_1721_p0 = tmp_70_reg_10425;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1)))) begin
        grp_fu_1721_p0 = reg_1755;
    end else begin
        grp_fu_1721_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_1721_p1 = reg_1763;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1721_p1 = reg_1783;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state101))) begin
        grp_fu_1721_p1 = 32'd1115684864;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_1721_p1 = reg_1793;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state62))) begin
        grp_fu_1721_p1 = tmp_16_reg_10457;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1721_p1 = 32'd1048576000;
    end else if ((((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage2)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1)))) begin
        grp_fu_1721_p1 = tmp_70_reg_10425;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_1721_p1 = reg_1755;
    end else begin
        grp_fu_1721_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_1727_p0 = tmp_16_reg_10457;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_1727_p0 = reg_1793;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1727_p0 = tmp_s_reg_1627;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state101))) begin
        grp_fu_1727_p0 = reg_1783;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_1727_p0 = tmp_4_reg_1639;
    end else begin
        grp_fu_1727_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state101))) begin
        grp_fu_1727_p1 = reg_1783;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_1727_p1 = 32'd1115684864;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1727_p1 = 32'd1048576000;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_1727_p1 = reg_1763;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_1727_p1 = 32'd1056964608;
    end else begin
        grp_fu_1727_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_1733_p0 = tmp_16_reg_10457;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1733_p0 = reg_1771;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_1733_p0 = tmp_2_reg_1615;
    end else begin
        grp_fu_1733_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_1733_p1 = tmp_16_reg_10457;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1733_p1 = reg_1783;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_1733_p1 = 32'd1056964608;
    end else begin
        grp_fu_1733_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        grp_fu_1748_p0 = tmp_53_fu_9602_p1;
    end else if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state94))) begin
        grp_fu_1748_p0 = reg_1819;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_1748_p0 = tmp_44_fu_9507_p1;
    end else if ((1'b1 == ap_CS_fsm_state70)) begin
        grp_fu_1748_p0 = tmp_34_reg_10501;
    end else begin
        grp_fu_1748_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_1752_p0 = tmp_57_fu_9714_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2))) begin
        grp_fu_1752_p0 = tmp_85_fu_9473_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        grp_fu_1752_p0 = tmp_84_fu_9469_p1;
    end else begin
        grp_fu_1752_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_patches_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state12))) begin
        patches_ARVALID = 1'b1;
    end else begin
        patches_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_reg_10110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        patches_RREADY = 1'b1;
    end else begin
        patches_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        patches_blk_n_AR = m_axi_patches_ARREADY;
    end else begin
        patches_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond1_reg_10110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        patches_blk_n_R = m_axi_patches_RVALID;
    end else begin
        patches_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_pos_r_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state21))) begin
        pos_r_ARVALID = 1'b1;
    end else begin
        pos_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pos_r_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state137)) begin
            pos_r_AWADDR = pos_addr_1_reg_10526;
        end else if ((1'b1 == ap_CS_fsm_state153)) begin
            pos_r_AWADDR = pos_addr_reg_10077;
        end else begin
            pos_r_AWADDR = 'bx;
        end
    end else begin
        pos_r_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pos_r_AWREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state137)) begin
            pos_r_AWLEN = 32'd1;
        end else if ((1'b1 == ap_CS_fsm_state153)) begin
            pos_r_AWLEN = 32'd8;
        end else begin
            pos_r_AWLEN = 'bx;
        end
    end else begin
        pos_r_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_pos_r_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state137)) | ((ap_reg_ioackin_pos_r_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_state153)))) begin
        pos_r_AWVALID = 1'b1;
    end else begin
        pos_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state150) & (pos_r_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state164) & (pos_r_BVALID == 1'b1)))) begin
        pos_r_BREADY = 1'b1;
    end else begin
        pos_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        pos_r_RREADY = 1'b1;
    end else begin
        pos_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_pos_r_WREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_2015)) begin
            pos_r_WDATA = UnifiedRetVal_i_reg_10565;
        end else if ((1'b1 == ap_CS_fsm_state145)) begin
            pos_r_WDATA = reg_1812;
        end else begin
            pos_r_WDATA = 'bx;
        end
    end else begin
        pos_r_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_pos_r_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_state145)) | ((exitcond5_reg_10556 == 1'd0) & (ap_reg_ioackin_pos_r_WREADY == 1'b0) & (1'b0 == ap_block_pp5_stage0_01001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        pos_r_WVALID = 1'b1;
    end else begin
        pos_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        pos_r_blk_n_AR = m_axi_pos_r_ARREADY;
    end else begin
        pos_r_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state153))) begin
        pos_r_blk_n_AW = m_axi_pos_r_AWREADY;
    end else begin
        pos_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state150) | (1'b1 == ap_CS_fsm_state164))) begin
        pos_r_blk_n_B = m_axi_pos_r_BVALID;
    end else begin
        pos_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        pos_r_blk_n_R = m_axi_pos_r_RVALID;
    end else begin
        pos_r_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state145) | ((1'b0 == ap_block_pp5_stage0) & (exitcond5_reg_10556 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        pos_r_blk_n_W = m_axi_pos_r_WREADY;
    end else begin
        pos_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_pyr_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        pyr_ARVALID = 1'b1;
    end else begin
        pyr_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_10096 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pyr_RREADY = 1'b1;
    end else begin
        pyr_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        pyr_blk_n_AR = m_axi_pyr_ARREADY;
    end else begin
        pyr_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond3_reg_10096 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pyr_blk_n_R = m_axi_pyr_RVALID;
    end else begin
        pyr_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state136)) begin
        pyr_data_address0 = tmp_7_reg_10379;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pyr_data_address0 = indvar4_fu_1896_p1;
    end else begin
        pyr_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state136) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        pyr_data_ce0 = 1'b1;
    end else begin
        pyr_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_reg_10096_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pyr_data_we0 = 1'b1;
    end else begin
        pyr_data_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((transfer_pyr_read_read_fu_1416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((transfer_pyr_read_read_fu_1416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (ap_sig_ioackin_pyr_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((exitcond3_fu_1884_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((exitcond3_fu_1884_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (ap_sig_ioackin_patches_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((exitcond1_fu_1901_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((exitcond1_fu_1901_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (ap_sig_ioackin_pos_r_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((exitcond2_fu_4353_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((exitcond2_fu_4353_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((exitcond_fu_4427_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((exitcond_fu_4427_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31) & (1'b0 == ap_block_state31_io))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((exitcond_i_fu_4457_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((exitcond_i_fu_4457_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((~((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0)) & (1'b0 == ap_block_pp3_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            if (((1'b1 == ap_CS_fsm_state137) & (ap_sig_ioackin_pos_r_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            if (((1'b1 == ap_CS_fsm_state145) & (ap_sig_ioackin_pos_r_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state146;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state145;
            end
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            if (((1'b1 == ap_CS_fsm_state150) & (pos_r_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state150;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((exitcond4_fu_9718_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((exitcond4_fu_9718_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state153 : begin
            if (((1'b1 == ap_CS_fsm_state153) & (ap_sig_ioackin_pos_r_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state154;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state153;
            end
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            if (((1'b1 == ap_CS_fsm_state157) & (debug_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state157;
            end
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((exitcond5_fu_9916_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((exitcond5_fu_9916_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state160;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            if (((1'b1 == ap_CS_fsm_state164) & (pos_r_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state164;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign UnifiedRetVal_i_fu_10054_p3 = ((sel_tmp12_i_fu_10048_p2[0:0] === 1'b1) ? cur_px_estimate_3_0 : sel_tmp11_i_fu_10040_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd144];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state145 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state150 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state153 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state157 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd149];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd81];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond3_reg_10096 == 1'd0) & (pyr_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond3_reg_10096 == 1'd0) & (pyr_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((exitcond1_reg_10110 == 1'd0) & (patches_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((exitcond1_reg_10110 == 1'd0) & (patches_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((pos_r_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((pos_r_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_block_state152_io));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_block_state152_io));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_block_state159_io));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_block_state159_io));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((exitcond3_reg_10096 == 1'd0) & (pyr_RVALID == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state152_io = ((exitcond4_reg_10542 == 1'd0) & (ap_sig_ioackin_debug_WREADY == 1'b0));
end

assign ap_block_state152_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state159_io = ((exitcond5_reg_10556 == 1'd0) & (ap_sig_ioackin_pos_r_WREADY == 1'b0));
end

assign ap_block_state159_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp1_stage0_iter1 = ((exitcond1_reg_10110 == 1'd0) & (patches_RVALID == 1'b0));
end

assign ap_block_state28_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp2_stage0_iter1 = (pos_r_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state31_io = ((exitcond_fu_4427_p2 == 1'd1) & (ap_sig_ioackin_debug_AWREADY == 1'b0));
end

assign ap_block_state32_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp3_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp3_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp3_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp3_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2015 = ((exitcond5_reg_10556 == 1'd0) & (1'b0 == ap_block_pp5_stage0_01001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0));
end

always @ (*) begin
    ap_condition_7169 = ((exitcond4_reg_10542 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cur_px_estimate_ptr5_fu_1848_p4 = {{cur_px_estimate_ptr[63:2]}};

assign cur_px_estimate_ptr6_1_fu_9699_p2 = (tmp_82_cast_fu_9695_p1 + tmp_6_cast_reg_10072);

assign cur_px_estimate_ptr6_fu_9704_p1 = cur_px_estimate_ptr6_1_fu_9699_p2;

assign exitcond1_fu_1901_p2 = ((indvar1_reg_1559 == 9'd400) ? 1'b1 : 1'b0);

assign exitcond2_fu_4353_p2 = ((indvar3_reg_1592 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond3_fu_1884_p2 = ((ap_phi_mux_indvar_phi_fu_1551_p4 == 19'd473760) ? 1'b1 : 1'b0);

assign exitcond4_fu_9718_p2 = ((indvar6_reg_1686 == 6'd36) ? 1'b1 : 1'b0);

assign exitcond5_fu_9916_p2 = ((indvar8_reg_1697 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond_fu_4427_p2 = ((k_reg_1603 == 3'd4) ? 1'b1 : 1'b0);

assign exitcond_i_fu_4457_p2 = ((ap_phi_mux_i_0_i_phi_fu_1679_p4 == 7'd64) ? 1'b1 : 1'b0);

assign i_fu_4463_p2 = (ap_phi_mux_i_0_i_phi_fu_1679_p4 + 7'd1);

assign idx_urem_fu_1945_p3 = ((tmp_82_fu_1939_p2[0:0] === 1'b1) ? next_urem_fu_1933_p2 : 9'd0);

assign indvar4_fu_1896_p1 = indvar_reg_1547_pp0_iter1_reg;

assign indvar_next1_fu_1907_p2 = (indvar1_reg_1559 + 9'd1);

assign indvar_next2_fu_4359_p2 = (indvar3_reg_1592 + 4'd1);

assign indvar_next3_fu_9724_p2 = (indvar6_reg_1686 + 6'd1);

assign indvar_next4_fu_9922_p2 = (indvar8_reg_1697 + 4'd1);

assign indvar_next_fu_1890_p2 = (ap_phi_mux_indvar_phi_fu_1551_p4 + 19'd1);

assign inv_out7_fu_1828_p4 = {{inv_out[63:2]}};

assign k_1_fu_4433_p2 = (k_reg_1603 + 3'd1);

assign next_mul_fu_1913_p2 = (19'd656 + phi_mul_reg_1570);

assign next_urem_fu_1933_p2 = (phi_urem_reg_1581 + 9'd1);

assign sel_tmp10_i_fu_10034_p2 = ((tmp_86_fu_9928_p1 == 3'd5) ? 1'b1 : 1'b0);

assign sel_tmp11_i_fu_10040_p3 = ((sel_tmp10_i_fu_10034_p2[0:0] === 1'b1) ? cur_px_estimate_2_1 : sel_tmp9_i_fu_10026_p3);

assign sel_tmp12_i_fu_10048_p2 = ((tmp_86_fu_9928_p1 == 3'd6) ? 1'b1 : 1'b0);

assign sel_tmp1_i_fu_9970_p3 = ((sel_tmp_i_fu_9964_p2[0:0] === 1'b1) ? cur_px_estimate_0_0 : cur_px_estimate_3_1);

assign sel_tmp2_i_fu_9978_p2 = ((tmp_86_fu_9928_p1 == 3'd1) ? 1'b1 : 1'b0);

assign sel_tmp3_i_fu_9984_p3 = ((sel_tmp2_i_fu_9978_p2[0:0] === 1'b1) ? cur_px_estimate_0_1 : sel_tmp1_i_fu_9970_p3);

assign sel_tmp4_i_fu_9992_p2 = ((tmp_86_fu_9928_p1 == 3'd2) ? 1'b1 : 1'b0);

assign sel_tmp5_i_fu_9998_p3 = ((sel_tmp4_i_fu_9992_p2[0:0] === 1'b1) ? cur_px_estimate_1_0 : sel_tmp3_i_fu_9984_p3);

assign sel_tmp6_i_fu_10006_p2 = ((tmp_86_fu_9928_p1 == 3'd3) ? 1'b1 : 1'b0);

assign sel_tmp7_i_fu_10012_p3 = ((sel_tmp6_i_fu_10006_p2[0:0] === 1'b1) ? cur_px_estimate_1_1 : sel_tmp5_i_fu_9998_p3);

assign sel_tmp8_i_fu_10020_p2 = ((tmp_86_fu_9928_p1 == 3'd4) ? 1'b1 : 1'b0);

assign sel_tmp9_i_fu_10026_p3 = ((sel_tmp8_i_fu_10020_p2[0:0] === 1'b1) ? cur_px_estimate_2_0 : sel_tmp7_i_fu_10012_p3);

assign sel_tmp_i_fu_9964_p2 = ((tmp_86_fu_9928_p1 == 3'd0) ? 1'b1 : 1'b0);

assign tmp13_fu_4521_p2 = (5'd12 + tmp_60_cast_fu_4517_p1);

assign tmp37_cast_fu_4527_p1 = tmp13_fu_4521_p2;

assign tmp38_cast_fu_6610_p1 = tmp38_fu_6604_p2;

assign tmp38_fu_6604_p2 = (5'd10 + tmp_60_cast_fu_4517_p1);

assign tmp39_cast_fu_7483_p1 = tmp39_fu_7477_p2;

assign tmp39_fu_7477_p2 = ($signed(5'd21) + $signed(tmp_60_cast_fu_4517_p1));

assign tmp_1_fu_1838_p1 = inv_out7_fu_1828_p4;

assign tmp_36_fu_4483_p3 = {{tmp_79_fu_4473_p4}, {1'd0}};

assign tmp_37_fu_4495_p3 = {{tmp_79_fu_4473_p4}, {3'd0}};

assign tmp_38_fu_4507_p2 = (tmp_51_cast_fu_4503_p1 + tmp_47_cast_fu_4491_p1);

assign tmp_39_fu_4537_p1 = tmp_62_t_fu_4531_p2;

assign tmp_40_cast_fu_6600_p1 = tmp_45_fu_5794_p402;

assign tmp_44_fu_9507_p1 = tmp_44_neg_fu_9501_p2;

assign tmp_44_neg_fu_9501_p2 = (tmp_44_to_int_fu_9497_p1 ^ 32'd2147483648);

assign tmp_44_to_int_fu_9497_p1 = reg_1819;

assign tmp_45_fu_5794_p401 = (tmp_39_fu_4537_p1 + tmp_9_reg_10388);

assign tmp_47_cast_fu_4491_p1 = tmp_36_fu_4483_p3;

assign tmp_47_fu_6620_p1 = tmp_66_t_fu_6614_p2;

assign tmp_51_cast_fu_4503_p1 = tmp_37_fu_4495_p3;

assign tmp_53_fu_9602_p1 = tmp_53_neg_fu_9596_p2;

assign tmp_53_neg_fu_9596_p2 = (tmp_53_to_int_fu_9592_p1 ^ 32'd2147483648);

assign tmp_53_to_int_fu_9592_p1 = reg_1819;

assign tmp_54_fu_6661_p401 = (tmp_47_fu_6620_p1 + tmp_9_reg_10388);

assign tmp_56_fu_7471_p2 = (tmp_40_cast_fu_6600_p1 - tmp_64_cast_fu_7467_p1);

assign tmp_57_fu_9714_p1 = pyr_data_load_reg_10532;

assign tmp_60_cast1_fu_4513_p1 = tmp_83_fu_4469_p1;

assign tmp_60_cast_fu_4517_p1 = tmp_83_fu_4469_p1;

assign tmp_61_fu_4375_p1 = indvar3_reg_1592[0:0];

assign tmp_62_fu_7493_p1 = tmp_73_t_fu_7487_p2;

assign tmp_62_t_fu_4531_p2 = (tmp_38_fu_4507_p2 + tmp37_cast_fu_4527_p1);

assign tmp_64_cast_fu_7467_p1 = tmp_54_fu_6661_p402;

assign tmp_64_fu_7646_p401 = (tmp_62_fu_7493_p1 + tmp_9_reg_10388);

assign tmp_65_fu_8456_p2 = (tmp_38_fu_4507_p2 | 7'd1);

assign tmp_66_fu_8468_p1 = tmp_77_t_fu_8462_p2;

assign tmp_66_t_fu_6614_p2 = (tmp_38_fu_4507_p2 + tmp38_cast_fu_6610_p1);

assign tmp_68_fu_8653_p401 = (tmp_66_fu_8468_p1 + tmp_9_reg_10388);

assign tmp_69_fu_9463_p2 = (tmp_70_cast_fu_8452_p1 - tmp_75_cast_fu_9459_p1);

assign tmp_6_cast_fu_1862_p1 = cur_px_estimate_ptr5_fu_1848_p4;

assign tmp_6_fu_1858_p1 = cur_px_estimate_ptr5_fu_1848_p4;

assign tmp_70_cast_fu_8452_p1 = tmp_64_fu_7646_p402;

assign tmp_73_t_fu_7487_p2 = (tmp_38_fu_4507_p2 + tmp39_cast_fu_7483_p1);

assign tmp_75_cast_fu_9459_p1 = tmp_68_fu_8653_p402;

assign tmp_77_t_fu_8462_p2 = (tmp_60_cast1_fu_4513_p1 + tmp_65_fu_8456_p2);

assign tmp_79_fu_4473_p4 = {{ap_phi_mux_i_0_i_phi_fu_1679_p4[5:3]}};

assign tmp_7_fu_4439_p1 = k_reg_1603;

assign tmp_80_fu_4443_p1 = k_reg_1603[1:0];

assign tmp_81_fu_9687_p3 = {{k_reg_1603}, {1'd0}};

assign tmp_82_cast_fu_9695_p1 = tmp_81_fu_9687_p3;

assign tmp_82_fu_1939_p2 = ((next_urem_fu_1933_p2 < 9'd100) ? 1'b1 : 1'b0);

assign tmp_83_fu_4469_p1 = ap_phi_mux_i_0_i_phi_fu_1679_p4[2:0];

assign tmp_84_fu_9469_p1 = $signed(tmp_56_reg_10405);

assign tmp_85_fu_9473_p1 = $signed(tmp_69_reg_10410);

assign tmp_86_fu_9928_p1 = indvar8_reg_1697[2:0];

assign tmp_9_fu_4451_p1 = tmp_9_fu_4451_p10;

assign tmp_9_fu_4451_p10 = tmp_80_fu_4443_p1;

assign tmp_9_fu_4451_p2 = (9'd100 * tmp_9_fu_4451_p1);

assign tmp_fu_1929_p1 = phi_urem_reg_1581[6:0];

assign transfer_pyr_read_read_fu_1416_p2 = transfer_pyr;

always @ (posedge ap_clk) begin
    debug_addr_reg_10066[63:62] <= 2'b00;
    tmp_6_cast_reg_10072[62] <= 1'b0;
    pos_addr_reg_10077[63:62] <= 2'b00;
    tmp_7_reg_10379[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    pos_addr_1_reg_10526[63] <= 1'b0;
end

endmodule //batch_align2D
