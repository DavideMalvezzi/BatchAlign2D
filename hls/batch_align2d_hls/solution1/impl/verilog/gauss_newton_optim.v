// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gauss_newton_optim (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        p_read30,
        p_read31,
        p_read32,
        p_read33,
        p_read34,
        p_read35,
        p_read36,
        p_read37,
        p_read38,
        p_read39,
        p_read40,
        p_read41,
        p_read42,
        p_read43,
        p_read44,
        p_read45,
        p_read46,
        p_read47,
        p_read48,
        p_read49,
        p_read50,
        p_read51,
        p_read52,
        p_read53,
        p_read54,
        p_read55,
        p_read56,
        p_read57,
        p_read58,
        p_read59,
        p_read60,
        p_read61,
        p_read62,
        p_read63,
        p_read64,
        p_read65,
        p_read66,
        p_read67,
        p_read68,
        p_read69,
        p_read70,
        p_read71,
        p_read72,
        p_read73,
        p_read74,
        p_read75,
        p_read76,
        p_read77,
        p_read78,
        p_read79,
        p_read80,
        p_read81,
        p_read82,
        p_read83,
        p_read84,
        p_read85,
        p_read86,
        p_read87,
        p_read88,
        p_read89,
        p_read90,
        p_read91,
        p_read92,
        p_read93,
        p_read94,
        p_read95,
        p_read96,
        p_read97,
        p_read98,
        p_read99,
        img_w,
        p_read100,
        p_read101,
        p_read102,
        p_read103,
        p_read104,
        p_read105,
        p_read106,
        p_read107,
        p_read108,
        p_read109,
        p_read110,
        p_read111,
        p_read112,
        p_read113,
        p_read114,
        p_read115,
        p_read116,
        p_read117,
        p_read118,
        p_read119,
        p_read120,
        p_read121,
        p_read122,
        p_read123,
        p_read124,
        p_read125,
        p_read126,
        p_read127,
        p_read128,
        p_read129,
        p_read130,
        p_read131,
        p_read132,
        p_read133,
        p_read134,
        p_read135,
        p_read136,
        p_read137,
        p_read138,
        p_read139,
        p_read140,
        p_read141,
        p_read142,
        p_read143,
        p_read144,
        p_read145,
        p_read146,
        p_read147,
        p_read148,
        p_read149,
        p_read150,
        p_read151,
        p_read152,
        p_read153,
        p_read154,
        p_read155,
        p_read156,
        p_read157,
        p_read158,
        p_read159,
        p_read160,
        p_read161,
        p_read162,
        p_read163,
        p_read164,
        p_read165,
        p_read166,
        p_read167,
        p_read168,
        p_read169,
        p_read170,
        p_read171,
        p_read172,
        cur_px_estimate_0_r,
        cur_px_estimate_1_r,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 68'd1;
parameter    ap_ST_fsm_state2 = 68'd2;
parameter    ap_ST_fsm_state3 = 68'd4;
parameter    ap_ST_fsm_state4 = 68'd8;
parameter    ap_ST_fsm_state5 = 68'd16;
parameter    ap_ST_fsm_state6 = 68'd32;
parameter    ap_ST_fsm_state7 = 68'd64;
parameter    ap_ST_fsm_state8 = 68'd128;
parameter    ap_ST_fsm_state9 = 68'd256;
parameter    ap_ST_fsm_state10 = 68'd512;
parameter    ap_ST_fsm_state11 = 68'd1024;
parameter    ap_ST_fsm_state12 = 68'd2048;
parameter    ap_ST_fsm_state13 = 68'd4096;
parameter    ap_ST_fsm_state14 = 68'd8192;
parameter    ap_ST_fsm_state15 = 68'd16384;
parameter    ap_ST_fsm_state16 = 68'd32768;
parameter    ap_ST_fsm_state17 = 68'd65536;
parameter    ap_ST_fsm_state18 = 68'd131072;
parameter    ap_ST_fsm_state19 = 68'd262144;
parameter    ap_ST_fsm_state20 = 68'd524288;
parameter    ap_ST_fsm_state21 = 68'd1048576;
parameter    ap_ST_fsm_state22 = 68'd2097152;
parameter    ap_ST_fsm_state23 = 68'd4194304;
parameter    ap_ST_fsm_state24 = 68'd8388608;
parameter    ap_ST_fsm_state25 = 68'd16777216;
parameter    ap_ST_fsm_state26 = 68'd33554432;
parameter    ap_ST_fsm_state27 = 68'd67108864;
parameter    ap_ST_fsm_state28 = 68'd134217728;
parameter    ap_ST_fsm_state29 = 68'd268435456;
parameter    ap_ST_fsm_state30 = 68'd536870912;
parameter    ap_ST_fsm_state31 = 68'd1073741824;
parameter    ap_ST_fsm_state32 = 68'd2147483648;
parameter    ap_ST_fsm_state33 = 68'd4294967296;
parameter    ap_ST_fsm_state34 = 68'd8589934592;
parameter    ap_ST_fsm_state35 = 68'd17179869184;
parameter    ap_ST_fsm_state36 = 68'd34359738368;
parameter    ap_ST_fsm_state37 = 68'd68719476736;
parameter    ap_ST_fsm_state38 = 68'd137438953472;
parameter    ap_ST_fsm_state39 = 68'd274877906944;
parameter    ap_ST_fsm_state40 = 68'd549755813888;
parameter    ap_ST_fsm_state41 = 68'd1099511627776;
parameter    ap_ST_fsm_state42 = 68'd2199023255552;
parameter    ap_ST_fsm_state43 = 68'd4398046511104;
parameter    ap_ST_fsm_state44 = 68'd8796093022208;
parameter    ap_ST_fsm_state45 = 68'd17592186044416;
parameter    ap_ST_fsm_state46 = 68'd35184372088832;
parameter    ap_ST_fsm_state47 = 68'd70368744177664;
parameter    ap_ST_fsm_state48 = 68'd140737488355328;
parameter    ap_ST_fsm_state49 = 68'd281474976710656;
parameter    ap_ST_fsm_state50 = 68'd562949953421312;
parameter    ap_ST_fsm_state51 = 68'd1125899906842624;
parameter    ap_ST_fsm_state52 = 68'd2251799813685248;
parameter    ap_ST_fsm_state53 = 68'd4503599627370496;
parameter    ap_ST_fsm_state54 = 68'd9007199254740992;
parameter    ap_ST_fsm_state55 = 68'd18014398509481984;
parameter    ap_ST_fsm_state56 = 68'd36028797018963968;
parameter    ap_ST_fsm_state57 = 68'd72057594037927936;
parameter    ap_ST_fsm_state58 = 68'd144115188075855872;
parameter    ap_ST_fsm_state59 = 68'd288230376151711744;
parameter    ap_ST_fsm_state60 = 68'd576460752303423488;
parameter    ap_ST_fsm_state61 = 68'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 68'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 68'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 68'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 68'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 68'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 68'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 68'd147573952589676412928;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
input  [7:0] p_read16;
input  [7:0] p_read17;
input  [7:0] p_read18;
input  [7:0] p_read19;
input  [7:0] p_read20;
input  [7:0] p_read21;
input  [7:0] p_read22;
input  [7:0] p_read23;
input  [7:0] p_read24;
input  [7:0] p_read25;
input  [7:0] p_read26;
input  [7:0] p_read27;
input  [7:0] p_read28;
input  [7:0] p_read29;
input  [7:0] p_read30;
input  [7:0] p_read31;
input  [7:0] p_read32;
input  [7:0] p_read33;
input  [7:0] p_read34;
input  [7:0] p_read35;
input  [7:0] p_read36;
input  [7:0] p_read37;
input  [7:0] p_read38;
input  [7:0] p_read39;
input  [7:0] p_read40;
input  [7:0] p_read41;
input  [7:0] p_read42;
input  [7:0] p_read43;
input  [7:0] p_read44;
input  [7:0] p_read45;
input  [7:0] p_read46;
input  [7:0] p_read47;
input  [7:0] p_read48;
input  [7:0] p_read49;
input  [7:0] p_read50;
input  [7:0] p_read51;
input  [7:0] p_read52;
input  [7:0] p_read53;
input  [7:0] p_read54;
input  [7:0] p_read55;
input  [7:0] p_read56;
input  [7:0] p_read57;
input  [7:0] p_read58;
input  [7:0] p_read59;
input  [7:0] p_read60;
input  [7:0] p_read61;
input  [7:0] p_read62;
input  [7:0] p_read63;
input  [7:0] p_read64;
input  [7:0] p_read65;
input  [7:0] p_read66;
input  [7:0] p_read67;
input  [7:0] p_read68;
input  [7:0] p_read69;
input  [7:0] p_read70;
input  [7:0] p_read71;
input  [7:0] p_read72;
input  [7:0] p_read73;
input  [7:0] p_read74;
input  [7:0] p_read75;
input  [7:0] p_read76;
input  [7:0] p_read77;
input  [7:0] p_read78;
input  [7:0] p_read79;
input  [7:0] p_read80;
input  [7:0] p_read81;
input  [7:0] p_read82;
input  [7:0] p_read83;
input  [7:0] p_read84;
input  [7:0] p_read85;
input  [7:0] p_read86;
input  [7:0] p_read87;
input  [7:0] p_read88;
input  [7:0] p_read89;
input  [7:0] p_read90;
input  [7:0] p_read91;
input  [7:0] p_read92;
input  [7:0] p_read93;
input  [7:0] p_read94;
input  [7:0] p_read95;
input  [7:0] p_read96;
input  [7:0] p_read97;
input  [7:0] p_read98;
input  [7:0] p_read99;
input  [15:0] img_w;
input  [31:0] p_read100;
input  [31:0] p_read101;
input  [31:0] p_read102;
input  [31:0] p_read103;
input  [31:0] p_read104;
input  [31:0] p_read105;
input  [31:0] p_read106;
input  [31:0] p_read107;
input  [31:0] p_read108;
input  [31:0] p_read109;
input  [31:0] p_read110;
input  [31:0] p_read111;
input  [31:0] p_read112;
input  [31:0] p_read113;
input  [31:0] p_read114;
input  [31:0] p_read115;
input  [31:0] p_read116;
input  [31:0] p_read117;
input  [31:0] p_read118;
input  [31:0] p_read119;
input  [31:0] p_read120;
input  [31:0] p_read121;
input  [31:0] p_read122;
input  [31:0] p_read123;
input  [31:0] p_read124;
input  [31:0] p_read125;
input  [31:0] p_read126;
input  [31:0] p_read127;
input  [31:0] p_read128;
input  [31:0] p_read129;
input  [31:0] p_read130;
input  [31:0] p_read131;
input  [31:0] p_read132;
input  [31:0] p_read133;
input  [31:0] p_read134;
input  [31:0] p_read135;
input  [31:0] p_read136;
input  [31:0] p_read137;
input  [31:0] p_read138;
input  [31:0] p_read139;
input  [31:0] p_read140;
input  [31:0] p_read141;
input  [31:0] p_read142;
input  [31:0] p_read143;
input  [31:0] p_read144;
input  [31:0] p_read145;
input  [31:0] p_read146;
input  [31:0] p_read147;
input  [31:0] p_read148;
input  [31:0] p_read149;
input  [31:0] p_read150;
input  [31:0] p_read151;
input  [31:0] p_read152;
input  [31:0] p_read153;
input  [31:0] p_read154;
input  [31:0] p_read155;
input  [31:0] p_read156;
input  [31:0] p_read157;
input  [31:0] p_read158;
input  [31:0] p_read159;
input  [31:0] p_read160;
input  [31:0] p_read161;
input  [31:0] p_read162;
input  [31:0] p_read163;
input  [31:0] p_read164;
input  [31:0] p_read165;
input  [31:0] p_read166;
input  [31:0] p_read167;
input  [31:0] p_read168;
input  [31:0] p_read169;
input  [31:0] p_read170;
input  [31:0] p_read171;
input  [31:0] p_read172;
input  [31:0] cur_px_estimate_0_r;
input  [31:0] cur_px_estimate_1_r;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [67:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] mask_table2_address0;
reg    mask_table2_ce0;
wire   [22:0] mask_table2_q0;
wire   [4:0] mask_table2_address1;
reg    mask_table2_ce1;
wire   [22:0] mask_table2_q1;
wire   [31:0] grp_fu_2001_p1;
reg   [31:0] reg_2052;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state39;
wire   [31:0] grp_fu_2004_p1;
reg   [31:0] reg_2058;
wire   [31:0] grp_fu_1966_p2;
reg   [31:0] reg_2064;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state67;
wire   [31:0] grp_fu_1983_p2;
reg   [31:0] reg_2071;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state64;
wire   [31:0] grp_fu_1987_p2;
reg   [31:0] reg_2078;
reg   [31:0] reg_2084;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state51;
wire   [1:0] indvarinc_fu_2102_p2;
wire    ap_CS_fsm_state2;
wire  signed [6:0] tmp_3_fu_2181_p1;
reg  signed [6:0] tmp_3_reg_5127;
wire   [0:0] tmp_s_fu_2160_p2;
wire   [3:0] iter_1_fu_2205_p2;
reg   [3:0] iter_1_reg_5137;
wire    ap_CS_fsm_state3;
reg   [0:0] p_Result_s_reg_5142;
wire   [0:0] exitcond3_fu_2199_p2;
reg   [7:0] tmp_V_reg_5151;
wire   [22:0] tmp_V_1_fu_2233_p1;
reg   [22:0] tmp_V_1_reg_5159;
wire   [30:0] tmp_15_fu_2252_p1;
reg   [30:0] tmp_15_reg_5170;
reg   [0:0] p_Result_14_reg_5175;
reg   [7:0] tmp_V_6_reg_5184;
wire   [22:0] tmp_V_7_fu_2278_p1;
reg   [22:0] tmp_V_7_reg_5192;
wire   [30:0] tmp_77_fu_2297_p1;
reg   [30:0] tmp_77_reg_5203;
wire   [31:0] p_Val2_30_fu_2617_p3;
reg   [31:0] p_Val2_30_reg_5208;
wire    ap_CS_fsm_state4;
wire   [31:0] p_Val2_32_fu_2929_p3;
reg   [31:0] p_Val2_32_reg_5213;
wire   [6:0] tmp_84_fu_2937_p1;
reg   [6:0] tmp_84_reg_5218;
wire   [6:0] tmp_85_fu_2941_p1;
reg   [6:0] tmp_85_reg_5223;
wire   [31:0] grp_fu_1971_p2;
reg   [31:0] subpix_y_reg_5228;
wire   [63:0] tmp_8_fu_2022_p1;
reg   [63:0] tmp_8_reg_5234;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_16_fu_2025_p1;
reg   [63:0] tmp_16_reg_5240;
wire   [63:0] grp_fu_2028_p2;
reg   [63:0] tmp_10_reg_5246;
wire    ap_CS_fsm_state16;
wire   [63:0] grp_fu_2034_p2;
reg   [63:0] tmp_17_reg_5252;
wire   [63:0] grp_fu_2040_p2;
reg   [63:0] tmp_18_reg_5258;
wire    ap_CS_fsm_state21;
wire   [63:0] grp_fu_2044_p2;
reg   [63:0] tmp_19_reg_5263;
wire   [63:0] grp_fu_2048_p2;
reg   [63:0] tmp_20_reg_5268;
wire   [31:0] wTL_fu_2013_p1;
reg   [31:0] wTL_reg_5273;
wire    ap_CS_fsm_state22;
wire   [31:0] wTR_fu_2016_p1;
reg   [31:0] wTR_reg_5278;
wire   [31:0] wBL_fu_2019_p1;
reg   [31:0] wBL_reg_5283;
wire   [3:0] y_1_fu_2951_p2;
reg   [3:0] y_1_reg_5291;
wire    ap_CS_fsm_state23;
wire   [5:0] p_shl_fu_2971_p3;
reg   [5:0] p_shl_reg_5296;
wire   [0:0] exitcond2_fu_2945_p2;
wire  signed [6:0] grp_fu_3793_p4;
reg  signed [6:0] tmp46_reg_5301;
wire   [6:0] tmp62_fu_2993_p2;
reg   [6:0] tmp62_reg_5306;
wire   [3:0] x_fu_3020_p2;
reg   [3:0] x_reg_5314;
wire    ap_CS_fsm_state24;
wire   [7:0] tmp_35_fu_3026_p102;
reg   [7:0] tmp_35_reg_5319;
wire   [0:0] exitcond4_fu_3014_p2;
wire   [7:0] tmp_39_fu_3138_p102;
reg   [7:0] tmp_39_reg_5324;
wire   [7:0] tmp_43_fu_3249_p102;
reg   [7:0] tmp_43_reg_5329;
wire   [7:0] tmp_47_fu_3360_p102;
reg   [7:0] tmp_47_reg_5334;
wire   [7:0] tmp_52_fu_3485_p102;
reg   [7:0] tmp_52_reg_5339;
wire   [31:0] tmp_58_fu_3600_p66;
reg   [31:0] tmp_58_reg_5344;
wire   [31:0] tmp_36_fu_3670_p1;
wire    ap_CS_fsm_state25;
wire   [31:0] tmp_40_fu_3674_p1;
wire   [31:0] grp_fu_2007_p1;
reg   [31:0] tmp_45_reg_5369;
wire   [31:0] grp_fu_2010_p1;
reg   [31:0] tmp_49_reg_5374;
wire   [31:0] grp_fu_1991_p2;
reg   [31:0] tmp_46_reg_5379;
wire   [31:0] grp_fu_1995_p2;
reg   [31:0] tmp59_reg_5384;
reg   [31:0] tmp_50_reg_5389;
wire    ap_CS_fsm_state31;
reg   [31:0] tmp61_reg_5394;
wire    ap_CS_fsm_state35;
wire   [31:0] tmp_53_fu_3686_p1;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
reg   [31:0] update_2_2_load_reg_5430;
wire   [3:0] i_0_i_cast_fu_3701_p1;
reg   [3:0] i_0_i_cast_reg_5437;
wire   [1:0] i_fu_3711_p2;
reg   [1:0] i_reg_5445;
wire   [3:0] tmp_60_fu_3725_p2;
reg   [3:0] tmp_60_reg_5450;
wire    ap_CS_fsm_state55;
wire   [1:0] j_fu_3736_p2;
reg   [1:0] j_reg_5458;
wire    ap_CS_fsm_state56;
wire   [31:0] tmp_64_fu_3751_p11;
reg   [31:0] tmp_64_reg_5463;
wire   [0:0] exitcond_i_fu_3730_p2;
wire   [31:0] tmp_65_fu_3766_p5;
reg   [31:0] tmp_65_reg_5468;
reg   [31:0] update_0_reg_5473;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state68;
reg   [1:0] invdar_reg_1591;
reg   [31:0] mean_diff_reg_1602;
reg   [31:0] x_assign_reg_1614;
reg   [31:0] x_assign_1_reg_1624;
reg   [3:0] iter_reg_1634;
reg   [31:0] Jres_2_reg_1645;
reg   [31:0] Jres_1_reg_1657;
reg   [31:0] Jres_0_reg_1669;
reg   [31:0] tmp_23_reg_1681;
reg   [31:0] tmp_24_reg_1693;
reg   [31:0] tmp_25_reg_1705;
reg   [3:0] y_reg_1717;
reg   [31:0] Jres_2_s_reg_1728;
reg   [31:0] Jres_1_s_reg_1740;
reg   [31:0] Jres_0_s_reg_1752;
reg   [31:0] tmp_30_reg_1764;
reg   [31:0] tmp_31_reg_1776;
reg   [31:0] tmp_32_reg_1788;
reg   [3:0] it_0_rec_reg_1800;
wire   [1:0] ap_phi_mux_i_0_i_phi_fu_1815_p4;
reg   [1:0] i_0_i_reg_1811;
reg   [31:0] update_2_4_reg_1823;
wire   [0:0] exitcond1_i_fu_3705_p2;
reg   [31:0] update_1_4_reg_1837;
reg   [31:0] update_0_4_reg_1851;
reg   [31:0] update_2_5_reg_1865;
wire    ap_CS_fsm_state63;
reg   [31:0] update_1_5_reg_1876;
reg   [31:0] update_0_5_reg_1887;
reg   [31:0] tmp_61_reg_1898;
reg   [1:0] j_0_i_reg_1910;
reg   [31:0] update_2_5_be_reg_1921;
reg   [31:0] update_1_5_be_reg_1936;
reg   [31:0] update_0_5_be_reg_1951;
wire   [63:0] tmp_8_i_fu_2247_p1;
wire   [63:0] tmp_8_i1_fu_2292_p1;
reg   [31:0] update_fu_486;
wire   [31:0] update_0_1_fu_2128_p3;
reg   [31:0] update_1_fu_490;
wire   [31:0] update_1_1_fu_2136_p3;
reg   [31:0] update_2_fu_494;
wire   [31:0] update_2_1_fu_2152_p3;
reg   [31:0] update_2_15_fu_498;
reg   [31:0] update_2_1_16_fu_502;
reg   [31:0] update_2_2_fu_506;
reg   [31:0] grp_fu_1966_p0;
reg   [31:0] grp_fu_1966_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state65;
reg   [31:0] grp_fu_1971_p0;
reg   [31:0] grp_fu_1971_p1;
reg   [31:0] grp_fu_1983_p0;
reg   [31:0] grp_fu_1983_p1;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state57;
reg   [31:0] grp_fu_1987_p0;
reg   [31:0] grp_fu_1987_p1;
reg   [31:0] grp_fu_2001_p0;
wire    ap_CS_fsm_state5;
reg   [31:0] grp_fu_2004_p0;
wire   [31:0] grp_fu_2007_p0;
wire   [31:0] grp_fu_2010_p0;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_fu_2108_p2;
wire   [0:0] tmp_2_fu_2122_p2;
wire   [31:0] tmp_1_fu_2114_p3;
wire   [31:0] tmp_7_fu_2144_p3;
wire   [31:0] p_Val2_s_fu_2211_p1;
wire   [4:0] index_V_fu_2237_p4;
wire   [31:0] p_Val2_15_fu_2256_p1;
wire   [4:0] index_V_1_fu_2282_p4;
wire   [31:0] p_Result_10_fu_2334_p3;
wire   [31:0] mask_i_cast_fu_2330_p1;
wire   [31:0] p_Val2_5_fu_2341_p2;
wire   [22:0] tmp_V_3_fu_2365_p1;
wire   [7:0] tmp_V_2_fu_2355_p4;
wire   [0:0] p_Result_11_fu_2347_p3;
wire   [22:0] xs_sig_V_1_fu_2369_p3;
wire   [22:0] tmp_i_18_fu_2386_p2;
wire   [0:0] xs_sign_V_9_fu_2381_p2;
wire   [7:0] xs_exp_V_7_fu_2375_p3;
wire   [22:0] xs_sig_V_fu_2392_p2;
wire   [0:0] tmp_i_fu_2313_p2;
wire   [0:0] tmp_5_i_fu_2318_p2;
wire   [0:0] sel_tmp2_demorgan_i_fu_2408_p2;
wire   [31:0] p_Result_9_fu_2323_p3;
wire   [31:0] p_Result_12_fu_2398_p4;
wire   [31:0] sel_tmp3_v_i_fu_2414_p3;
wire   [0:0] sel_tmp4_i_fu_2426_p2;
wire   [0:0] sel_tmp5_i_fu_2432_p2;
wire   [31:0] sel_tmp3_i_fu_2422_p1;
wire   [0:0] notrhs_i_fu_2451_p2;
wire   [0:0] notlhs_i_fu_2446_p2;
wire   [0:0] sel_tmp8_i_fu_2456_p2;
wire   [0:0] tmp4_fu_2462_p2;
wire   [31:0] sel_tmp6_i_fu_2438_p3;
wire   [0:0] sel_tmp9_i_fu_2467_p2;
wire   [31:0] tmp_9_fu_2473_p1;
wire   [31:0] p_Val2_9_fu_2477_p3;
wire   [22:0] tmp_V_5_fu_2503_p1;
wire   [24:0] mantissa_V_fu_2507_p4;
wire   [7:0] tmp_V_4_fu_2493_p4;
wire   [8:0] tmp_i_i_i_i_cast_fu_2521_p1;
wire   [8:0] sh_assign_fu_2525_p2;
wire   [7:0] tmp_i_i_i_fu_2539_p2;
wire   [0:0] isNeg_fu_2531_p3;
wire  signed [8:0] tmp_i_i_i_cast_fu_2545_p1;
wire  signed [8:0] ush_fu_2549_p3;
wire  signed [31:0] sh_assign_2_cast_fu_2557_p1;
wire  signed [24:0] sh_assign_2_cast_cas_fu_2561_p1;
wire   [78:0] mantissa_V_1_cast1_fu_2517_p1;
wire   [78:0] tmp_i_i_i_19_fu_2565_p1;
wire   [24:0] r_V_fu_2569_p2;
wire   [0:0] tmp_74_fu_2581_p3;
wire   [78:0] r_V_1_fu_2575_p2;
wire   [31:0] tmp_13_fu_2589_p1;
wire   [31:0] tmp_21_fu_2593_p4;
wire   [31:0] p_Val2_29_fu_2603_p3;
wire   [0:0] p_Result_13_fu_2485_p3;
wire   [31:0] result_V_1_fu_2611_p2;
wire   [31:0] p_Result_16_fu_2646_p3;
wire   [31:0] mask_i186_cast_fu_2642_p1;
wire   [31:0] p_Val2_20_fu_2653_p2;
wire   [22:0] tmp_V_9_fu_2677_p1;
wire   [7:0] tmp_V_8_fu_2667_p4;
wire   [0:0] p_Result_17_fu_2659_p3;
wire   [22:0] xs_sig_V_4_fu_2681_p3;
wire   [22:0] tmp_i1_20_fu_2698_p2;
wire   [0:0] xs_sign_V_10_fu_2693_p2;
wire   [7:0] xs_exp_V_8_fu_2687_p3;
wire   [22:0] xs_sig_V_9_fu_2704_p2;
wire   [0:0] tmp_i1_fu_2625_p2;
wire   [0:0] tmp_5_i1_fu_2630_p2;
wire   [0:0] sel_tmp2_demorgan_i1_fu_2720_p2;
wire   [31:0] p_Result_15_fu_2635_p3;
wire   [31:0] p_Result_18_fu_2710_p4;
wire   [31:0] sel_tmp3_v_i1_fu_2726_p3;
wire   [0:0] sel_tmp4_i1_fu_2738_p2;
wire   [0:0] sel_tmp5_i1_fu_2744_p2;
wire   [31:0] sel_tmp3_i1_fu_2734_p1;
wire   [0:0] notrhs_i1_fu_2763_p2;
wire   [0:0] notlhs_i1_fu_2758_p2;
wire   [0:0] sel_tmp8_i1_fu_2768_p2;
wire   [0:0] tmp31_fu_2774_p2;
wire   [31:0] sel_tmp6_i1_fu_2750_p3;
wire   [0:0] sel_tmp9_i1_fu_2779_p2;
wire   [31:0] tmp_22_fu_2785_p1;
wire   [31:0] p_Val2_24_fu_2789_p3;
wire   [22:0] tmp_V_11_fu_2815_p1;
wire   [24:0] mantissa_V_1_fu_2819_p4;
wire   [7:0] tmp_V_10_fu_2805_p4;
wire   [8:0] tmp_i_i_i_i1_cast_fu_2833_p1;
wire   [8:0] sh_assign_3_fu_2837_p2;
wire   [7:0] tmp_i_i_i1_fu_2851_p2;
wire   [0:0] isNeg_1_fu_2843_p3;
wire  signed [8:0] tmp_i_i_i1_cast_fu_2857_p1;
wire  signed [8:0] ush_1_fu_2861_p3;
wire  signed [31:0] sh_assign_5_cast_fu_2869_p1;
wire  signed [24:0] sh_assign_5_cast_cas_fu_2873_p1;
wire   [78:0] mantissa_V_3_cast1_fu_2829_p1;
wire   [78:0] tmp_i_i_i1_21_fu_2877_p1;
wire   [24:0] r_V_2_fu_2881_p2;
wire   [0:0] tmp_83_fu_2893_p3;
wire   [78:0] r_V_3_fu_2887_p2;
wire   [31:0] tmp_26_fu_2901_p1;
wire   [31:0] tmp_28_fu_2905_p4;
wire   [31:0] p_Val2_31_fu_2915_p3;
wire   [0:0] p_Result_19_fu_2797_p3;
wire   [31:0] result_V_3_fu_2923_p2;
wire   [2:0] tmp_86_fu_2957_p1;
wire  signed [2:0] tmp45_fu_2961_p2;
wire   [3:0] tmp_87_fu_2983_p2;
wire   [6:0] tmp_12_fu_2979_p1;
wire   [6:0] tmp_13_cast_fu_2989_p1;
wire   [3:0] tmp47_fu_2999_p2;
wire  signed [6:0] tmp217_cast_fu_3005_p1;
(* use_dsp48 = "no" *) wire   [6:0] sum_t_fu_3009_p2;
wire   [6:0] sum6_t_fu_3132_p2;
wire   [6:0] tmp_43_fu_3249_p101;
wire   [6:0] tmp_47_fu_3360_p101;
wire   [4:0] tmp_58_cast_fu_3466_p1;
wire   [4:0] tmp63_fu_3470_p2;
wire   [6:0] tmp223_cast_fu_3476_p1;
wire   [6:0] tmp_52_fu_3485_p101;
wire   [5:0] tmp_56_fu_3591_p1;
wire   [5:0] tmp_58_fu_3600_p65;
wire   [3:0] p_shl2_fu_3717_p3;
wire   [3:0] tmp_62_fu_3742_p1;
wire   [3:0] tmp_64_fu_3751_p10;
reg   [1:0] grp_fu_1966_opcode;
reg   [1:0] grp_fu_1971_opcode;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [67:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 68'd1;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
end

gauss_newton_optim_mask_table2 #(
    .DataWidth( 23 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mask_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table2_address0),
    .ce0(mask_table2_ce0),
    .q0(mask_table2_q0),
    .address1(mask_table2_address1),
    .ce1(mask_table2_ce1),
    .q1(mask_table2_q1)
);

batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1966_p0),
    .din1(grp_fu_1966_p1),
    .opcode(grp_fu_1966_opcode),
    .ce(1'b1),
    .dout(grp_fu_1966_p2)
);

batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_faddfsub_32ns_32ns_32_4_full_dsp_1_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1971_p0),
    .din1(grp_fu_1971_p1),
    .opcode(grp_fu_1971_opcode),
    .ce(1'b1),
    .dout(grp_fu_1971_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1983_p0),
    .din1(grp_fu_1983_p1),
    .ce(1'b1),
    .dout(grp_fu_1983_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U131(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1987_p0),
    .din1(grp_fu_1987_p1),
    .ce(1'b1),
    .dout(grp_fu_1987_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U132(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(wBL_reg_5283),
    .din1(tmp_45_reg_5369),
    .ce(1'b1),
    .dout(grp_fu_1991_p2)
);

batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(subpix_y_reg_5228),
    .din1(tmp_49_reg_5374),
    .ce(1'b1),
    .dout(grp_fu_1995_p2)
);

batch_align2D_sitofp_32ns_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_sitofp_32ns_32_3_1_U134(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2001_p0),
    .ce(1'b1),
    .dout(grp_fu_2001_p1)
);

batch_align2D_sitofp_32ns_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_sitofp_32ns_32_3_1_U135(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2004_p0),
    .ce(1'b1),
    .dout(grp_fu_2004_p1)
);

batch_align2D_sitofp_32ns_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_sitofp_32ns_32_3_1_U136(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2007_p0),
    .ce(1'b1),
    .dout(grp_fu_2007_p1)
);

batch_align2D_sitofp_32ns_32_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
batch_align2D_sitofp_32ns_32_3_1_U137(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2010_p0),
    .ce(1'b1),
    .dout(grp_fu_2010_p1)
);

batch_align2D_fptrunc_64ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
batch_align2D_fptrunc_64ns_32_1_1_U138(
    .din0(tmp_18_reg_5258),
    .dout(wTL_fu_2013_p1)
);

batch_align2D_fptrunc_64ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
batch_align2D_fptrunc_64ns_32_1_1_U139(
    .din0(tmp_19_reg_5263),
    .dout(wTR_fu_2016_p1)
);

batch_align2D_fptrunc_64ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
batch_align2D_fptrunc_64ns_32_1_1_U140(
    .din0(tmp_20_reg_5268),
    .dout(wBL_fu_2019_p1)
);

batch_align2D_fpext_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
batch_align2D_fpext_32ns_64_1_1_U141(
    .din0(reg_2064),
    .dout(tmp_8_fu_2022_p1)
);

batch_align2D_fpext_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
batch_align2D_fpext_32ns_64_1_1_U142(
    .din0(subpix_y_reg_5228),
    .dout(tmp_16_fu_2025_p1)
);

batch_align2D_dsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
batch_align2D_dsub_64ns_64ns_64_5_full_dsp_1_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(tmp_8_fu_2022_p1),
    .ce(1'b1),
    .dout(grp_fu_2028_p2)
);

batch_align2D_dsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
batch_align2D_dsub_64ns_64ns_64_5_full_dsp_1_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(tmp_16_fu_2025_p1),
    .ce(1'b1),
    .dout(grp_fu_2034_p2)
);

batch_align2D_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
batch_align2D_dmul_64ns_64ns_64_5_max_dsp_1_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_10_reg_5246),
    .din1(tmp_17_reg_5252),
    .ce(1'b1),
    .dout(grp_fu_2040_p2)
);

batch_align2D_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
batch_align2D_dmul_64ns_64ns_64_5_max_dsp_1_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_reg_5234),
    .din1(tmp_17_reg_5252),
    .ce(1'b1),
    .dout(grp_fu_2044_p2)
);

batch_align2D_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
batch_align2D_dmul_64ns_64ns_64_5_max_dsp_1_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_10_reg_5246),
    .din1(tmp_16_reg_5240),
    .ce(1'b1),
    .dout(grp_fu_2048_p2)
);

batch_align2D_mux_1007_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_1007_8_1_1_U148(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(p_read25),
    .din26(p_read26),
    .din27(p_read27),
    .din28(p_read28),
    .din29(p_read29),
    .din30(p_read30),
    .din31(p_read31),
    .din32(p_read32),
    .din33(p_read33),
    .din34(p_read34),
    .din35(p_read35),
    .din36(p_read36),
    .din37(p_read37),
    .din38(p_read38),
    .din39(p_read39),
    .din40(p_read40),
    .din41(p_read41),
    .din42(p_read42),
    .din43(p_read43),
    .din44(p_read44),
    .din45(p_read45),
    .din46(p_read46),
    .din47(p_read47),
    .din48(p_read48),
    .din49(p_read49),
    .din50(p_read50),
    .din51(p_read51),
    .din52(p_read52),
    .din53(p_read53),
    .din54(p_read54),
    .din55(p_read55),
    .din56(p_read56),
    .din57(p_read57),
    .din58(p_read58),
    .din59(p_read59),
    .din60(p_read60),
    .din61(p_read61),
    .din62(p_read62),
    .din63(p_read63),
    .din64(p_read64),
    .din65(p_read65),
    .din66(p_read66),
    .din67(p_read67),
    .din68(p_read68),
    .din69(p_read69),
    .din70(p_read70),
    .din71(p_read71),
    .din72(p_read72),
    .din73(p_read73),
    .din74(p_read74),
    .din75(p_read75),
    .din76(p_read76),
    .din77(p_read77),
    .din78(p_read78),
    .din79(p_read79),
    .din80(p_read80),
    .din81(p_read81),
    .din82(p_read82),
    .din83(p_read83),
    .din84(p_read84),
    .din85(p_read85),
    .din86(p_read86),
    .din87(p_read87),
    .din88(p_read88),
    .din89(p_read89),
    .din90(p_read90),
    .din91(p_read91),
    .din92(p_read92),
    .din93(p_read93),
    .din94(p_read94),
    .din95(p_read95),
    .din96(p_read96),
    .din97(p_read97),
    .din98(p_read98),
    .din99(p_read99),
    .din100(sum_t_fu_3009_p2),
    .dout(tmp_35_fu_3026_p102)
);

batch_align2D_mux_1007_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_1007_8_1_1_U149(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(p_read25),
    .din26(p_read26),
    .din27(p_read27),
    .din28(p_read28),
    .din29(p_read29),
    .din30(p_read30),
    .din31(p_read31),
    .din32(p_read32),
    .din33(p_read33),
    .din34(p_read34),
    .din35(p_read35),
    .din36(p_read36),
    .din37(p_read37),
    .din38(p_read38),
    .din39(p_read39),
    .din40(p_read40),
    .din41(p_read41),
    .din42(p_read42),
    .din43(p_read43),
    .din44(p_read44),
    .din45(p_read45),
    .din46(p_read46),
    .din47(p_read47),
    .din48(p_read48),
    .din49(p_read49),
    .din50(p_read50),
    .din51(p_read51),
    .din52(p_read52),
    .din53(p_read53),
    .din54(p_read54),
    .din55(p_read55),
    .din56(p_read56),
    .din57(p_read57),
    .din58(p_read58),
    .din59(p_read59),
    .din60(p_read60),
    .din61(p_read61),
    .din62(p_read62),
    .din63(p_read63),
    .din64(p_read64),
    .din65(p_read65),
    .din66(p_read66),
    .din67(p_read67),
    .din68(p_read68),
    .din69(p_read69),
    .din70(p_read70),
    .din71(p_read71),
    .din72(p_read72),
    .din73(p_read73),
    .din74(p_read74),
    .din75(p_read75),
    .din76(p_read76),
    .din77(p_read77),
    .din78(p_read78),
    .din79(p_read79),
    .din80(p_read80),
    .din81(p_read81),
    .din82(p_read82),
    .din83(p_read83),
    .din84(p_read84),
    .din85(p_read85),
    .din86(p_read86),
    .din87(p_read87),
    .din88(p_read88),
    .din89(p_read89),
    .din90(p_read90),
    .din91(p_read91),
    .din92(p_read92),
    .din93(p_read93),
    .din94(p_read94),
    .din95(p_read95),
    .din96(p_read96),
    .din97(p_read97),
    .din98(p_read98),
    .din99(p_read99),
    .din100(sum6_t_fu_3132_p2),
    .dout(tmp_39_fu_3138_p102)
);

batch_align2D_mux_1007_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_1007_8_1_1_U150(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(p_read25),
    .din26(p_read26),
    .din27(p_read27),
    .din28(p_read28),
    .din29(p_read29),
    .din30(p_read30),
    .din31(p_read31),
    .din32(p_read32),
    .din33(p_read33),
    .din34(p_read34),
    .din35(p_read35),
    .din36(p_read36),
    .din37(p_read37),
    .din38(p_read38),
    .din39(p_read39),
    .din40(p_read40),
    .din41(p_read41),
    .din42(p_read42),
    .din43(p_read43),
    .din44(p_read44),
    .din45(p_read45),
    .din46(p_read46),
    .din47(p_read47),
    .din48(p_read48),
    .din49(p_read49),
    .din50(p_read50),
    .din51(p_read51),
    .din52(p_read52),
    .din53(p_read53),
    .din54(p_read54),
    .din55(p_read55),
    .din56(p_read56),
    .din57(p_read57),
    .din58(p_read58),
    .din59(p_read59),
    .din60(p_read60),
    .din61(p_read61),
    .din62(p_read62),
    .din63(p_read63),
    .din64(p_read64),
    .din65(p_read65),
    .din66(p_read66),
    .din67(p_read67),
    .din68(p_read68),
    .din69(p_read69),
    .din70(p_read70),
    .din71(p_read71),
    .din72(p_read72),
    .din73(p_read73),
    .din74(p_read74),
    .din75(p_read75),
    .din76(p_read76),
    .din77(p_read77),
    .din78(p_read78),
    .din79(p_read79),
    .din80(p_read80),
    .din81(p_read81),
    .din82(p_read82),
    .din83(p_read83),
    .din84(p_read84),
    .din85(p_read85),
    .din86(p_read86),
    .din87(p_read87),
    .din88(p_read88),
    .din89(p_read89),
    .din90(p_read90),
    .din91(p_read91),
    .din92(p_read92),
    .din93(p_read93),
    .din94(p_read94),
    .din95(p_read95),
    .din96(p_read96),
    .din97(p_read97),
    .din98(p_read98),
    .din99(p_read99),
    .din100(tmp_43_fu_3249_p101),
    .dout(tmp_43_fu_3249_p102)
);

batch_align2D_mux_1007_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_1007_8_1_1_U151(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(p_read25),
    .din26(p_read26),
    .din27(p_read27),
    .din28(p_read28),
    .din29(p_read29),
    .din30(p_read30),
    .din31(p_read31),
    .din32(p_read32),
    .din33(p_read33),
    .din34(p_read34),
    .din35(p_read35),
    .din36(p_read36),
    .din37(p_read37),
    .din38(p_read38),
    .din39(p_read39),
    .din40(p_read40),
    .din41(p_read41),
    .din42(p_read42),
    .din43(p_read43),
    .din44(p_read44),
    .din45(p_read45),
    .din46(p_read46),
    .din47(p_read47),
    .din48(p_read48),
    .din49(p_read49),
    .din50(p_read50),
    .din51(p_read51),
    .din52(p_read52),
    .din53(p_read53),
    .din54(p_read54),
    .din55(p_read55),
    .din56(p_read56),
    .din57(p_read57),
    .din58(p_read58),
    .din59(p_read59),
    .din60(p_read60),
    .din61(p_read61),
    .din62(p_read62),
    .din63(p_read63),
    .din64(p_read64),
    .din65(p_read65),
    .din66(p_read66),
    .din67(p_read67),
    .din68(p_read68),
    .din69(p_read69),
    .din70(p_read70),
    .din71(p_read71),
    .din72(p_read72),
    .din73(p_read73),
    .din74(p_read74),
    .din75(p_read75),
    .din76(p_read76),
    .din77(p_read77),
    .din78(p_read78),
    .din79(p_read79),
    .din80(p_read80),
    .din81(p_read81),
    .din82(p_read82),
    .din83(p_read83),
    .din84(p_read84),
    .din85(p_read85),
    .din86(p_read86),
    .din87(p_read87),
    .din88(p_read88),
    .din89(p_read89),
    .din90(p_read90),
    .din91(p_read91),
    .din92(p_read92),
    .din93(p_read93),
    .din94(p_read94),
    .din95(p_read95),
    .din96(p_read96),
    .din97(p_read97),
    .din98(p_read98),
    .din99(p_read99),
    .din100(tmp_47_fu_3360_p101),
    .dout(tmp_47_fu_3360_p102)
);

batch_align2D_mux_1007_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 8 ),
    .din33_WIDTH( 8 ),
    .din34_WIDTH( 8 ),
    .din35_WIDTH( 8 ),
    .din36_WIDTH( 8 ),
    .din37_WIDTH( 8 ),
    .din38_WIDTH( 8 ),
    .din39_WIDTH( 8 ),
    .din40_WIDTH( 8 ),
    .din41_WIDTH( 8 ),
    .din42_WIDTH( 8 ),
    .din43_WIDTH( 8 ),
    .din44_WIDTH( 8 ),
    .din45_WIDTH( 8 ),
    .din46_WIDTH( 8 ),
    .din47_WIDTH( 8 ),
    .din48_WIDTH( 8 ),
    .din49_WIDTH( 8 ),
    .din50_WIDTH( 8 ),
    .din51_WIDTH( 8 ),
    .din52_WIDTH( 8 ),
    .din53_WIDTH( 8 ),
    .din54_WIDTH( 8 ),
    .din55_WIDTH( 8 ),
    .din56_WIDTH( 8 ),
    .din57_WIDTH( 8 ),
    .din58_WIDTH( 8 ),
    .din59_WIDTH( 8 ),
    .din60_WIDTH( 8 ),
    .din61_WIDTH( 8 ),
    .din62_WIDTH( 8 ),
    .din63_WIDTH( 8 ),
    .din64_WIDTH( 8 ),
    .din65_WIDTH( 8 ),
    .din66_WIDTH( 8 ),
    .din67_WIDTH( 8 ),
    .din68_WIDTH( 8 ),
    .din69_WIDTH( 8 ),
    .din70_WIDTH( 8 ),
    .din71_WIDTH( 8 ),
    .din72_WIDTH( 8 ),
    .din73_WIDTH( 8 ),
    .din74_WIDTH( 8 ),
    .din75_WIDTH( 8 ),
    .din76_WIDTH( 8 ),
    .din77_WIDTH( 8 ),
    .din78_WIDTH( 8 ),
    .din79_WIDTH( 8 ),
    .din80_WIDTH( 8 ),
    .din81_WIDTH( 8 ),
    .din82_WIDTH( 8 ),
    .din83_WIDTH( 8 ),
    .din84_WIDTH( 8 ),
    .din85_WIDTH( 8 ),
    .din86_WIDTH( 8 ),
    .din87_WIDTH( 8 ),
    .din88_WIDTH( 8 ),
    .din89_WIDTH( 8 ),
    .din90_WIDTH( 8 ),
    .din91_WIDTH( 8 ),
    .din92_WIDTH( 8 ),
    .din93_WIDTH( 8 ),
    .din94_WIDTH( 8 ),
    .din95_WIDTH( 8 ),
    .din96_WIDTH( 8 ),
    .din97_WIDTH( 8 ),
    .din98_WIDTH( 8 ),
    .din99_WIDTH( 8 ),
    .din100_WIDTH( 7 ),
    .dout_WIDTH( 8 ))
batch_align2D_mux_1007_8_1_1_U152(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(p_read25),
    .din26(p_read26),
    .din27(p_read27),
    .din28(p_read28),
    .din29(p_read29),
    .din30(p_read30),
    .din31(p_read31),
    .din32(p_read32),
    .din33(p_read33),
    .din34(p_read34),
    .din35(p_read35),
    .din36(p_read36),
    .din37(p_read37),
    .din38(p_read38),
    .din39(p_read39),
    .din40(p_read40),
    .din41(p_read41),
    .din42(p_read42),
    .din43(p_read43),
    .din44(p_read44),
    .din45(p_read45),
    .din46(p_read46),
    .din47(p_read47),
    .din48(p_read48),
    .din49(p_read49),
    .din50(p_read50),
    .din51(p_read51),
    .din52(p_read52),
    .din53(p_read53),
    .din54(p_read54),
    .din55(p_read55),
    .din56(p_read56),
    .din57(p_read57),
    .din58(p_read58),
    .din59(p_read59),
    .din60(p_read60),
    .din61(p_read61),
    .din62(p_read62),
    .din63(p_read63),
    .din64(p_read64),
    .din65(p_read65),
    .din66(p_read66),
    .din67(p_read67),
    .din68(p_read68),
    .din69(p_read69),
    .din70(p_read70),
    .din71(p_read71),
    .din72(p_read72),
    .din73(p_read73),
    .din74(p_read74),
    .din75(p_read75),
    .din76(p_read76),
    .din77(p_read77),
    .din78(p_read78),
    .din79(p_read79),
    .din80(p_read80),
    .din81(p_read81),
    .din82(p_read82),
    .din83(p_read83),
    .din84(p_read84),
    .din85(p_read85),
    .din86(p_read86),
    .din87(p_read87),
    .din88(p_read88),
    .din89(p_read89),
    .din90(p_read90),
    .din91(p_read91),
    .din92(p_read92),
    .din93(p_read93),
    .din94(p_read94),
    .din95(p_read95),
    .din96(p_read96),
    .din97(p_read97),
    .din98(p_read98),
    .din99(p_read99),
    .din100(tmp_52_fu_3485_p101),
    .dout(tmp_52_fu_3485_p102)
);

batch_align2D_mux_646_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 32 ))
batch_align2D_mux_646_32_1_1_U153(
    .din0(p_read109),
    .din1(p_read110),
    .din2(p_read111),
    .din3(p_read112),
    .din4(p_read113),
    .din5(p_read114),
    .din6(p_read115),
    .din7(p_read116),
    .din8(p_read117),
    .din9(p_read118),
    .din10(p_read119),
    .din11(p_read120),
    .din12(p_read121),
    .din13(p_read122),
    .din14(p_read123),
    .din15(p_read124),
    .din16(p_read125),
    .din17(p_read126),
    .din18(p_read127),
    .din19(p_read128),
    .din20(p_read129),
    .din21(p_read130),
    .din22(p_read131),
    .din23(p_read132),
    .din24(p_read133),
    .din25(p_read134),
    .din26(p_read135),
    .din27(p_read136),
    .din28(p_read137),
    .din29(p_read138),
    .din30(p_read139),
    .din31(p_read140),
    .din32(p_read141),
    .din33(p_read142),
    .din34(p_read143),
    .din35(p_read144),
    .din36(p_read145),
    .din37(p_read146),
    .din38(p_read147),
    .din39(p_read148),
    .din40(p_read149),
    .din41(p_read150),
    .din42(p_read151),
    .din43(p_read152),
    .din44(p_read153),
    .din45(p_read154),
    .din46(p_read155),
    .din47(p_read156),
    .din48(p_read157),
    .din49(p_read158),
    .din50(p_read159),
    .din51(p_read160),
    .din52(p_read161),
    .din53(p_read162),
    .din54(p_read163),
    .din55(p_read164),
    .din56(p_read165),
    .din57(p_read166),
    .din58(p_read167),
    .din59(p_read168),
    .din60(p_read169),
    .din61(p_read170),
    .din62(p_read171),
    .din63(p_read172),
    .din64(tmp_58_fu_3600_p65),
    .dout(tmp_58_fu_3600_p66)
);

batch_align2D_mux_94_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
batch_align2D_mux_94_32_1_1_U154(
    .din0(p_read100),
    .din1(p_read101),
    .din2(p_read102),
    .din3(p_read103),
    .din4(p_read104),
    .din5(p_read105),
    .din6(p_read106),
    .din7(p_read107),
    .din8(p_read108),
    .din9(tmp_64_fu_3751_p10),
    .dout(tmp_64_fu_3751_p11)
);

batch_align2D_mux_32_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
batch_align2D_mux_32_32_1_1_U155(
    .din0(Jres_0_reg_1669),
    .din1(Jres_1_reg_1657),
    .din2(Jres_2_reg_1645),
    .din3(j_0_i_reg_1910),
    .dout(tmp_65_fu_3766_p5)
);

batch_align2D_ama_addmuladd_7ns_3s_7s_7ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 7 ),
    .dout_WIDTH( 7 ))
batch_align2D_ama_addmuladd_7ns_3s_7s_7ns_7_1_1_U156(
    .din0(tmp_84_reg_5218),
    .din1(tmp45_fu_2961_p2),
    .din2(tmp_3_reg_5127),
    .din3(tmp_85_reg_5223),
    .dout(grp_fu_3793_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if (((exitcond3_fu_2199_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_return_0_preg <= x_assign_reg_1614;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if (((exitcond3_fu_2199_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_return_1_preg <= x_assign_1_reg_1624;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        Jres_0_reg_1669 <= Jres_0_s_reg_1752;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        Jres_0_reg_1669 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        Jres_0_s_reg_1752 <= grp_fu_1966_p2;
    end else if (((exitcond2_fu_2945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        Jres_0_s_reg_1752 <= Jres_0_reg_1669;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        Jres_1_reg_1657 <= Jres_1_s_reg_1740;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        Jres_1_reg_1657 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        Jres_1_s_reg_1740 <= grp_fu_1971_p2;
    end else if (((exitcond2_fu_2945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        Jres_1_s_reg_1740 <= Jres_1_reg_1657;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        Jres_2_reg_1645 <= Jres_2_s_reg_1728;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        Jres_2_reg_1645 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        Jres_2_s_reg_1728 <= reg_2084;
    end else if (((exitcond2_fu_2945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        Jres_2_s_reg_1728 <= Jres_2_reg_1645;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_2945_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        i_0_i_reg_1811 <= 2'd0;
    end else if (((exitcond_i_fu_3730_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        i_0_i_reg_1811 <= i_reg_5445;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_2160_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_1591 <= indvarinc_fu_2102_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_1591 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        it_0_rec_reg_1800 <= x_reg_5314;
    end else if (((exitcond2_fu_2945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        it_0_rec_reg_1800 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        iter_reg_1634 <= iter_1_reg_5137;
    end else if (((tmp_s_fu_2160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        iter_reg_1634 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        j_0_i_reg_1910 <= j_reg_5458;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        j_0_i_reg_1910 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        mean_diff_reg_1602 <= reg_2064;
    end else if (((tmp_s_fu_2160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        mean_diff_reg_1602 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        tmp_23_reg_1681 <= tmp_30_reg_1764;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_23_reg_1681 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        tmp_24_reg_1693 <= tmp_31_reg_1776;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_24_reg_1693 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        tmp_25_reg_1705 <= tmp_32_reg_1788;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_25_reg_1705 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp_30_reg_1764 <= reg_2084;
    end else if (((exitcond2_fu_2945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_30_reg_1764 <= tmp_23_reg_1681;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp_31_reg_1776 <= grp_fu_1971_p2;
    end else if (((exitcond2_fu_2945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_31_reg_1776 <= tmp_24_reg_1693;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp_32_reg_1788 <= grp_fu_1966_p2;
    end else if (((exitcond2_fu_2945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_32_reg_1788 <= tmp_25_reg_1705;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_61_reg_1898 <= update_0_reg_5473;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        tmp_61_reg_1898 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd0) & (exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        update_0_4_reg_1851 <= 32'd0;
    end else if ((((ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd1) & (exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54)) | (~(ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd1) & ~(ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd0) & (exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        update_0_4_reg_1851 <= update_2_15_fu_498;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_i_reg_1811 == 2'd0) & (1'b1 == ap_CS_fsm_state62))) begin
        update_0_5_be_reg_1951 <= grp_fu_1966_p2;
    end else if ((((i_0_i_reg_1811 == 2'd1) & (1'b1 == ap_CS_fsm_state62)) | (~(i_0_i_reg_1811 == 2'd1) & ~(i_0_i_reg_1811 == 2'd0) & (1'b1 == ap_CS_fsm_state62)))) begin
        update_0_5_be_reg_1951 <= update_0_5_reg_1887;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        update_0_5_reg_1887 <= update_0_5_be_reg_1951;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        update_0_5_reg_1887 <= update_0_4_reg_1851;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd1) & (exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        update_1_4_reg_1837 <= 32'd0;
    end else if (((~(ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd1) & ~(ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd0) & (exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54)) | ((ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd0) & (exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        update_1_4_reg_1837 <= update_2_1_16_fu_502;
    end
end

always @ (posedge ap_clk) begin
    if (((i_0_i_reg_1811 == 2'd1) & (1'b1 == ap_CS_fsm_state62))) begin
        update_1_5_be_reg_1936 <= grp_fu_1966_p2;
    end else if (((~(i_0_i_reg_1811 == 2'd1) & ~(i_0_i_reg_1811 == 2'd0) & (1'b1 == ap_CS_fsm_state62)) | ((i_0_i_reg_1811 == 2'd0) & (1'b1 == ap_CS_fsm_state62)))) begin
        update_1_5_be_reg_1936 <= update_1_5_reg_1876;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        update_1_5_reg_1876 <= update_1_5_be_reg_1936;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        update_1_5_reg_1876 <= update_1_4_reg_1837;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_3730_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        update_2_15_fu_498 <= update_0_5_reg_1887;
    end else if (((tmp_s_fu_2160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        update_2_15_fu_498 <= update_0_1_fu_2128_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_3730_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        update_2_1_16_fu_502 <= update_1_5_reg_1876;
    end else if (((tmp_s_fu_2160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        update_2_1_16_fu_502 <= update_1_1_fu_2136_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_3730_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
        update_2_2_fu_506 <= update_2_5_reg_1865;
    end else if (((tmp_s_fu_2160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        update_2_2_fu_506 <= update_2_1_fu_2152_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd1) & (exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54)) | ((ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd0) & (exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        update_2_4_reg_1823 <= update_2_2_fu_506;
    end else if ((~(ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd1) & ~(ap_phi_mux_i_0_i_phi_fu_1815_p4 == 2'd0) & (exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        update_2_4_reg_1823 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((i_0_i_reg_1811 == 2'd1) & (1'b1 == ap_CS_fsm_state62)) | ((i_0_i_reg_1811 == 2'd0) & (1'b1 == ap_CS_fsm_state62)))) begin
        update_2_5_be_reg_1921 <= update_2_5_reg_1865;
    end else if ((~(i_0_i_reg_1811 == 2'd1) & ~(i_0_i_reg_1811 == 2'd0) & (1'b1 == ap_CS_fsm_state62))) begin
        update_2_5_be_reg_1921 <= grp_fu_1966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        update_2_5_reg_1865 <= update_2_5_be_reg_1921;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        update_2_5_reg_1865 <= update_2_4_reg_1823;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        x_assign_1_reg_1624 <= grp_fu_1971_p2;
    end else if (((tmp_s_fu_2160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        x_assign_1_reg_1624 <= cur_px_estimate_1_r;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        x_assign_reg_1614 <= grp_fu_1966_p2;
    end else if (((tmp_s_fu_2160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        x_assign_reg_1614 <= cur_px_estimate_0_r;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        y_reg_1717 <= y_1_reg_5291;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        y_reg_1717 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        i_0_i_cast_reg_5437[1 : 0] <= i_0_i_cast_fu_3701_p1[1 : 0];
        i_reg_5445 <= i_fu_3711_p2;
        update_2_2_load_reg_5430 <= update_2_2_fu_506;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        iter_1_reg_5137 <= iter_1_fu_2205_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        j_reg_5458 <= j_fu_3736_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_2199_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_Result_14_reg_5175 <= p_Val2_15_fu_2256_p1[32'd31];
        p_Result_s_reg_5142 <= p_Val2_s_fu_2211_p1[32'd31];
        tmp_15_reg_5170 <= tmp_15_fu_2252_p1;
        tmp_77_reg_5203 <= tmp_77_fu_2297_p1;
        tmp_V_1_reg_5159 <= tmp_V_1_fu_2233_p1;
        tmp_V_6_reg_5184 <= {{p_Val2_15_fu_2256_p1[30:23]}};
        tmp_V_7_reg_5192 <= tmp_V_7_fu_2278_p1;
        tmp_V_reg_5151 <= {{p_Val2_s_fu_2211_p1[30:23]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_Val2_30_reg_5208 <= p_Val2_30_fu_2617_p3;
        p_Val2_32_reg_5213 <= p_Val2_32_fu_2929_p3;
        tmp_84_reg_5218 <= tmp_84_fu_2937_p1;
        tmp_85_reg_5223 <= tmp_85_fu_2941_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_2945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        p_shl_reg_5296[5 : 3] <= p_shl_fu_2971_p3[5 : 3];
        tmp46_reg_5301 <= grp_fu_3793_p4;
        tmp62_reg_5306[6 : 1] <= tmp62_fu_2993_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_2052 <= grp_fu_2001_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_2058 <= grp_fu_2004_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_2064 <= grp_fu_1966_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_2071 <= grp_fu_1983_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_2078 <= grp_fu_1987_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state39))) begin
        reg_2084 <= grp_fu_1966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        subpix_y_reg_5228 <= grp_fu_1971_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp59_reg_5384 <= grp_fu_1995_p2;
        tmp_46_reg_5379 <= grp_fu_1991_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        tmp61_reg_5394 <= grp_fu_1966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_10_reg_5246 <= grp_fu_2028_p2;
        tmp_17_reg_5252 <= grp_fu_2034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_16_reg_5240 <= tmp_16_fu_2025_p1;
        tmp_8_reg_5234 <= tmp_8_fu_2022_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_18_reg_5258 <= grp_fu_2040_p2;
        tmp_19_reg_5263 <= grp_fu_2044_p2;
        tmp_20_reg_5268 <= grp_fu_2048_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_3014_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        tmp_35_reg_5319 <= tmp_35_fu_3026_p102;
        tmp_39_reg_5324 <= tmp_39_fu_3138_p102;
        tmp_43_reg_5329 <= tmp_43_fu_3249_p102;
        tmp_47_reg_5334 <= tmp_47_fu_3360_p102;
        tmp_52_reg_5339 <= tmp_52_fu_3485_p102;
        tmp_58_reg_5344 <= tmp_58_fu_3600_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_2160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_3_reg_5127 <= tmp_3_fu_2181_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_45_reg_5369 <= grp_fu_2007_p1;
        tmp_49_reg_5374 <= grp_fu_2010_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_50_reg_5389 <= grp_fu_1983_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        tmp_60_reg_5450 <= tmp_60_fu_3725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_3730_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
        tmp_64_reg_5463 <= tmp_64_fu_3751_p11;
        tmp_65_reg_5468 <= tmp_65_fu_3766_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        update_0_reg_5473 <= grp_fu_1966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        update_1_fu_490 <= update_1_1_fu_2136_p3;
        update_2_fu_494 <= update_2_1_fu_2152_p3;
        update_fu_486 <= update_0_1_fu_2128_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        wBL_reg_5283 <= wBL_fu_2019_p1;
        wTL_reg_5273 <= wTL_fu_2013_p1;
        wTR_reg_5278 <= wTR_fu_2016_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        x_reg_5314 <= x_fu_3020_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        y_1_reg_5291 <= y_1_fu_2951_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond3_fu_2199_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_fu_2199_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_fu_2199_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_return_0 = x_assign_reg_1614;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((exitcond3_fu_2199_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_return_1 = x_assign_1_reg_1624;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1966_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1966_opcode = 2'd0;
    end else begin
        grp_fu_1966_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        grp_fu_1966_p0 = update_2_2_load_reg_5430;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_1966_p0 = tmp_32_reg_1788;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1966_p0 = tmp_30_reg_1764;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_1966_p0 = reg_2084;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_1966_p0 = tmp61_reg_5394;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1966_p0 = tmp_46_reg_5379;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1966_p0 = reg_2071;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1966_p0 = x_assign_reg_1614;
    end else begin
        grp_fu_1966_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1966_p1 = x_assign_reg_1614;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_1966_p1 = tmp_61_reg_1898;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_1966_p1 = reg_2071;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_1966_p1 = mean_diff_reg_1602;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state36))) begin
        grp_fu_1966_p1 = reg_2084;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_1966_p1 = tmp_50_reg_5389;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1966_p1 = reg_2078;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1966_p1 = reg_2052;
    end else begin
        grp_fu_1966_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_1971_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1971_opcode = 2'd0;
    end else begin
        grp_fu_1971_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1971_p0 = reg_2078;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_1971_p0 = tmp_31_reg_1776;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1971_p0 = x_assign_1_reg_1624;
    end else begin
        grp_fu_1971_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1971_p1 = x_assign_1_reg_1624;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_1971_p1 = reg_2071;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1971_p1 = reg_2058;
    end else begin
        grp_fu_1971_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fu_1983_p0 = tmp_64_reg_5463;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_1983_p0 = update_2_15_fu_498;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1983_p0 = reg_2084;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1983_p0 = tmp59_reg_5384;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1983_p0 = wTL_reg_5273;
    end else begin
        grp_fu_1983_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fu_1983_p1 = tmp_65_reg_5468;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_1983_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_1983_p1 = tmp_58_reg_5344;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_1983_p1 = reg_2064;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1983_p1 = reg_2052;
    end else begin
        grp_fu_1983_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_1987_p0 = update_2_1_16_fu_502;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1987_p0 = wTR_reg_5278;
    end else begin
        grp_fu_1987_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_1987_p1 = 32'd1056964608;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_1987_p1 = reg_2058;
    end else begin
        grp_fu_1987_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_2001_p0 = tmp_53_fu_3686_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_2001_p0 = tmp_36_fu_3670_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_2001_p0 = p_Val2_30_reg_5208;
    end else begin
        grp_fu_2001_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_2004_p0 = tmp_40_fu_3674_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_2004_p0 = p_Val2_32_reg_5213;
    end else begin
        grp_fu_2004_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mask_table2_ce0 = 1'b1;
    end else begin
        mask_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mask_table2_ce1 = 1'b1;
    end else begin
        mask_table2_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_s_fu_2160_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond3_fu_2199_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((exitcond2_fu_2945_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((exitcond4_fu_3014_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state54 : begin
            if (((exitcond1_i_fu_3705_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((exitcond_i_fu_3730_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_phi_mux_i_0_i_phi_fu_1815_p4 = i_0_i_reg_1811;

assign exitcond1_i_fu_3705_p2 = ((i_0_i_reg_1811 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond2_fu_2945_p2 = ((y_reg_1717 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond3_fu_2199_p2 = ((iter_reg_1634 == 4'd10) ? 1'b1 : 1'b0);

assign exitcond4_fu_3014_p2 = ((it_0_rec_reg_1800 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond_i_fu_3730_p2 = ((j_0_i_reg_1910 == 2'd3) ? 1'b1 : 1'b0);

assign grp_fu_2007_p0 = tmp_43_reg_5329;

assign grp_fu_2010_p0 = tmp_47_reg_5334;

assign i_0_i_cast_fu_3701_p1 = i_0_i_reg_1811;

assign i_fu_3711_p2 = (i_0_i_reg_1811 + 2'd1);

assign index_V_1_fu_2282_p4 = {{p_Val2_15_fu_2256_p1[27:23]}};

assign index_V_fu_2237_p4 = {{p_Val2_s_fu_2211_p1[27:23]}};

assign indvarinc_fu_2102_p2 = (invdar_reg_1591 + 2'd1);

assign isNeg_1_fu_2843_p3 = sh_assign_3_fu_2837_p2[32'd8];

assign isNeg_fu_2531_p3 = sh_assign_fu_2525_p2[32'd8];

assign iter_1_fu_2205_p2 = (iter_reg_1634 + 4'd1);

assign j_fu_3736_p2 = (j_0_i_reg_1910 + 2'd1);

assign mantissa_V_1_cast1_fu_2517_p1 = mantissa_V_fu_2507_p4;

assign mantissa_V_1_fu_2819_p4 = {{{{1'd1}, {tmp_V_11_fu_2815_p1}}}, {1'd0}};

assign mantissa_V_3_cast1_fu_2829_p1 = mantissa_V_1_fu_2819_p4;

assign mantissa_V_fu_2507_p4 = {{{{1'd1}, {tmp_V_5_fu_2503_p1}}}, {1'd0}};

assign mask_i186_cast_fu_2642_p1 = mask_table2_q1;

assign mask_i_cast_fu_2330_p1 = mask_table2_q0;

assign mask_table2_address0 = tmp_8_i_fu_2247_p1;

assign mask_table2_address1 = tmp_8_i1_fu_2292_p1;

assign notlhs_i1_fu_2758_p2 = ((tmp_V_7_reg_5192 != 23'd0) ? 1'b1 : 1'b0);

assign notlhs_i_fu_2446_p2 = ((tmp_V_1_reg_5159 != 23'd0) ? 1'b1 : 1'b0);

assign notrhs_i1_fu_2763_p2 = ((tmp_V_6_reg_5184 != 8'd0) ? 1'b1 : 1'b0);

assign notrhs_i_fu_2451_p2 = ((tmp_V_reg_5151 != 8'd0) ? 1'b1 : 1'b0);

assign p_Result_10_fu_2334_p3 = {{1'd1}, {tmp_15_reg_5170}};

assign p_Result_11_fu_2347_p3 = p_Val2_5_fu_2341_p2[32'd31];

assign p_Result_12_fu_2398_p4 = {{{xs_sign_V_9_fu_2381_p2}, {xs_exp_V_7_fu_2375_p3}}, {xs_sig_V_fu_2392_p2}};

assign p_Result_13_fu_2485_p3 = p_Val2_9_fu_2477_p3[32'd31];

assign p_Result_15_fu_2635_p3 = {{p_Result_14_reg_5175}, {31'd0}};

assign p_Result_16_fu_2646_p3 = {{1'd1}, {tmp_77_reg_5203}};

assign p_Result_17_fu_2659_p3 = p_Val2_20_fu_2653_p2[32'd31];

assign p_Result_18_fu_2710_p4 = {{{xs_sign_V_10_fu_2693_p2}, {xs_exp_V_8_fu_2687_p3}}, {xs_sig_V_9_fu_2704_p2}};

assign p_Result_19_fu_2797_p3 = p_Val2_24_fu_2789_p3[32'd31];

assign p_Result_9_fu_2323_p3 = {{p_Result_s_reg_5142}, {31'd0}};

assign p_Val2_15_fu_2256_p1 = x_assign_1_reg_1624;

assign p_Val2_20_fu_2653_p2 = (p_Result_16_fu_2646_p3 + mask_i186_cast_fu_2642_p1);

assign p_Val2_24_fu_2789_p3 = ((sel_tmp9_i1_fu_2779_p2[0:0] === 1'b1) ? 32'd3212836864 : tmp_22_fu_2785_p1);

assign p_Val2_29_fu_2603_p3 = ((isNeg_fu_2531_p3[0:0] === 1'b1) ? tmp_13_fu_2589_p1 : tmp_21_fu_2593_p4);

assign p_Val2_30_fu_2617_p3 = ((p_Result_13_fu_2485_p3[0:0] === 1'b1) ? result_V_1_fu_2611_p2 : p_Val2_29_fu_2603_p3);

assign p_Val2_31_fu_2915_p3 = ((isNeg_1_fu_2843_p3[0:0] === 1'b1) ? tmp_26_fu_2901_p1 : tmp_28_fu_2905_p4);

assign p_Val2_32_fu_2929_p3 = ((p_Result_19_fu_2797_p3[0:0] === 1'b1) ? result_V_3_fu_2923_p2 : p_Val2_31_fu_2915_p3);

assign p_Val2_5_fu_2341_p2 = (p_Result_10_fu_2334_p3 + mask_i_cast_fu_2330_p1);

assign p_Val2_9_fu_2477_p3 = ((sel_tmp9_i_fu_2467_p2[0:0] === 1'b1) ? 32'd3212836864 : tmp_9_fu_2473_p1);

assign p_Val2_s_fu_2211_p1 = x_assign_reg_1614;

assign p_shl2_fu_3717_p3 = {{i_0_i_reg_1811}, {2'd0}};

assign p_shl_fu_2971_p3 = {{tmp_86_fu_2957_p1}, {3'd0}};

assign r_V_1_fu_2575_p2 = mantissa_V_1_cast1_fu_2517_p1 << tmp_i_i_i_19_fu_2565_p1;

assign r_V_2_fu_2881_p2 = mantissa_V_1_fu_2819_p4 >> sh_assign_5_cast_cas_fu_2873_p1;

assign r_V_3_fu_2887_p2 = mantissa_V_3_cast1_fu_2829_p1 << tmp_i_i_i1_21_fu_2877_p1;

assign r_V_fu_2569_p2 = mantissa_V_fu_2507_p4 >> sh_assign_2_cast_cas_fu_2561_p1;

assign result_V_1_fu_2611_p2 = (32'd0 - p_Val2_29_fu_2603_p3);

assign result_V_3_fu_2923_p2 = (32'd0 - p_Val2_31_fu_2915_p3);

assign sel_tmp2_demorgan_i1_fu_2720_p2 = (tmp_i1_fu_2625_p2 | tmp_5_i1_fu_2630_p2);

assign sel_tmp2_demorgan_i_fu_2408_p2 = (tmp_i_fu_2313_p2 | tmp_5_i_fu_2318_p2);

assign sel_tmp3_i1_fu_2734_p1 = sel_tmp3_v_i1_fu_2726_p3;

assign sel_tmp3_i_fu_2422_p1 = sel_tmp3_v_i_fu_2414_p3;

assign sel_tmp3_v_i1_fu_2726_p3 = ((sel_tmp2_demorgan_i1_fu_2720_p2[0:0] === 1'b1) ? p_Result_15_fu_2635_p3 : p_Result_18_fu_2710_p4);

assign sel_tmp3_v_i_fu_2414_p3 = ((sel_tmp2_demorgan_i_fu_2408_p2[0:0] === 1'b1) ? p_Result_9_fu_2323_p3 : p_Result_12_fu_2398_p4);

assign sel_tmp4_i1_fu_2738_p2 = (tmp_i1_fu_2625_p2 ^ 1'd1);

assign sel_tmp4_i_fu_2426_p2 = (tmp_i_fu_2313_p2 ^ 1'd1);

assign sel_tmp5_i1_fu_2744_p2 = (tmp_5_i1_fu_2630_p2 & sel_tmp4_i1_fu_2738_p2);

assign sel_tmp5_i_fu_2432_p2 = (tmp_5_i_fu_2318_p2 & sel_tmp4_i_fu_2426_p2);

assign sel_tmp6_i1_fu_2750_p3 = ((sel_tmp5_i1_fu_2744_p2[0:0] === 1'b1) ? x_assign_1_reg_1624 : sel_tmp3_i1_fu_2734_p1);

assign sel_tmp6_i_fu_2438_p3 = ((sel_tmp5_i_fu_2432_p2[0:0] === 1'b1) ? x_assign_reg_1614 : sel_tmp3_i_fu_2422_p1);

assign sel_tmp8_i1_fu_2768_p2 = (notrhs_i1_fu_2763_p2 | notlhs_i1_fu_2758_p2);

assign sel_tmp8_i_fu_2456_p2 = (notrhs_i_fu_2451_p2 | notlhs_i_fu_2446_p2);

assign sel_tmp9_i1_fu_2779_p2 = (tmp_i1_fu_2625_p2 & tmp31_fu_2774_p2);

assign sel_tmp9_i_fu_2467_p2 = (tmp_i_fu_2313_p2 & tmp4_fu_2462_p2);

assign sh_assign_2_cast_cas_fu_2561_p1 = ush_fu_2549_p3;

assign sh_assign_2_cast_fu_2557_p1 = ush_fu_2549_p3;

assign sh_assign_3_fu_2837_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i1_cast_fu_2833_p1));

assign sh_assign_5_cast_cas_fu_2873_p1 = ush_1_fu_2861_p3;

assign sh_assign_5_cast_fu_2869_p1 = ush_1_fu_2861_p3;

assign sh_assign_fu_2525_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_fu_2521_p1));

assign sum6_t_fu_3132_p2 = (sum_t_fu_3009_p2 + 7'd1);

assign sum_t_fu_3009_p2 = ($signed(tmp217_cast_fu_3005_p1) + $signed(tmp46_reg_5301));

assign tmp217_cast_fu_3005_p1 = $signed(tmp47_fu_2999_p2);

assign tmp223_cast_fu_3476_p1 = tmp63_fu_3470_p2;

assign tmp31_fu_2774_p2 = (sel_tmp8_i1_fu_2768_p2 & p_Result_14_reg_5175);

assign tmp45_fu_2961_p2 = (tmp_86_fu_2957_p1 ^ 3'd4);

assign tmp47_fu_2999_p2 = ($signed(it_0_rec_reg_1800) + $signed(4'd12));

assign tmp4_fu_2462_p2 = (sel_tmp8_i_fu_2456_p2 & p_Result_s_reg_5142);

assign tmp62_fu_2993_p2 = (tmp_12_fu_2979_p1 + tmp_13_cast_fu_2989_p1);

assign tmp63_fu_3470_p2 = (tmp_58_cast_fu_3466_p1 + 5'd11);

assign tmp_12_fu_2979_p1 = p_shl_fu_2971_p3;

assign tmp_13_cast_fu_2989_p1 = tmp_87_fu_2983_p2;

assign tmp_13_fu_2589_p1 = tmp_74_fu_2581_p3;

assign tmp_15_fu_2252_p1 = p_Val2_s_fu_2211_p1[30:0];

assign tmp_1_fu_2114_p3 = ((tmp_fu_2108_p2[0:0] === 1'b1) ? 32'd0 : update_fu_486);

assign tmp_21_fu_2593_p4 = {{r_V_1_fu_2575_p2[55:24]}};

assign tmp_22_fu_2785_p1 = sel_tmp6_i1_fu_2750_p3;

assign tmp_26_fu_2901_p1 = tmp_83_fu_2893_p3;

assign tmp_28_fu_2905_p4 = {{r_V_3_fu_2887_p2[55:24]}};

assign tmp_2_fu_2122_p2 = ((invdar_reg_1591 == 2'd1) ? 1'b1 : 1'b0);

assign tmp_36_fu_3670_p1 = tmp_35_reg_5319;

assign tmp_3_fu_2181_p1 = img_w[6:0];

assign tmp_40_fu_3674_p1 = tmp_39_reg_5324;

assign tmp_43_fu_3249_p101 = ($signed(sum_t_fu_3009_p2) + $signed(tmp_3_reg_5127));

assign tmp_47_fu_3360_p101 = ($signed(sum6_t_fu_3132_p2) + $signed(tmp_3_reg_5127));

assign tmp_52_fu_3485_p101 = (tmp223_cast_fu_3476_p1 + tmp62_reg_5306);

assign tmp_53_fu_3686_p1 = tmp_52_reg_5339;

assign tmp_56_fu_3591_p1 = it_0_rec_reg_1800;

assign tmp_58_cast_fu_3466_p1 = it_0_rec_reg_1800;

assign tmp_58_fu_3600_p65 = (p_shl_reg_5296 + tmp_56_fu_3591_p1);

assign tmp_5_i1_fu_2630_p2 = ((tmp_V_6_reg_5184 > 8'd150) ? 1'b1 : 1'b0);

assign tmp_5_i_fu_2318_p2 = ((tmp_V_reg_5151 > 8'd150) ? 1'b1 : 1'b0);

assign tmp_60_fu_3725_p2 = (p_shl2_fu_3717_p3 - i_0_i_cast_reg_5437);

assign tmp_62_fu_3742_p1 = j_0_i_reg_1910;

assign tmp_64_fu_3751_p10 = (tmp_60_reg_5450 + tmp_62_fu_3742_p1);

assign tmp_74_fu_2581_p3 = r_V_fu_2569_p2[32'd24];

assign tmp_77_fu_2297_p1 = p_Val2_15_fu_2256_p1[30:0];

assign tmp_7_fu_2144_p3 = ((tmp_fu_2108_p2[0:0] === 1'b1) ? update_2_fu_494 : 32'd0);

assign tmp_83_fu_2893_p3 = r_V_2_fu_2881_p2[32'd24];

assign tmp_84_fu_2937_p1 = p_Val2_32_fu_2929_p3[6:0];

assign tmp_85_fu_2941_p1 = p_Val2_30_fu_2617_p3[6:0];

assign tmp_86_fu_2957_p1 = y_reg_1717[2:0];

assign tmp_87_fu_2983_p2 = y_reg_1717 << 4'd1;

assign tmp_8_i1_fu_2292_p1 = index_V_1_fu_2282_p4;

assign tmp_8_i_fu_2247_p1 = index_V_fu_2237_p4;

assign tmp_9_fu_2473_p1 = sel_tmp6_i_fu_2438_p3;

assign tmp_V_10_fu_2805_p4 = {{p_Val2_24_fu_2789_p3[30:23]}};

assign tmp_V_11_fu_2815_p1 = p_Val2_24_fu_2789_p3[22:0];

assign tmp_V_1_fu_2233_p1 = p_Val2_s_fu_2211_p1[22:0];

assign tmp_V_2_fu_2355_p4 = {{p_Val2_5_fu_2341_p2[30:23]}};

assign tmp_V_3_fu_2365_p1 = p_Val2_5_fu_2341_p2[22:0];

assign tmp_V_4_fu_2493_p4 = {{p_Val2_9_fu_2477_p3[30:23]}};

assign tmp_V_5_fu_2503_p1 = p_Val2_9_fu_2477_p3[22:0];

assign tmp_V_7_fu_2278_p1 = p_Val2_15_fu_2256_p1[22:0];

assign tmp_V_8_fu_2667_p4 = {{p_Val2_20_fu_2653_p2[30:23]}};

assign tmp_V_9_fu_2677_p1 = p_Val2_20_fu_2653_p2[22:0];

assign tmp_fu_2108_p2 = ((invdar_reg_1591 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_i1_20_fu_2698_p2 = (mask_table2_q1 ^ 23'd8388607);

assign tmp_i1_fu_2625_p2 = ((tmp_V_6_reg_5184 < 8'd127) ? 1'b1 : 1'b0);

assign tmp_i_18_fu_2386_p2 = (mask_table2_q0 ^ 23'd8388607);

assign tmp_i_fu_2313_p2 = ((tmp_V_reg_5151 < 8'd127) ? 1'b1 : 1'b0);

assign tmp_i_i_i1_21_fu_2877_p1 = $unsigned(sh_assign_5_cast_fu_2869_p1);

assign tmp_i_i_i1_cast_fu_2857_p1 = $signed(tmp_i_i_i1_fu_2851_p2);

assign tmp_i_i_i1_fu_2851_p2 = (8'd127 - tmp_V_10_fu_2805_p4);

assign tmp_i_i_i_19_fu_2565_p1 = $unsigned(sh_assign_2_cast_fu_2557_p1);

assign tmp_i_i_i_cast_fu_2545_p1 = $signed(tmp_i_i_i_fu_2539_p2);

assign tmp_i_i_i_fu_2539_p2 = (8'd127 - tmp_V_4_fu_2493_p4);

assign tmp_i_i_i_i1_cast_fu_2833_p1 = tmp_V_10_fu_2805_p4;

assign tmp_i_i_i_i_cast_fu_2521_p1 = tmp_V_4_fu_2493_p4;

assign tmp_s_fu_2160_p2 = ((invdar_reg_1591 == 2'd2) ? 1'b1 : 1'b0);

assign update_0_1_fu_2128_p3 = ((tmp_2_fu_2122_p2[0:0] === 1'b1) ? update_fu_486 : tmp_1_fu_2114_p3);

assign update_1_1_fu_2136_p3 = ((tmp_2_fu_2122_p2[0:0] === 1'b1) ? 32'd0 : update_1_fu_490);

assign update_2_1_fu_2152_p3 = ((tmp_2_fu_2122_p2[0:0] === 1'b1) ? update_2_fu_494 : tmp_7_fu_2144_p3);

assign ush_1_fu_2861_p3 = ((isNeg_1_fu_2843_p3[0:0] === 1'b1) ? tmp_i_i_i1_cast_fu_2857_p1 : sh_assign_3_fu_2837_p2);

assign ush_fu_2549_p3 = ((isNeg_fu_2531_p3[0:0] === 1'b1) ? tmp_i_i_i_cast_fu_2545_p1 : sh_assign_fu_2525_p2);

assign x_fu_3020_p2 = (it_0_rec_reg_1800 + 4'd1);

assign xs_exp_V_7_fu_2375_p3 = ((p_Result_s_reg_5142[0:0] === 1'b1) ? tmp_V_2_fu_2355_p4 : tmp_V_reg_5151);

assign xs_exp_V_8_fu_2687_p3 = ((p_Result_14_reg_5175[0:0] === 1'b1) ? tmp_V_8_fu_2667_p4 : tmp_V_6_reg_5184);

assign xs_sig_V_1_fu_2369_p3 = ((p_Result_s_reg_5142[0:0] === 1'b1) ? tmp_V_3_fu_2365_p1 : tmp_V_1_reg_5159);

assign xs_sig_V_4_fu_2681_p3 = ((p_Result_14_reg_5175[0:0] === 1'b1) ? tmp_V_9_fu_2677_p1 : tmp_V_7_reg_5192);

assign xs_sig_V_9_fu_2704_p2 = (xs_sig_V_4_fu_2681_p3 & tmp_i1_20_fu_2698_p2);

assign xs_sig_V_fu_2392_p2 = (xs_sig_V_1_fu_2369_p3 & tmp_i_18_fu_2386_p2);

assign xs_sign_V_10_fu_2693_p2 = (p_Result_17_fu_2659_p3 & p_Result_14_reg_5175);

assign xs_sign_V_9_fu_2381_p2 = (p_Result_s_reg_5142 & p_Result_11_fu_2347_p3);

assign y_1_fu_2951_p2 = (y_reg_1717 + 4'd1);

always @ (posedge ap_clk) begin
    p_shl_reg_5296[2:0] <= 3'b000;
    tmp62_reg_5306[0] <= 1'b0;
    i_0_i_cast_reg_5437[3:2] <= 2'b00;
end

endmodule //gauss_newton_optim
