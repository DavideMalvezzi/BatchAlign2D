# 
# Synthesis run script generated by Vivado
# 

namespace eval rt {
    variable rc
}
set rt::rc [catch {
  uplevel #0 {
    set ::env(BUILTIN_SYNTH) true
    source $::env(HRT_TCL_PATH)/rtSynthPrep.tcl
    rt::HARTNDb_startJobStats
    set rt::cmdEcho 0
    rt::set_parameter writeXmsg true
    rt::set_parameter enableParallelHelperSpawn true
    set ::env(RT_TMP) "./.Xil/Vivado-12532-davide-X550CL/realtime/tmp"
    if { [ info exists ::env(RT_TMP) ] } {
      file mkdir $::env(RT_TMP)
    }

    rt::delete_design

    set rt::partid xczu9eg-ffvb1156-2-e
     file delete -force synth_hints.os

    set rt::multiChipSynthesisFlow false
    source $::env(SYNTH_COMMON)/common_vhdl.tcl
    set rt::defaultWorkLibName xil_defaultlib

    # Skipping read_* RTL commands because this is post-elab optimize flow
    set rt::useElabCache true
    if {$rt::useElabCache == false} {
      rt::read_verilog -sv {
      /tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_cdc/hdl/xpm_cdc.sv
      /tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_fifo/hdl/xpm_fifo.sv
      /tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/hdl/xpm_memory.sv
    }
      rt::read_verilog {
      /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/9643/hdl/verilog/batch_align2D_ctrl_s_axi.v
      /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/9643/hdl/verilog/batch_align2D_fmul_32ns_32ns_32_2_max_dsp_1.v
      /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/9643/hdl/verilog/batch_align2D_gmem_m_axi.v
      /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/9643/hdl/verilog/batch_align2D.v
      /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ip/design_1_batch_align2D_0_9/synth/design_1_batch_align2D_0_9.v
    }
      rt::read_vhdl -lib xbip_utils_v3_0_10 /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/1123/hdl/xbip_utils_v3_0_vh_rfs.vhd
      rt::read_vhdl -lib axi_utils_v2_0_6 /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/1971/hdl/axi_utils_v2_0_vh_rfs.vhd
      rt::read_vhdl -lib xbip_pipe_v3_0_6 /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/7468/hdl/xbip_pipe_v3_0_vh_rfs.vhd
      rt::read_vhdl -lib xbip_dsp48_wrapper_v3_0_4 /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/cdbf/hdl/xbip_dsp48_wrapper_v3_0_vh_rfs.vhd
      rt::read_vhdl -lib xbip_dsp48_addsub_v3_0_6 /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/910d/hdl/xbip_dsp48_addsub_v3_0_vh_rfs.vhd
      rt::read_vhdl -lib xbip_dsp48_multadd_v3_0_6 /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/b0ac/hdl/xbip_dsp48_multadd_v3_0_vh_rfs.vhd
      rt::read_vhdl -lib xbip_bram18k_v3_0_6 /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/d367/hdl/xbip_bram18k_v3_0_vh_rfs.vhd
      rt::read_vhdl -lib mult_gen_v12_0_15 /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/d4d2/hdl/mult_gen_v12_0_vh_rfs.vhd
      rt::read_vhdl -lib floating_point_v7_1_8 /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/83a3/hdl/floating_point_v7_1_vh_rfs.vhd
      rt::read_vhdl -lib xil_defaultlib /home/davide/FPGA-design/svo_align2d_design/svo_align2d_design.srcs/sources_1/bd/design_1/ipshared/9643/hdl/ip/batch_align2D_ap_fmul_0_max_dsp_32.vhd
      rt::read_vhdl -lib xpm /tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_VCOMP.vhd
      rt::filesetChecksum
    }
    rt::set_parameter usePostFindUniquification true
    set rt::SDCFileList ./.Xil/Vivado-12532-davide-X550CL/realtime/design_1_batch_align2D_0_9_synth.xdc
    rt::sdcChecksum
    set rt::top design_1_batch_align2D_0_9
    rt::set_parameter enableIncremental true
    set rt::ioInsertion false
    set rt::reportTiming false
    rt::set_parameter elaborateOnly false
    rt::set_parameter elaborateRtl false
    rt::set_parameter eliminateRedundantBitOperator true
    rt::set_parameter elaborateRtlOnlyFlow false
    rt::set_parameter writeBlackboxInterface true
    rt::set_parameter ramStyle auto
    rt::set_parameter merge_flipflops true
# MODE: out_of_context
    rt::set_parameter webTalkPath {}
    rt::set_parameter enableSplitFlowPath "./.Xil/Vivado-12532-davide-X550CL/"
    set ok_to_delete_rt_tmp true 
    if { [rt::get_parameter parallelDebug] } { 
       set ok_to_delete_rt_tmp false 
    } 
    if {$rt::useElabCache == false} {
        set oldMIITMVal [rt::get_parameter maxInputIncreaseToMerge]; rt::set_parameter maxInputIncreaseToMerge 1000
        set oldCDPCRL [rt::get_parameter createDfgPartConstrRecurLimit]; rt::set_parameter createDfgPartConstrRecurLimit 1
        $rt::db readXRFFile
      rt::run_synthesis -module $rt::top
        rt::set_parameter maxInputIncreaseToMerge $oldMIITMVal
        rt::set_parameter createDfgPartConstrRecurLimit $oldCDPCRL
    }

    set rt::flowresult [ source $::env(SYNTH_COMMON)/flow.tcl ]
    rt::HARTNDb_stopJobStats
    rt::HARTNDb_reportJobStats "Synthesis Optimization Runtime"
    rt::HARTNDb_stopSystemStats
    if { $rt::flowresult == 1 } { return -code error }


  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  rt::set_parameter helper_shm_key "" 
    if { [ info exists ::env(RT_TMP) ] } {
      if { [info exists ok_to_delete_rt_tmp] && $ok_to_delete_rt_tmp } { 
        file delete -force $::env(RT_TMP)
      }
    }

    source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  } ; #end uplevel
} rt::result]

if { $rt::rc } {
  $rt::db resetHdlParse
  set hsKey [rt::get_parameter helper_shm_key] 
  if { $hsKey != "" && [info exists ::env(BUILTIN_SYNTH)] && [rt::get_parameter enableParallelHelperSpawn] } { 
     $rt::db killSynthHelper $hsKey
  } 
  source $::env(HRT_TCL_PATH)/rtSynthCleanup.tcl
  return -code "error" $rt::result
}
