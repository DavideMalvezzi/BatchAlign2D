// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generic_floor_float_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] mask_table1_address0;
reg    mask_table1_ce0;
wire   [22:0] mask_table1_q0;
reg   [0:0] p_Result_s_reg_278;
reg   [7:0] tmp_V_reg_287;
wire   [22:0] tmp_V_1_fu_83_p1;
reg   [22:0] tmp_V_1_reg_295;
wire   [30:0] tmp_3_fu_102_p1;
reg   [30:0] tmp_3_reg_306;
wire   [63:0] tmp_8_fu_97_p1;
wire   [31:0] p_Val2_s_fu_61_p1;
wire   [4:0] index_V_fu_87_p4;
wire    ap_CS_fsm_state2;
wire   [31:0] p_Result_6_fu_127_p3;
wire   [31:0] mask_cast_fu_123_p1;
wire   [31:0] p_Val2_1_fu_134_p2;
wire   [22:0] tmp_V_3_fu_158_p1;
wire   [7:0] tmp_V_2_fu_148_p4;
wire   [0:0] p_Result_7_fu_140_p3;
wire   [22:0] xs_sig_V_3_fu_162_p3;
wire   [22:0] tmp_s_fu_179_p2;
wire   [0:0] xs_sign_V_fu_174_p2;
wire   [7:0] xs_exp_V_fu_168_p3;
wire   [22:0] xs_sig_V_fu_185_p2;
wire   [0:0] tmp_fu_106_p2;
wire   [0:0] tmp_5_fu_111_p2;
wire   [0:0] sel_tmp2_demorgan_fu_201_p2;
wire   [31:0] p_Result_5_fu_116_p3;
wire   [31:0] p_Result_8_fu_191_p4;
wire   [31:0] sel_tmp3_v_fu_207_p3;
wire   [0:0] sel_tmp4_fu_219_p2;
wire   [0:0] sel_tmp5_fu_225_p2;
wire   [31:0] sel_tmp3_fu_215_p1;
wire   [0:0] notrhs_fu_243_p2;
wire   [0:0] notlhs_fu_238_p2;
wire   [0:0] sel_tmp8_fu_248_p2;
wire   [0:0] tmp2_fu_254_p2;
wire   [0:0] sel_tmp9_fu_259_p2;
wire   [31:0] sel_tmp6_fu_231_p3;
wire   [31:0] p_s_fu_265_p3;
reg   [31:0] ap_return_preg;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_return_preg = 32'd0;
end

generic_floor_float_s_mask_table1 #(
    .DataWidth( 23 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mask_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table1_address0),
    .ce0(mask_table1_ce0),
    .q0(mask_table1_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_return_preg <= p_s_fu_265_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Result_s_reg_278 <= p_Val2_s_fu_61_p1[32'd31];
        tmp_3_reg_306 <= tmp_3_fu_102_p1;
        tmp_V_1_reg_295 <= tmp_V_1_fu_83_p1;
        tmp_V_reg_287 <= {{p_Val2_s_fu_61_p1[30:23]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_return = p_s_fu_265_p3;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mask_table1_ce0 = 1'b1;
    end else begin
        mask_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign index_V_fu_87_p4 = {{p_Val2_s_fu_61_p1[27:23]}};

assign mask_cast_fu_123_p1 = mask_table1_q0;

assign mask_table1_address0 = tmp_8_fu_97_p1;

assign notlhs_fu_238_p2 = ((tmp_V_1_reg_295 != 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_243_p2 = ((tmp_V_reg_287 != 8'd0) ? 1'b1 : 1'b0);

assign p_Result_5_fu_116_p3 = {{p_Result_s_reg_278}, {31'd0}};

assign p_Result_6_fu_127_p3 = {{1'd1}, {tmp_3_reg_306}};

assign p_Result_7_fu_140_p3 = p_Val2_1_fu_134_p2[32'd31];

assign p_Result_8_fu_191_p4 = {{{xs_sign_V_fu_174_p2}, {xs_exp_V_fu_168_p3}}, {xs_sig_V_fu_185_p2}};

assign p_Val2_1_fu_134_p2 = (p_Result_6_fu_127_p3 + mask_cast_fu_123_p1);

assign p_Val2_s_fu_61_p1 = x;

assign p_s_fu_265_p3 = ((sel_tmp9_fu_259_p2[0:0] === 1'b1) ? 32'd3212836864 : sel_tmp6_fu_231_p3);

assign sel_tmp2_demorgan_fu_201_p2 = (tmp_fu_106_p2 | tmp_5_fu_111_p2);

assign sel_tmp3_fu_215_p1 = sel_tmp3_v_fu_207_p3;

assign sel_tmp3_v_fu_207_p3 = ((sel_tmp2_demorgan_fu_201_p2[0:0] === 1'b1) ? p_Result_5_fu_116_p3 : p_Result_8_fu_191_p4);

assign sel_tmp4_fu_219_p2 = (tmp_fu_106_p2 ^ 1'd1);

assign sel_tmp5_fu_225_p2 = (tmp_5_fu_111_p2 & sel_tmp4_fu_219_p2);

assign sel_tmp6_fu_231_p3 = ((sel_tmp5_fu_225_p2[0:0] === 1'b1) ? x : sel_tmp3_fu_215_p1);

assign sel_tmp8_fu_248_p2 = (notrhs_fu_243_p2 | notlhs_fu_238_p2);

assign sel_tmp9_fu_259_p2 = (tmp_fu_106_p2 & tmp2_fu_254_p2);

assign tmp2_fu_254_p2 = (sel_tmp8_fu_248_p2 & p_Result_s_reg_278);

assign tmp_3_fu_102_p1 = p_Val2_s_fu_61_p1[30:0];

assign tmp_5_fu_111_p2 = ((tmp_V_reg_287 > 8'd150) ? 1'b1 : 1'b0);

assign tmp_8_fu_97_p1 = index_V_fu_87_p4;

assign tmp_V_1_fu_83_p1 = p_Val2_s_fu_61_p1[22:0];

assign tmp_V_2_fu_148_p4 = {{p_Val2_1_fu_134_p2[30:23]}};

assign tmp_V_3_fu_158_p1 = p_Val2_1_fu_134_p2[22:0];

assign tmp_fu_106_p2 = ((tmp_V_reg_287 < 8'd127) ? 1'b1 : 1'b0);

assign tmp_s_fu_179_p2 = (mask_table1_q0 ^ 23'd8388607);

assign xs_exp_V_fu_168_p3 = ((p_Result_s_reg_278[0:0] === 1'b1) ? tmp_V_2_fu_148_p4 : tmp_V_reg_287);

assign xs_sig_V_3_fu_162_p3 = ((p_Result_s_reg_278[0:0] === 1'b1) ? tmp_V_3_fu_158_p1 : tmp_V_1_reg_295);

assign xs_sig_V_fu_185_p2 = (xs_sig_V_3_fu_162_p3 & tmp_s_fu_179_p2);

assign xs_sign_V_fu_174_p2 = (p_Result_s_reg_278 & p_Result_7_fu_140_p3);

endmodule //generic_floor_float_s
